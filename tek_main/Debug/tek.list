
tek.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000073fc  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003c4  0800758c  0800758c  0001758c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007950  08007950  00020060  2**0
                  CONTENTS
  4 .ARM          00000008  08007950  08007950  00017950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007958  08007958  00020060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000000c  08007958  08007958  00017958  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   0000000c  08007964  08007964  00017964  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  08007970  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020060  2**0
                  CONTENTS
 10 .bss          00004e78  20000060  20000060  00020060  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20004ed8  20004ed8  00020060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 14 .debug_info   0003775e  00000000  00000000  000200d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00005454  00000000  00000000  00057831  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001630  00000000  00000000  0005cc88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000010fe  00000000  00000000  0005e2b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00008a33  00000000  00000000  0005f3b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00018a13  00000000  00000000  00067de9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000ec76d  00000000  00000000  000807fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000782c  00000000  00000000  0016cf6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000040  00000000  00000000  00174798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000060 	.word	0x20000060
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08007574 	.word	0x08007574

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000064 	.word	0x20000064
 80001cc:	08007574 	.word	0x08007574

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b970 	b.w	8000578 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9e08      	ldr	r6, [sp, #32]
 80002b6:	460d      	mov	r5, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	460f      	mov	r7, r1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d14a      	bne.n	8000356 <__udivmoddi4+0xa6>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4694      	mov	ip, r2
 80002c4:	d965      	bls.n	8000392 <__udivmoddi4+0xe2>
 80002c6:	fab2 f382 	clz	r3, r2
 80002ca:	b143      	cbz	r3, 80002de <__udivmoddi4+0x2e>
 80002cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002d0:	f1c3 0220 	rsb	r2, r3, #32
 80002d4:	409f      	lsls	r7, r3
 80002d6:	fa20 f202 	lsr.w	r2, r0, r2
 80002da:	4317      	orrs	r7, r2
 80002dc:	409c      	lsls	r4, r3
 80002de:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002e2:	fa1f f58c 	uxth.w	r5, ip
 80002e6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002ea:	0c22      	lsrs	r2, r4, #16
 80002ec:	fb0e 7711 	mls	r7, lr, r1, r7
 80002f0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80002f4:	fb01 f005 	mul.w	r0, r1, r5
 80002f8:	4290      	cmp	r0, r2
 80002fa:	d90a      	bls.n	8000312 <__udivmoddi4+0x62>
 80002fc:	eb1c 0202 	adds.w	r2, ip, r2
 8000300:	f101 37ff 	add.w	r7, r1, #4294967295
 8000304:	f080 811c 	bcs.w	8000540 <__udivmoddi4+0x290>
 8000308:	4290      	cmp	r0, r2
 800030a:	f240 8119 	bls.w	8000540 <__udivmoddi4+0x290>
 800030e:	3902      	subs	r1, #2
 8000310:	4462      	add	r2, ip
 8000312:	1a12      	subs	r2, r2, r0
 8000314:	b2a4      	uxth	r4, r4
 8000316:	fbb2 f0fe 	udiv	r0, r2, lr
 800031a:	fb0e 2210 	mls	r2, lr, r0, r2
 800031e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000322:	fb00 f505 	mul.w	r5, r0, r5
 8000326:	42a5      	cmp	r5, r4
 8000328:	d90a      	bls.n	8000340 <__udivmoddi4+0x90>
 800032a:	eb1c 0404 	adds.w	r4, ip, r4
 800032e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000332:	f080 8107 	bcs.w	8000544 <__udivmoddi4+0x294>
 8000336:	42a5      	cmp	r5, r4
 8000338:	f240 8104 	bls.w	8000544 <__udivmoddi4+0x294>
 800033c:	4464      	add	r4, ip
 800033e:	3802      	subs	r0, #2
 8000340:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000344:	1b64      	subs	r4, r4, r5
 8000346:	2100      	movs	r1, #0
 8000348:	b11e      	cbz	r6, 8000352 <__udivmoddi4+0xa2>
 800034a:	40dc      	lsrs	r4, r3
 800034c:	2300      	movs	r3, #0
 800034e:	e9c6 4300 	strd	r4, r3, [r6]
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	428b      	cmp	r3, r1
 8000358:	d908      	bls.n	800036c <__udivmoddi4+0xbc>
 800035a:	2e00      	cmp	r6, #0
 800035c:	f000 80ed 	beq.w	800053a <__udivmoddi4+0x28a>
 8000360:	2100      	movs	r1, #0
 8000362:	e9c6 0500 	strd	r0, r5, [r6]
 8000366:	4608      	mov	r0, r1
 8000368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036c:	fab3 f183 	clz	r1, r3
 8000370:	2900      	cmp	r1, #0
 8000372:	d149      	bne.n	8000408 <__udivmoddi4+0x158>
 8000374:	42ab      	cmp	r3, r5
 8000376:	d302      	bcc.n	800037e <__udivmoddi4+0xce>
 8000378:	4282      	cmp	r2, r0
 800037a:	f200 80f8 	bhi.w	800056e <__udivmoddi4+0x2be>
 800037e:	1a84      	subs	r4, r0, r2
 8000380:	eb65 0203 	sbc.w	r2, r5, r3
 8000384:	2001      	movs	r0, #1
 8000386:	4617      	mov	r7, r2
 8000388:	2e00      	cmp	r6, #0
 800038a:	d0e2      	beq.n	8000352 <__udivmoddi4+0xa2>
 800038c:	e9c6 4700 	strd	r4, r7, [r6]
 8000390:	e7df      	b.n	8000352 <__udivmoddi4+0xa2>
 8000392:	b902      	cbnz	r2, 8000396 <__udivmoddi4+0xe6>
 8000394:	deff      	udf	#255	; 0xff
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	2b00      	cmp	r3, #0
 800039c:	f040 8090 	bne.w	80004c0 <__udivmoddi4+0x210>
 80003a0:	1a8a      	subs	r2, r1, r2
 80003a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003a6:	fa1f fe8c 	uxth.w	lr, ip
 80003aa:	2101      	movs	r1, #1
 80003ac:	fbb2 f5f7 	udiv	r5, r2, r7
 80003b0:	fb07 2015 	mls	r0, r7, r5, r2
 80003b4:	0c22      	lsrs	r2, r4, #16
 80003b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ba:	fb0e f005 	mul.w	r0, lr, r5
 80003be:	4290      	cmp	r0, r2
 80003c0:	d908      	bls.n	80003d4 <__udivmoddi4+0x124>
 80003c2:	eb1c 0202 	adds.w	r2, ip, r2
 80003c6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003ca:	d202      	bcs.n	80003d2 <__udivmoddi4+0x122>
 80003cc:	4290      	cmp	r0, r2
 80003ce:	f200 80cb 	bhi.w	8000568 <__udivmoddi4+0x2b8>
 80003d2:	4645      	mov	r5, r8
 80003d4:	1a12      	subs	r2, r2, r0
 80003d6:	b2a4      	uxth	r4, r4
 80003d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003dc:	fb07 2210 	mls	r2, r7, r0, r2
 80003e0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003e4:	fb0e fe00 	mul.w	lr, lr, r0
 80003e8:	45a6      	cmp	lr, r4
 80003ea:	d908      	bls.n	80003fe <__udivmoddi4+0x14e>
 80003ec:	eb1c 0404 	adds.w	r4, ip, r4
 80003f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f4:	d202      	bcs.n	80003fc <__udivmoddi4+0x14c>
 80003f6:	45a6      	cmp	lr, r4
 80003f8:	f200 80bb 	bhi.w	8000572 <__udivmoddi4+0x2c2>
 80003fc:	4610      	mov	r0, r2
 80003fe:	eba4 040e 	sub.w	r4, r4, lr
 8000402:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000406:	e79f      	b.n	8000348 <__udivmoddi4+0x98>
 8000408:	f1c1 0720 	rsb	r7, r1, #32
 800040c:	408b      	lsls	r3, r1
 800040e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000412:	ea4c 0c03 	orr.w	ip, ip, r3
 8000416:	fa05 f401 	lsl.w	r4, r5, r1
 800041a:	fa20 f307 	lsr.w	r3, r0, r7
 800041e:	40fd      	lsrs	r5, r7
 8000420:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000424:	4323      	orrs	r3, r4
 8000426:	fbb5 f8f9 	udiv	r8, r5, r9
 800042a:	fa1f fe8c 	uxth.w	lr, ip
 800042e:	fb09 5518 	mls	r5, r9, r8, r5
 8000432:	0c1c      	lsrs	r4, r3, #16
 8000434:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000438:	fb08 f50e 	mul.w	r5, r8, lr
 800043c:	42a5      	cmp	r5, r4
 800043e:	fa02 f201 	lsl.w	r2, r2, r1
 8000442:	fa00 f001 	lsl.w	r0, r0, r1
 8000446:	d90b      	bls.n	8000460 <__udivmoddi4+0x1b0>
 8000448:	eb1c 0404 	adds.w	r4, ip, r4
 800044c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000450:	f080 8088 	bcs.w	8000564 <__udivmoddi4+0x2b4>
 8000454:	42a5      	cmp	r5, r4
 8000456:	f240 8085 	bls.w	8000564 <__udivmoddi4+0x2b4>
 800045a:	f1a8 0802 	sub.w	r8, r8, #2
 800045e:	4464      	add	r4, ip
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	b29d      	uxth	r5, r3
 8000464:	fbb4 f3f9 	udiv	r3, r4, r9
 8000468:	fb09 4413 	mls	r4, r9, r3, r4
 800046c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000470:	fb03 fe0e 	mul.w	lr, r3, lr
 8000474:	45a6      	cmp	lr, r4
 8000476:	d908      	bls.n	800048a <__udivmoddi4+0x1da>
 8000478:	eb1c 0404 	adds.w	r4, ip, r4
 800047c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000480:	d26c      	bcs.n	800055c <__udivmoddi4+0x2ac>
 8000482:	45a6      	cmp	lr, r4
 8000484:	d96a      	bls.n	800055c <__udivmoddi4+0x2ac>
 8000486:	3b02      	subs	r3, #2
 8000488:	4464      	add	r4, ip
 800048a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800048e:	fba3 9502 	umull	r9, r5, r3, r2
 8000492:	eba4 040e 	sub.w	r4, r4, lr
 8000496:	42ac      	cmp	r4, r5
 8000498:	46c8      	mov	r8, r9
 800049a:	46ae      	mov	lr, r5
 800049c:	d356      	bcc.n	800054c <__udivmoddi4+0x29c>
 800049e:	d053      	beq.n	8000548 <__udivmoddi4+0x298>
 80004a0:	b156      	cbz	r6, 80004b8 <__udivmoddi4+0x208>
 80004a2:	ebb0 0208 	subs.w	r2, r0, r8
 80004a6:	eb64 040e 	sbc.w	r4, r4, lr
 80004aa:	fa04 f707 	lsl.w	r7, r4, r7
 80004ae:	40ca      	lsrs	r2, r1
 80004b0:	40cc      	lsrs	r4, r1
 80004b2:	4317      	orrs	r7, r2
 80004b4:	e9c6 7400 	strd	r7, r4, [r6]
 80004b8:	4618      	mov	r0, r3
 80004ba:	2100      	movs	r1, #0
 80004bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004c0:	f1c3 0120 	rsb	r1, r3, #32
 80004c4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004c8:	fa20 f201 	lsr.w	r2, r0, r1
 80004cc:	fa25 f101 	lsr.w	r1, r5, r1
 80004d0:	409d      	lsls	r5, r3
 80004d2:	432a      	orrs	r2, r5
 80004d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004d8:	fa1f fe8c 	uxth.w	lr, ip
 80004dc:	fbb1 f0f7 	udiv	r0, r1, r7
 80004e0:	fb07 1510 	mls	r5, r7, r0, r1
 80004e4:	0c11      	lsrs	r1, r2, #16
 80004e6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004ea:	fb00 f50e 	mul.w	r5, r0, lr
 80004ee:	428d      	cmp	r5, r1
 80004f0:	fa04 f403 	lsl.w	r4, r4, r3
 80004f4:	d908      	bls.n	8000508 <__udivmoddi4+0x258>
 80004f6:	eb1c 0101 	adds.w	r1, ip, r1
 80004fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80004fe:	d22f      	bcs.n	8000560 <__udivmoddi4+0x2b0>
 8000500:	428d      	cmp	r5, r1
 8000502:	d92d      	bls.n	8000560 <__udivmoddi4+0x2b0>
 8000504:	3802      	subs	r0, #2
 8000506:	4461      	add	r1, ip
 8000508:	1b49      	subs	r1, r1, r5
 800050a:	b292      	uxth	r2, r2
 800050c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000510:	fb07 1115 	mls	r1, r7, r5, r1
 8000514:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000518:	fb05 f10e 	mul.w	r1, r5, lr
 800051c:	4291      	cmp	r1, r2
 800051e:	d908      	bls.n	8000532 <__udivmoddi4+0x282>
 8000520:	eb1c 0202 	adds.w	r2, ip, r2
 8000524:	f105 38ff 	add.w	r8, r5, #4294967295
 8000528:	d216      	bcs.n	8000558 <__udivmoddi4+0x2a8>
 800052a:	4291      	cmp	r1, r2
 800052c:	d914      	bls.n	8000558 <__udivmoddi4+0x2a8>
 800052e:	3d02      	subs	r5, #2
 8000530:	4462      	add	r2, ip
 8000532:	1a52      	subs	r2, r2, r1
 8000534:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000538:	e738      	b.n	80003ac <__udivmoddi4+0xfc>
 800053a:	4631      	mov	r1, r6
 800053c:	4630      	mov	r0, r6
 800053e:	e708      	b.n	8000352 <__udivmoddi4+0xa2>
 8000540:	4639      	mov	r1, r7
 8000542:	e6e6      	b.n	8000312 <__udivmoddi4+0x62>
 8000544:	4610      	mov	r0, r2
 8000546:	e6fb      	b.n	8000340 <__udivmoddi4+0x90>
 8000548:	4548      	cmp	r0, r9
 800054a:	d2a9      	bcs.n	80004a0 <__udivmoddi4+0x1f0>
 800054c:	ebb9 0802 	subs.w	r8, r9, r2
 8000550:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000554:	3b01      	subs	r3, #1
 8000556:	e7a3      	b.n	80004a0 <__udivmoddi4+0x1f0>
 8000558:	4645      	mov	r5, r8
 800055a:	e7ea      	b.n	8000532 <__udivmoddi4+0x282>
 800055c:	462b      	mov	r3, r5
 800055e:	e794      	b.n	800048a <__udivmoddi4+0x1da>
 8000560:	4640      	mov	r0, r8
 8000562:	e7d1      	b.n	8000508 <__udivmoddi4+0x258>
 8000564:	46d0      	mov	r8, sl
 8000566:	e77b      	b.n	8000460 <__udivmoddi4+0x1b0>
 8000568:	3d02      	subs	r5, #2
 800056a:	4462      	add	r2, ip
 800056c:	e732      	b.n	80003d4 <__udivmoddi4+0x124>
 800056e:	4608      	mov	r0, r1
 8000570:	e70a      	b.n	8000388 <__udivmoddi4+0xd8>
 8000572:	4464      	add	r4, ip
 8000574:	3802      	subs	r0, #2
 8000576:	e742      	b.n	80003fe <__udivmoddi4+0x14e>

08000578 <__aeabi_idiv0>:
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop

0800057c <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 800057c:	b580      	push	{r7, lr}
 800057e:	b082      	sub	sp, #8
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	2200      	movs	r2, #0
 8000588:	701a      	strb	r2, [r3, #0]
      _M_reset();
 800058a:	6878      	ldr	r0, [r7, #4]
 800058c:	f000 f805 	bl	800059a <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	4618      	mov	r0, r3
 8000594:	3708      	adds	r7, #8
 8000596:	46bd      	mov	sp, r7
 8000598:	bd80      	pop	{r7, pc}

0800059a <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 800059a:	b480      	push	{r7}
 800059c:	b083      	sub	sp, #12
 800059e:	af00      	add	r7, sp, #0
 80005a0:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	2200      	movs	r2, #0
 80005a6:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 80005a8:	687a      	ldr	r2, [r7, #4]
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 80005ae:	687a      	ldr	r2, [r7, #4]
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	2200      	movs	r2, #0
 80005b8:	611a      	str	r2, [r3, #16]
    }
 80005ba:	bf00      	nop
 80005bc:	370c      	adds	r7, #12
 80005be:	46bd      	mov	sp, r7
 80005c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c4:	4770      	bx	lr

080005c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
 80005c6:	b580      	push	{r7, lr}
 80005c8:	b082      	sub	sp, #8
 80005ca:	af00      	add	r7, sp, #0
 80005cc:	6078      	str	r0, [r7, #4]
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	4618      	mov	r0, r3
 80005d2:	f000 f830 	bl	8000636 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	4618      	mov	r0, r3
 80005da:	3708      	adds	r7, #8
 80005dc:	46bd      	mov	sp, r7
 80005de:	bd80      	pop	{r7, pc}

080005e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
 80005e0:	b580      	push	{r7, lr}
 80005e2:	b082      	sub	sp, #8
 80005e4:	af00      	add	r7, sp, #0
 80005e6:	6078      	str	r0, [r7, #4]
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	4618      	mov	r0, r3
 80005ec:	f7ff ffeb 	bl	80005c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	4618      	mov	r0, r3
 80005f4:	3708      	adds	r7, #8
 80005f6:	46bd      	mov	sp, r7
 80005f8:	bd80      	pop	{r7, pc}

080005fa <_ZN16GlobalDataKeeperC1Ev>:
 80005fa:	b580      	push	{r7, lr}
 80005fc:	b082      	sub	sp, #8
 80005fe:	af00      	add	r7, sp, #0
 8000600:	6078      	str	r0, [r7, #4]
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	3304      	adds	r3, #4
 8000606:	4618      	mov	r0, r3
 8000608:	f7ff ffea 	bl	80005e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC1Ev>
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	227b      	movs	r2, #123	; 0x7b
 8000610:	601a      	str	r2, [r3, #0]
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	4618      	mov	r0, r3
 8000616:	3708      	adds	r7, #8
 8000618:	46bd      	mov	sp, r7
 800061a:	bd80      	pop	{r7, pc}

0800061c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiED1Ev>:
   *  @tparam _T2  Type of second object.
   *
   *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
   */
  template<typename _T1, typename _T2>
    struct pair
 800061c:	b580      	push	{r7, lr}
 800061e:	b082      	sub	sp, #8
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	4618      	mov	r0, r3
 8000628:	f006 f95f 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	4618      	mov	r0, r3
 8000630:	3708      	adds	r7, #8
 8000632:	46bd      	mov	sp, r7
 8000634:	bd80      	pop	{r7, pc}

08000636 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 8000636:	b580      	push	{r7, lr}
 8000638:	b082      	sub	sp, #8
 800063a:	af00      	add	r7, sp, #0
 800063c:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 800063e:	6878      	ldr	r0, [r7, #4]
 8000640:	f000 f80e 	bl	8000660 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEC1Ev>
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	4618      	mov	r0, r3
 8000648:	f000 f816 	bl	8000678 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	3304      	adds	r3, #4
 8000650:	4618      	mov	r0, r3
 8000652:	f7ff ff93 	bl	800057c <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	4618      	mov	r0, r3
 800065a:	3708      	adds	r7, #8
 800065c:	46bd      	mov	sp, r7
 800065e:	bd80      	pop	{r7, pc}

08000660 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 8000660:	b580      	push	{r7, lr}
 8000662:	b082      	sub	sp, #8
 8000664:	af00      	add	r7, sp, #0
 8000666:	6078      	str	r0, [r7, #4]
 8000668:	6878      	ldr	r0, [r7, #4]
 800066a:	f000 f855 	bl	8000718 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEC1Ev>
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	4618      	mov	r0, r3
 8000672:	3708      	adds	r7, #8
 8000674:	46bd      	mov	sp, r7
 8000676:	bd80      	pop	{r7, pc}

08000678 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
 8000678:	b480      	push	{r7}
 800067a:	b083      	sub	sp, #12
 800067c:	af00      	add	r7, sp, #0
 800067e:	6078      	str	r0, [r7, #4]
      { }
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	4618      	mov	r0, r3
 8000684:	370c      	adds	r7, #12
 8000686:	46bd      	mov	sp, r7
 8000688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800068c:	4770      	bx	lr

0800068e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800068e:	b580      	push	{r7, lr}
 8000690:	b084      	sub	sp, #16
 8000692:	af00      	add	r7, sp, #0
 8000694:	6078      	str	r0, [r7, #4]
 8000696:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 8000698:	e011      	b.n	80006be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x30>
	{
	  _M_erase(_S_right(__x));
 800069a:	6838      	ldr	r0, [r7, #0]
 800069c:	f000 f847 	bl	800072e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
 80006a0:	4603      	mov	r3, r0
 80006a2:	4619      	mov	r1, r3
 80006a4:	6878      	ldr	r0, [r7, #4]
 80006a6:	f7ff fff2 	bl	800068e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
 80006aa:	6838      	ldr	r0, [r7, #0]
 80006ac:	f000 f84b 	bl	8000746 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
 80006b0:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80006b2:	6839      	ldr	r1, [r7, #0]
 80006b4:	6878      	ldr	r0, [r7, #4]
 80006b6:	f000 f852 	bl	800075e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
 80006ba:	68fb      	ldr	r3, [r7, #12]
 80006bc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80006be:	683b      	ldr	r3, [r7, #0]
 80006c0:	2b00      	cmp	r3, #0
 80006c2:	d1ea      	bne.n	800069a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0xc>
	}
    }
 80006c4:	bf00      	nop
 80006c6:	bf00      	nop
 80006c8:	3710      	adds	r7, #16
 80006ca:	46bd      	mov	sp, r7
 80006cc:	bd80      	pop	{r7, pc}

080006ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80006ce:	b580      	push	{r7, lr}
 80006d0:	b082      	sub	sp, #8
 80006d2:	af00      	add	r7, sp, #0
 80006d4:	6078      	str	r0, [r7, #4]
      { return _M_mbegin(); }
 80006d6:	6878      	ldr	r0, [r7, #4]
 80006d8:	f000 f852 	bl	8000780 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
 80006dc:	4603      	mov	r3, r0
 80006de:	4618      	mov	r0, r3
 80006e0:	3708      	adds	r7, #8
 80006e2:	46bd      	mov	sp, r7
 80006e4:	bd80      	pop	{r7, pc}

080006e6 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 80006e6:	b480      	push	{r7}
 80006e8:	b083      	sub	sp, #12
 80006ea:	af00      	add	r7, sp, #0
 80006ec:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	4618      	mov	r0, r3
 80006f2:	370c      	adds	r7, #12
 80006f4:	46bd      	mov	sp, r7
 80006f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006fa:	4770      	bx	lr

080006fc <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEE9_M_valptrEv>:
      _M_valptr()
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b082      	sub	sp, #8
 8000700:	af00      	add	r7, sp, #0
 8000702:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	3310      	adds	r3, #16
 8000708:	4618      	mov	r0, r3
 800070a:	f000 f845 	bl	8000798 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEE6_M_ptrEv>
 800070e:	4603      	mov	r3, r0
 8000710:	4618      	mov	r0, r3
 8000712:	3708      	adds	r7, #8
 8000714:	46bd      	mov	sp, r7
 8000716:	bd80      	pop	{r7, pc}

08000718 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8000718:	b480      	push	{r7}
 800071a:	b083      	sub	sp, #12
 800071c:	af00      	add	r7, sp, #0
 800071e:	6078      	str	r0, [r7, #4]
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	4618      	mov	r0, r3
 8000724:	370c      	adds	r7, #12
 8000726:	46bd      	mov	sp, r7
 8000728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800072c:	4770      	bx	lr

0800072e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800072e:	b480      	push	{r7}
 8000730:	b083      	sub	sp, #12
 8000732:	af00      	add	r7, sp, #0
 8000734:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	68db      	ldr	r3, [r3, #12]
 800073a:	4618      	mov	r0, r3
 800073c:	370c      	adds	r7, #12
 800073e:	46bd      	mov	sp, r7
 8000740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000744:	4770      	bx	lr

08000746 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8000746:	b480      	push	{r7}
 8000748:	b083      	sub	sp, #12
 800074a:	af00      	add	r7, sp, #0
 800074c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	689b      	ldr	r3, [r3, #8]
 8000752:	4618      	mov	r0, r3
 8000754:	370c      	adds	r7, #12
 8000756:	46bd      	mov	sp, r7
 8000758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800075c:	4770      	bx	lr

0800075e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800075e:	b580      	push	{r7, lr}
 8000760:	b082      	sub	sp, #8
 8000762:	af00      	add	r7, sp, #0
 8000764:	6078      	str	r0, [r7, #4]
 8000766:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8000768:	6839      	ldr	r1, [r7, #0]
 800076a:	6878      	ldr	r0, [r7, #4]
 800076c:	f000 f820 	bl	80007b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
 8000770:	6839      	ldr	r1, [r7, #0]
 8000772:	6878      	ldr	r0, [r7, #4]
 8000774:	f000 f831 	bl	80007da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
 8000778:	bf00      	nop
 800077a:	3708      	adds	r7, #8
 800077c:	46bd      	mov	sp, r7
 800077e:	bd80      	pop	{r7, pc}

08000780 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
 8000780:	b480      	push	{r7}
 8000782:	b083      	sub	sp, #12
 8000784:	af00      	add	r7, sp, #0
 8000786:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	689b      	ldr	r3, [r3, #8]
 800078c:	4618      	mov	r0, r3
 800078e:	370c      	adds	r7, #12
 8000790:	46bd      	mov	sp, r7
 8000792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000796:	4770      	bx	lr

08000798 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
 8000798:	b580      	push	{r7, lr}
 800079a:	b082      	sub	sp, #8
 800079c:	af00      	add	r7, sp, #0
 800079e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 80007a0:	6878      	ldr	r0, [r7, #4]
 80007a2:	f000 f82c 	bl	80007fe <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEE7_M_addrEv>
 80007a6:	4603      	mov	r3, r0
 80007a8:	4618      	mov	r0, r3
 80007aa:	3708      	adds	r7, #8
 80007ac:	46bd      	mov	sp, r7
 80007ae:	bd80      	pop	{r7, pc}

080007b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80007b0:	b590      	push	{r4, r7, lr}
 80007b2:	b083      	sub	sp, #12
 80007b4:	af00      	add	r7, sp, #0
 80007b6:	6078      	str	r0, [r7, #4]
 80007b8:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80007ba:	6878      	ldr	r0, [r7, #4]
 80007bc:	f000 f82a 	bl	8000814 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
 80007c0:	4604      	mov	r4, r0
 80007c2:	6838      	ldr	r0, [r7, #0]
 80007c4:	f7ff ff9a 	bl	80006fc <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEE9_M_valptrEv>
 80007c8:	4603      	mov	r3, r0
 80007ca:	4619      	mov	r1, r3
 80007cc:	4620      	mov	r0, r4
 80007ce:	f000 f82c 	bl	800082a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEE7destroyIS9_EEvRSB_PT_>
      }
 80007d2:	bf00      	nop
 80007d4:	370c      	adds	r7, #12
 80007d6:	46bd      	mov	sp, r7
 80007d8:	bd90      	pop	{r4, r7, pc}

080007da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80007da:	b580      	push	{r7, lr}
 80007dc:	b082      	sub	sp, #8
 80007de:	af00      	add	r7, sp, #0
 80007e0:	6078      	str	r0, [r7, #4]
 80007e2:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 80007e4:	6878      	ldr	r0, [r7, #4]
 80007e6:	f000 f815 	bl	8000814 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
 80007ea:	4603      	mov	r3, r0
 80007ec:	2201      	movs	r2, #1
 80007ee:	6839      	ldr	r1, [r7, #0]
 80007f0:	4618      	mov	r0, r3
 80007f2:	f000 f827 	bl	8000844 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEE10deallocateERSB_PSA_j>
 80007f6:	bf00      	nop
 80007f8:	3708      	adds	r7, #8
 80007fa:	46bd      	mov	sp, r7
 80007fc:	bd80      	pop	{r7, pc}

080007fe <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEE7_M_addrEv>:
      _M_addr() noexcept
 80007fe:	b480      	push	{r7}
 8000800:	b083      	sub	sp, #12
 8000802:	af00      	add	r7, sp, #0
 8000804:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	4618      	mov	r0, r3
 800080a:	370c      	adds	r7, #12
 800080c:	46bd      	mov	sp, r7
 800080e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000812:	4770      	bx	lr

08000814 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8000814:	b480      	push	{r7}
 8000816:	b083      	sub	sp, #12
 8000818:	af00      	add	r7, sp, #0
 800081a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	4618      	mov	r0, r3
 8000820:	370c      	adds	r7, #12
 8000822:	46bd      	mov	sp, r7
 8000824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000828:	4770      	bx	lr

0800082a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEE7destroyIS9_EEvRSB_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static _GLIBCXX20_CONSTEXPR void
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 800082a:	b580      	push	{r7, lr}
 800082c:	b082      	sub	sp, #8
 800082e:	af00      	add	r7, sp, #0
 8000830:	6078      	str	r0, [r7, #4]
 8000832:	6039      	str	r1, [r7, #0]
	noexcept(is_nothrow_destructible<_Up>::value)
	{
#if __cplusplus <= 201703L
	  __a.destroy(__p);
 8000834:	6839      	ldr	r1, [r7, #0]
 8000836:	6878      	ldr	r0, [r7, #4]
 8000838:	f000 f813 	bl	8000862 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE7destroyISA_EEvPT_>
#else
	  std::destroy_at(__p);
#endif
	}
 800083c:	bf00      	nop
 800083e:	3708      	adds	r7, #8
 8000840:	46bd      	mov	sp, r7
 8000842:	bd80      	pop	{r7, pc}

08000844 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEE10deallocateERSB_PSA_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8000844:	b580      	push	{r7, lr}
 8000846:	b084      	sub	sp, #16
 8000848:	af00      	add	r7, sp, #0
 800084a:	60f8      	str	r0, [r7, #12]
 800084c:	60b9      	str	r1, [r7, #8]
 800084e:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8000850:	687a      	ldr	r2, [r7, #4]
 8000852:	68b9      	ldr	r1, [r7, #8]
 8000854:	68f8      	ldr	r0, [r7, #12]
 8000856:	f000 f810 	bl	800087a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE10deallocateEPSB_j>
 800085a:	bf00      	nop
 800085c:	3710      	adds	r7, #16
 800085e:	46bd      	mov	sp, r7
 8000860:	bd80      	pop	{r7, pc}

08000862 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE7destroyISA_EEvPT_>:
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 8000862:	b580      	push	{r7, lr}
 8000864:	b082      	sub	sp, #8
 8000866:	af00      	add	r7, sp, #0
 8000868:	6078      	str	r0, [r7, #4]
 800086a:	6039      	str	r1, [r7, #0]
	noexcept(std::is_nothrow_destructible<_Up>::value)
	{ __p->~_Up(); }
 800086c:	6838      	ldr	r0, [r7, #0]
 800086e:	f7ff fed5 	bl	800061c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiED1Ev>
 8000872:	bf00      	nop
 8000874:	3708      	adds	r7, #8
 8000876:	46bd      	mov	sp, r7
 8000878:	bd80      	pop	{r7, pc}

0800087a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE10deallocateEPSB_j>:
      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
 800087a:	b580      	push	{r7, lr}
 800087c:	b084      	sub	sp, #16
 800087e:	af00      	add	r7, sp, #0
 8000880:	60f8      	str	r0, [r7, #12]
 8000882:	60b9      	str	r1, [r7, #8]
 8000884:	607a      	str	r2, [r7, #4]
	::operator delete(__p
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	222c      	movs	r2, #44	; 0x2c
 800088a:	fb02 f303 	mul.w	r3, r2, r3
 800088e:	4619      	mov	r1, r3
 8000890:	68b8      	ldr	r0, [r7, #8]
 8000892:	f005 ff5b 	bl	800674c <_ZdlPvj>
      }
 8000896:	bf00      	nop
 8000898:	3710      	adds	r7, #16
 800089a:	46bd      	mov	sp, r7
 800089c:	bd80      	pop	{r7, pc}
	...

080008a0 <_Z41__static_initialization_and_destruction_0ii>:
 80008a0:	b580      	push	{r7, lr}
 80008a2:	b082      	sub	sp, #8
 80008a4:	af00      	add	r7, sp, #0
 80008a6:	6078      	str	r0, [r7, #4]
 80008a8:	6039      	str	r1, [r7, #0]
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	2b01      	cmp	r3, #1
 80008ae:	d107      	bne.n	80008c0 <_Z41__static_initialization_and_destruction_0ii+0x20>
 80008b0:	683b      	ldr	r3, [r7, #0]
 80008b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80008b6:	4293      	cmp	r3, r2
 80008b8:	d102      	bne.n	80008c0 <_Z41__static_initialization_and_destruction_0ii+0x20>
 80008ba:	4809      	ldr	r0, [pc, #36]	; (80008e0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80008bc:	f005 ffed 	bl	800689a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 80008c0:	687b      	ldr	r3, [r7, #4]
 80008c2:	2b00      	cmp	r3, #0
 80008c4:	d107      	bne.n	80008d6 <_Z41__static_initialization_and_destruction_0ii+0x36>
 80008c6:	683b      	ldr	r3, [r7, #0]
 80008c8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80008cc:	4293      	cmp	r3, r2
 80008ce:	d102      	bne.n	80008d6 <_Z41__static_initialization_and_destruction_0ii+0x36>
 80008d0:	4803      	ldr	r0, [pc, #12]	; (80008e0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80008d2:	f006 f80a 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80008d6:	bf00      	nop
 80008d8:	3708      	adds	r7, #8
 80008da:	46bd      	mov	sp, r7
 80008dc:	bd80      	pop	{r7, pc}
 80008de:	bf00      	nop
 80008e0:	2000007c 	.word	0x2000007c

080008e4 <_GLOBAL__sub_I__Z13broker_adressB5cxx11>:
 80008e4:	b580      	push	{r7, lr}
 80008e6:	af00      	add	r7, sp, #0
 80008e8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80008ec:	2001      	movs	r0, #1
 80008ee:	f7ff ffd7 	bl	80008a0 <_Z41__static_initialization_and_destruction_0ii>
 80008f2:	bd80      	pop	{r7, pc}

080008f4 <_GLOBAL__sub_D__Z13broker_adressB5cxx11>:
 80008f4:	b580      	push	{r7, lr}
 80008f6:	af00      	add	r7, sp, #0
 80008f8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80008fc:	2000      	movs	r0, #0
 80008fe:	f7ff ffcf 	bl	80008a0 <_Z41__static_initialization_and_destruction_0ii>
 8000902:	bd80      	pop	{r7, pc}

08000904 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000904:	b580      	push	{r7, lr}
 8000906:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000908:	f000 ff8e 	bl	8001828 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800090c:	f000 f856 	bl	80009bc <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000910:	f000 f9a4 	bl	8000c5c <_ZL12MX_GPIO_Initv>
  MX_UART4_Init();
 8000914:	f000 f8ba 	bl	8000a8c <_ZL13MX_UART4_Initv>
  MX_USART1_UART_Init();
 8000918:	f000 f8e6 	bl	8000ae8 <_ZL19MX_USART1_UART_Initv>
  MX_USART2_UART_Init();
 800091c:	f000 f914 	bl	8000b48 <_ZL19MX_USART2_UART_Initv>
  MX_USART6_UART_Init();
 8000920:	f000 f96e 	bl	8000c00 <_ZL19MX_USART6_UART_Initv>
  MX_USART3_UART_Init();
 8000924:	f000 f93e 	bl	8000ba4 <_ZL19MX_USART3_UART_Initv>
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8000928:	f003 f8ca 	bl	8003ac0 <osKernelInitialize>
  /* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* Create the queue(s) */
  /* creation of modbas_to_mqtt */
  modbas_to_mqttHandle = osMessageQueueNew (350, sizeof(uint16_t), &modbas_to_mqtt_attributes);
 800092c:	4a15      	ldr	r2, [pc, #84]	; (8000984 <main+0x80>)
 800092e:	2102      	movs	r1, #2
 8000930:	f44f 70af 	mov.w	r0, #350	; 0x15e
 8000934:	f003 f9bb 	bl	8003cae <osMessageQueueNew>
 8000938:	4603      	mov	r3, r0
 800093a:	4a13      	ldr	r2, [pc, #76]	; (8000988 <main+0x84>)
 800093c:	6013      	str	r3, [r2, #0]
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800093e:	4a13      	ldr	r2, [pc, #76]	; (800098c <main+0x88>)
 8000940:	2100      	movs	r1, #0
 8000942:	4813      	ldr	r0, [pc, #76]	; (8000990 <main+0x8c>)
 8000944:	f003 f906 	bl	8003b54 <osThreadNew>
 8000948:	4603      	mov	r3, r0
 800094a:	4a12      	ldr	r2, [pc, #72]	; (8000994 <main+0x90>)
 800094c:	6013      	str	r3, [r2, #0]

  /* creation of ModemUart */
  ModemUartHandle = osThreadNew(ModemUartFunc, NULL, &ModemUart_attributes);
 800094e:	4a12      	ldr	r2, [pc, #72]	; (8000998 <main+0x94>)
 8000950:	2100      	movs	r1, #0
 8000952:	4812      	ldr	r0, [pc, #72]	; (800099c <main+0x98>)
 8000954:	f003 f8fe 	bl	8003b54 <osThreadNew>
 8000958:	4603      	mov	r3, r0
 800095a:	4a11      	ldr	r2, [pc, #68]	; (80009a0 <main+0x9c>)
 800095c:	6013      	str	r3, [r2, #0]

  /* creation of modbus */
  modbusHandle = osThreadNew(modbus_write, NULL, &modbus_attributes);
 800095e:	4a11      	ldr	r2, [pc, #68]	; (80009a4 <main+0xa0>)
 8000960:	2100      	movs	r1, #0
 8000962:	4811      	ldr	r0, [pc, #68]	; (80009a8 <main+0xa4>)
 8000964:	f003 f8f6 	bl	8003b54 <osThreadNew>
 8000968:	4603      	mov	r3, r0
 800096a:	4a10      	ldr	r2, [pc, #64]	; (80009ac <main+0xa8>)
 800096c:	6013      	str	r3, [r2, #0]

  /* creation of Worker */
  WorkerHandle = osThreadNew(Worker_func, NULL, &Worker_attributes);
 800096e:	4a10      	ldr	r2, [pc, #64]	; (80009b0 <main+0xac>)
 8000970:	2100      	movs	r1, #0
 8000972:	4810      	ldr	r0, [pc, #64]	; (80009b4 <main+0xb0>)
 8000974:	f003 f8ee 	bl	8003b54 <osThreadNew>
 8000978:	4603      	mov	r3, r0
 800097a:	4a0f      	ldr	r2, [pc, #60]	; (80009b8 <main+0xb4>)
 800097c:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 800097e:	f003 f8c3 	bl	8003b08 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000982:	e7fe      	b.n	8000982 <main+0x7e>
 8000984:	08007694 	.word	0x08007694
 8000988:	200001f8 	.word	0x200001f8
 800098c:	08007604 	.word	0x08007604
 8000990:	08000d31 	.word	0x08000d31
 8000994:	200001e8 	.word	0x200001e8
 8000998:	08007628 	.word	0x08007628
 800099c:	08000d51 	.word	0x08000d51
 80009a0:	200001ec 	.word	0x200001ec
 80009a4:	0800764c 	.word	0x0800764c
 80009a8:	08000e15 	.word	0x08000e15
 80009ac:	200001f0 	.word	0x200001f0
 80009b0:	08007670 	.word	0x08007670
 80009b4:	08000e85 	.word	0x08000e85
 80009b8:	200001f4 	.word	0x200001f4

080009bc <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80009bc:	b580      	push	{r7, lr}
 80009be:	b094      	sub	sp, #80	; 0x50
 80009c0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80009c2:	f107 0320 	add.w	r3, r7, #32
 80009c6:	2230      	movs	r2, #48	; 0x30
 80009c8:	2100      	movs	r1, #0
 80009ca:	4618      	mov	r0, r3
 80009cc:	f006 f97a 	bl	8006cc4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80009d0:	f107 030c 	add.w	r3, r7, #12
 80009d4:	2200      	movs	r2, #0
 80009d6:	601a      	str	r2, [r3, #0]
 80009d8:	605a      	str	r2, [r3, #4]
 80009da:	609a      	str	r2, [r3, #8]
 80009dc:	60da      	str	r2, [r3, #12]
 80009de:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80009e0:	2300      	movs	r3, #0
 80009e2:	60bb      	str	r3, [r7, #8]
 80009e4:	4b27      	ldr	r3, [pc, #156]	; (8000a84 <_Z18SystemClock_Configv+0xc8>)
 80009e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009e8:	4a26      	ldr	r2, [pc, #152]	; (8000a84 <_Z18SystemClock_Configv+0xc8>)
 80009ea:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80009ee:	6413      	str	r3, [r2, #64]	; 0x40
 80009f0:	4b24      	ldr	r3, [pc, #144]	; (8000a84 <_Z18SystemClock_Configv+0xc8>)
 80009f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009f4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80009f8:	60bb      	str	r3, [r7, #8]
 80009fa:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80009fc:	2300      	movs	r3, #0
 80009fe:	607b      	str	r3, [r7, #4]
 8000a00:	4b21      	ldr	r3, [pc, #132]	; (8000a88 <_Z18SystemClock_Configv+0xcc>)
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	4a20      	ldr	r2, [pc, #128]	; (8000a88 <_Z18SystemClock_Configv+0xcc>)
 8000a06:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000a0a:	6013      	str	r3, [r2, #0]
 8000a0c:	4b1e      	ldr	r3, [pc, #120]	; (8000a88 <_Z18SystemClock_Configv+0xcc>)
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000a14:	607b      	str	r3, [r7, #4]
 8000a16:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000a18:	2302      	movs	r3, #2
 8000a1a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000a1c:	2301      	movs	r3, #1
 8000a1e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000a20:	2310      	movs	r3, #16
 8000a22:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000a24:	2300      	movs	r3, #0
 8000a26:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a28:	f107 0320 	add.w	r3, r7, #32
 8000a2c:	4618      	mov	r0, r3
 8000a2e:	f001 fb05 	bl	800203c <HAL_RCC_OscConfig>
 8000a32:	4603      	mov	r3, r0
 8000a34:	2b00      	cmp	r3, #0
 8000a36:	bf14      	ite	ne
 8000a38:	2301      	movne	r3, #1
 8000a3a:	2300      	moveq	r3, #0
 8000a3c:	b2db      	uxtb	r3, r3
 8000a3e:	2b00      	cmp	r3, #0
 8000a40:	d001      	beq.n	8000a46 <_Z18SystemClock_Configv+0x8a>
  {
    Error_Handler();
 8000a42:	f000 fa33 	bl	8000eac <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a46:	230f      	movs	r3, #15
 8000a48:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a4e:	2300      	movs	r3, #0
 8000a50:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000a52:	2300      	movs	r3, #0
 8000a54:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000a56:	2300      	movs	r3, #0
 8000a58:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000a5a:	f107 030c 	add.w	r3, r7, #12
 8000a5e:	2100      	movs	r1, #0
 8000a60:	4618      	mov	r0, r3
 8000a62:	f001 fd63 	bl	800252c <HAL_RCC_ClockConfig>
 8000a66:	4603      	mov	r3, r0
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	bf14      	ite	ne
 8000a6c:	2301      	movne	r3, #1
 8000a6e:	2300      	moveq	r3, #0
 8000a70:	b2db      	uxtb	r3, r3
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	d001      	beq.n	8000a7a <_Z18SystemClock_Configv+0xbe>
  {
    Error_Handler();
 8000a76:	f000 fa19 	bl	8000eac <Error_Handler>
  }
}
 8000a7a:	bf00      	nop
 8000a7c:	3750      	adds	r7, #80	; 0x50
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bd80      	pop	{r7, pc}
 8000a82:	bf00      	nop
 8000a84:	40023800 	.word	0x40023800
 8000a88:	40007000 	.word	0x40007000

08000a8c <_ZL13MX_UART4_Initv>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 8000a90:	4b13      	ldr	r3, [pc, #76]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000a92:	4a14      	ldr	r2, [pc, #80]	; (8000ae4 <_ZL13MX_UART4_Initv+0x58>)
 8000a94:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 115200;
 8000a96:	4b12      	ldr	r3, [pc, #72]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000a98:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000a9c:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8000a9e:	4b10      	ldr	r3, [pc, #64]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 8000aa4:	4b0e      	ldr	r3, [pc, #56]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 8000aaa:	4b0d      	ldr	r3, [pc, #52]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000aac:	2200      	movs	r2, #0
 8000aae:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 8000ab0:	4b0b      	ldr	r3, [pc, #44]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000ab2:	220c      	movs	r2, #12
 8000ab4:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000ab6:	4b0a      	ldr	r3, [pc, #40]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000ab8:	2200      	movs	r2, #0
 8000aba:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8000abc:	4b08      	ldr	r3, [pc, #32]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000abe:	2200      	movs	r2, #0
 8000ac0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart4) != HAL_OK)
 8000ac2:	4807      	ldr	r0, [pc, #28]	; (8000ae0 <_ZL13MX_UART4_Initv+0x54>)
 8000ac4:	f001 ff12 	bl	80028ec <HAL_UART_Init>
 8000ac8:	4603      	mov	r3, r0
 8000aca:	2b00      	cmp	r3, #0
 8000acc:	bf14      	ite	ne
 8000ace:	2301      	movne	r3, #1
 8000ad0:	2300      	moveq	r3, #0
 8000ad2:	b2db      	uxtb	r3, r3
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d001      	beq.n	8000adc <_ZL13MX_UART4_Initv+0x50>
  {
    Error_Handler();
 8000ad8:	f000 f9e8 	bl	8000eac <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 8000adc:	bf00      	nop
 8000ade:	bd80      	pop	{r7, pc}
 8000ae0:	20000094 	.word	0x20000094
 8000ae4:	40004c00 	.word	0x40004c00

08000ae8 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000ae8:	b580      	push	{r7, lr}
 8000aea:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000aec:	4b14      	ldr	r3, [pc, #80]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000aee:	4a15      	ldr	r2, [pc, #84]	; (8000b44 <_ZL19MX_USART1_UART_Initv+0x5c>)
 8000af0:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8000af2:	4b13      	ldr	r3, [pc, #76]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000af4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000af8:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000afa:	4b11      	ldr	r3, [pc, #68]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000afc:	2200      	movs	r2, #0
 8000afe:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000b00:	4b0f      	ldr	r3, [pc, #60]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000b02:	2200      	movs	r2, #0
 8000b04:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000b06:	4b0e      	ldr	r3, [pc, #56]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000b08:	2200      	movs	r2, #0
 8000b0a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000b0c:	4b0c      	ldr	r3, [pc, #48]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000b0e:	220c      	movs	r2, #12
 8000b10:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 8000b12:	4b0b      	ldr	r3, [pc, #44]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000b14:	f44f 7240 	mov.w	r2, #768	; 0x300
 8000b18:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000b1a:	4b09      	ldr	r3, [pc, #36]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000b1c:	2200      	movs	r2, #0
 8000b1e:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000b20:	4807      	ldr	r0, [pc, #28]	; (8000b40 <_ZL19MX_USART1_UART_Initv+0x58>)
 8000b22:	f001 fee3 	bl	80028ec <HAL_UART_Init>
 8000b26:	4603      	mov	r3, r0
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	bf14      	ite	ne
 8000b2c:	2301      	movne	r3, #1
 8000b2e:	2300      	moveq	r3, #0
 8000b30:	b2db      	uxtb	r3, r3
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	d001      	beq.n	8000b3a <_ZL19MX_USART1_UART_Initv+0x52>
  {
    Error_Handler();
 8000b36:	f000 f9b9 	bl	8000eac <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000b3a:	bf00      	nop
 8000b3c:	bd80      	pop	{r7, pc}
 8000b3e:	bf00      	nop
 8000b40:	200000d8 	.word	0x200000d8
 8000b44:	40011000 	.word	0x40011000

08000b48 <_ZL19MX_USART2_UART_Initv>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000b48:	b580      	push	{r7, lr}
 8000b4a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000b4c:	4b13      	ldr	r3, [pc, #76]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b4e:	4a14      	ldr	r2, [pc, #80]	; (8000ba0 <_ZL19MX_USART2_UART_Initv+0x58>)
 8000b50:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000b52:	4b12      	ldr	r3, [pc, #72]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b54:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000b58:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000b5a:	4b10      	ldr	r3, [pc, #64]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000b60:	4b0e      	ldr	r3, [pc, #56]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b62:	2200      	movs	r2, #0
 8000b64:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000b66:	4b0d      	ldr	r3, [pc, #52]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b68:	2200      	movs	r2, #0
 8000b6a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000b6c:	4b0b      	ldr	r3, [pc, #44]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b6e:	220c      	movs	r2, #12
 8000b70:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b72:	4b0a      	ldr	r3, [pc, #40]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b74:	2200      	movs	r2, #0
 8000b76:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000b78:	4b08      	ldr	r3, [pc, #32]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000b7e:	4807      	ldr	r0, [pc, #28]	; (8000b9c <_ZL19MX_USART2_UART_Initv+0x54>)
 8000b80:	f001 feb4 	bl	80028ec <HAL_UART_Init>
 8000b84:	4603      	mov	r3, r0
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	bf14      	ite	ne
 8000b8a:	2301      	movne	r3, #1
 8000b8c:	2300      	moveq	r3, #0
 8000b8e:	b2db      	uxtb	r3, r3
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d001      	beq.n	8000b98 <_ZL19MX_USART2_UART_Initv+0x50>
  {
    Error_Handler();
 8000b94:	f000 f98a 	bl	8000eac <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000b98:	bf00      	nop
 8000b9a:	bd80      	pop	{r7, pc}
 8000b9c:	2000011c 	.word	0x2000011c
 8000ba0:	40004400 	.word	0x40004400

08000ba4 <_ZL19MX_USART3_UART_Initv>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8000ba8:	4b13      	ldr	r3, [pc, #76]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000baa:	4a14      	ldr	r2, [pc, #80]	; (8000bfc <_ZL19MX_USART3_UART_Initv+0x58>)
 8000bac:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8000bae:	4b12      	ldr	r3, [pc, #72]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bb0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000bb4:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8000bb6:	4b10      	ldr	r3, [pc, #64]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bb8:	2200      	movs	r2, #0
 8000bba:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8000bbc:	4b0e      	ldr	r3, [pc, #56]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8000bc2:	4b0d      	ldr	r3, [pc, #52]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8000bc8:	4b0b      	ldr	r3, [pc, #44]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bca:	220c      	movs	r2, #12
 8000bcc:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000bce:	4b0a      	ldr	r3, [pc, #40]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bd0:	2200      	movs	r2, #0
 8000bd2:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8000bd4:	4b08      	ldr	r3, [pc, #32]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8000bda:	4807      	ldr	r0, [pc, #28]	; (8000bf8 <_ZL19MX_USART3_UART_Initv+0x54>)
 8000bdc:	f001 fe86 	bl	80028ec <HAL_UART_Init>
 8000be0:	4603      	mov	r3, r0
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	bf14      	ite	ne
 8000be6:	2301      	movne	r3, #1
 8000be8:	2300      	moveq	r3, #0
 8000bea:	b2db      	uxtb	r3, r3
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d001      	beq.n	8000bf4 <_ZL19MX_USART3_UART_Initv+0x50>
  {
    Error_Handler();
 8000bf0:	f000 f95c 	bl	8000eac <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8000bf4:	bf00      	nop
 8000bf6:	bd80      	pop	{r7, pc}
 8000bf8:	20000160 	.word	0x20000160
 8000bfc:	40004800 	.word	0x40004800

08000c00 <_ZL19MX_USART6_UART_Initv>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 8000c00:	b580      	push	{r7, lr}
 8000c02:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 8000c04:	4b13      	ldr	r3, [pc, #76]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c06:	4a14      	ldr	r2, [pc, #80]	; (8000c58 <_ZL19MX_USART6_UART_Initv+0x58>)
 8000c08:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 115200;
 8000c0a:	4b12      	ldr	r3, [pc, #72]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c0c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000c10:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 8000c12:	4b10      	ldr	r3, [pc, #64]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c14:	2200      	movs	r2, #0
 8000c16:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 8000c18:	4b0e      	ldr	r3, [pc, #56]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c1a:	2200      	movs	r2, #0
 8000c1c:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 8000c1e:	4b0d      	ldr	r3, [pc, #52]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c20:	2200      	movs	r2, #0
 8000c22:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 8000c24:	4b0b      	ldr	r3, [pc, #44]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c26:	220c      	movs	r2, #12
 8000c28:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000c2a:	4b0a      	ldr	r3, [pc, #40]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c2c:	2200      	movs	r2, #0
 8000c2e:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 8000c30:	4b08      	ldr	r3, [pc, #32]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c32:	2200      	movs	r2, #0
 8000c34:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart6) != HAL_OK)
 8000c36:	4807      	ldr	r0, [pc, #28]	; (8000c54 <_ZL19MX_USART6_UART_Initv+0x54>)
 8000c38:	f001 fe58 	bl	80028ec <HAL_UART_Init>
 8000c3c:	4603      	mov	r3, r0
 8000c3e:	2b00      	cmp	r3, #0
 8000c40:	bf14      	ite	ne
 8000c42:	2301      	movne	r3, #1
 8000c44:	2300      	moveq	r3, #0
 8000c46:	b2db      	uxtb	r3, r3
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d001      	beq.n	8000c50 <_ZL19MX_USART6_UART_Initv+0x50>
  {
    Error_Handler();
 8000c4c:	f000 f92e 	bl	8000eac <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 8000c50:	bf00      	nop
 8000c52:	bd80      	pop	{r7, pc}
 8000c54:	200001a4 	.word	0x200001a4
 8000c58:	40011400 	.word	0x40011400

08000c5c <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	b088      	sub	sp, #32
 8000c60:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c62:	f107 030c 	add.w	r3, r7, #12
 8000c66:	2200      	movs	r2, #0
 8000c68:	601a      	str	r2, [r3, #0]
 8000c6a:	605a      	str	r2, [r3, #4]
 8000c6c:	609a      	str	r2, [r3, #8]
 8000c6e:	60da      	str	r2, [r3, #12]
 8000c70:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c72:	2300      	movs	r3, #0
 8000c74:	60bb      	str	r3, [r7, #8]
 8000c76:	4b2b      	ldr	r3, [pc, #172]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000c78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c7a:	4a2a      	ldr	r2, [pc, #168]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000c7c:	f043 0304 	orr.w	r3, r3, #4
 8000c80:	6313      	str	r3, [r2, #48]	; 0x30
 8000c82:	4b28      	ldr	r3, [pc, #160]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c86:	f003 0304 	and.w	r3, r3, #4
 8000c8a:	60bb      	str	r3, [r7, #8]
 8000c8c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c8e:	2300      	movs	r3, #0
 8000c90:	607b      	str	r3, [r7, #4]
 8000c92:	4b24      	ldr	r3, [pc, #144]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000c94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c96:	4a23      	ldr	r2, [pc, #140]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000c98:	f043 0301 	orr.w	r3, r3, #1
 8000c9c:	6313      	str	r3, [r2, #48]	; 0x30
 8000c9e:	4b21      	ldr	r3, [pc, #132]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000ca0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ca2:	f003 0301 	and.w	r3, r3, #1
 8000ca6:	607b      	str	r3, [r7, #4]
 8000ca8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000caa:	2300      	movs	r3, #0
 8000cac:	603b      	str	r3, [r7, #0]
 8000cae:	4b1d      	ldr	r3, [pc, #116]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000cb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cb2:	4a1c      	ldr	r2, [pc, #112]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000cb4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000cb8:	6313      	str	r3, [r2, #48]	; 0x30
 8000cba:	4b1a      	ldr	r3, [pc, #104]	; (8000d24 <_ZL12MX_GPIO_Initv+0xc8>)
 8000cbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cbe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000cc2:	603b      	str	r3, [r7, #0]
 8000cc4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000ccc:	4816      	ldr	r0, [pc, #88]	; (8000d28 <_ZL12MX_GPIO_Initv+0xcc>)
 8000cce:	f001 f981 	bl	8001fd4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_8, GPIO_PIN_RESET);
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000cd8:	4814      	ldr	r0, [pc, #80]	; (8000d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8000cda:	f001 f97b 	bl	8001fd4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000cde:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000ce2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ce4:	2301      	movs	r3, #1
 8000ce6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce8:	2300      	movs	r3, #0
 8000cea:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cec:	2300      	movs	r3, #0
 8000cee:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cf0:	f107 030c 	add.w	r3, r7, #12
 8000cf4:	4619      	mov	r1, r3
 8000cf6:	480c      	ldr	r0, [pc, #48]	; (8000d28 <_ZL12MX_GPIO_Initv+0xcc>)
 8000cf8:	f000 ffd0 	bl	8001c9c <HAL_GPIO_Init>

  /*Configure GPIO pin : PG8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000cfc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000d00:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d02:	2301      	movs	r3, #1
 8000d04:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d06:	2300      	movs	r3, #0
 8000d08:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d0e:	f107 030c 	add.w	r3, r7, #12
 8000d12:	4619      	mov	r1, r3
 8000d14:	4805      	ldr	r0, [pc, #20]	; (8000d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8000d16:	f000 ffc1 	bl	8001c9c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000d1a:	bf00      	nop
 8000d1c:	3720      	adds	r7, #32
 8000d1e:	46bd      	mov	sp, r7
 8000d20:	bd80      	pop	{r7, pc}
 8000d22:	bf00      	nop
 8000d24:	40023800 	.word	0x40023800
 8000d28:	40020800 	.word	0x40020800
 8000d2c:	40021800 	.word	0x40021800

08000d30 <_Z16StartDefaultTaskPv>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000d30:	b580      	push	{r7, lr}
 8000d32:	b082      	sub	sp, #8
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000d38:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000d3c:	4803      	ldr	r0, [pc, #12]	; (8000d4c <_Z16StartDefaultTaskPv+0x1c>)
 8000d3e:	f001 f962 	bl	8002006 <HAL_GPIO_TogglePin>
    osDelay(100);
 8000d42:	2064      	movs	r0, #100	; 0x64
 8000d44:	f002 ff98 	bl	8003c78 <osDelay>
	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000d48:	e7f6      	b.n	8000d38 <_Z16StartDefaultTaskPv+0x8>
 8000d4a:	bf00      	nop
 8000d4c:	40020800 	.word	0x40020800

08000d50 <_Z13ModemUartFuncPv>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ModemUartFunc */
void ModemUartFunc(void *argument)
{
 8000d50:	b580      	push	{r7, lr}
 8000d52:	b09e      	sub	sp, #120	; 0x78
 8000d54:	af00      	add	r7, sp, #0
 8000d56:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN ModemUartFunc */
  /* Infinite loop */
  for(;;)
  {
	modemRx= mqtt_recive();
 8000d58:	f107 030c 	add.w	r3, r7, #12
 8000d5c:	4618      	mov	r0, r3
 8000d5e:	f000 fa7b 	bl	8001258 <_Z11mqtt_reciveB5cxx11v>
 8000d62:	f107 030c 	add.w	r3, r7, #12
 8000d66:	4619      	mov	r1, r3
 8000d68:	4827      	ldr	r0, [pc, #156]	; (8000e08 <_Z13ModemUartFuncPv+0xb8>)
 8000d6a:	f005 fdc4 	bl	80068f6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8000d6e:	f107 030c 	add.w	r3, r7, #12
 8000d72:	4618      	mov	r0, r3
 8000d74:	f005 fdb9 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	if(uxQueueMessagesWaiting(modbus_to_mqtt_queue)>1)
 8000d78:	4b24      	ldr	r3, [pc, #144]	; (8000e0c <_Z13ModemUartFuncPv+0xbc>)
 8000d7a:	681b      	ldr	r3, [r3, #0]
 8000d7c:	4618      	mov	r0, r3
 8000d7e:	f003 fca9 	bl	80046d4 <uxQueueMessagesWaiting>
 8000d82:	4603      	mov	r3, r0
 8000d84:	2b01      	cmp	r3, #1
 8000d86:	bf8c      	ite	hi
 8000d88:	2301      	movhi	r3, #1
 8000d8a:	2300      	movls	r3, #0
 8000d8c:	b2db      	uxtb	r3, r3
 8000d8e:	2b00      	cmp	r3, #0
 8000d90:	d035      	beq.n	8000dfe <_Z13ModemUartFuncPv+0xae>
	{
		if(true)
		{
			mqtt_send("","");
 8000d92:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000d96:	4618      	mov	r0, r3
 8000d98:	f005 fceb 	bl	8006772 <_ZNSaIcEC1Ev>
 8000d9c:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8000da0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000da4:	491a      	ldr	r1, [pc, #104]	; (8000e10 <_Z13ModemUartFuncPv+0xc0>)
 8000da6:	4618      	mov	r0, r3
 8000da8:	f005 fe6e 	bl	8006a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8000dac:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000db0:	4618      	mov	r0, r3
 8000db2:	f005 fcde 	bl	8006772 <_ZNSaIcEC1Ev>
 8000db6:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8000dba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000dbe:	4914      	ldr	r1, [pc, #80]	; (8000e10 <_Z13ModemUartFuncPv+0xc0>)
 8000dc0:	4618      	mov	r0, r3
 8000dc2:	f005 fe61 	bl	8006a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8000dc6:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8000dca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dce:	4611      	mov	r1, r2
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	f000 f9f1 	bl	80011b8 <_Z9mqtt_sendNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>
 8000dd6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000dda:	4618      	mov	r0, r3
 8000ddc:	f005 fd85 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8000de0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000de4:	4618      	mov	r0, r3
 8000de6:	f005 fcc6 	bl	8006776 <_ZNSaIcED1Ev>
 8000dea:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dee:	4618      	mov	r0, r3
 8000df0:	f005 fd7b 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8000df4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000df8:	4618      	mov	r0, r3
 8000dfa:	f005 fcbc 	bl	8006776 <_ZNSaIcED1Ev>
			if(true)
				mqtt_sub("", 0);
		}

	}
    osDelay(100);
 8000dfe:	2064      	movs	r0, #100	; 0x64
 8000e00:	f002 ff3a 	bl	8003c78 <osDelay>
	modemRx= mqtt_recive();
 8000e04:	e7a8      	b.n	8000d58 <_Z13ModemUartFuncPv+0x8>
 8000e06:	bf00      	nop
 8000e08:	2000021c 	.word	0x2000021c
 8000e0c:	20000234 	.word	0x20000234
 8000e10:	080075c4 	.word	0x080075c4

08000e14 <_Z12modbus_writePv>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_modbus_write */
void modbus_write(void *argument)
{
 8000e14:	b580      	push	{r7, lr}
 8000e16:	b092      	sub	sp, #72	; 0x48
 8000e18:	af02      	add	r7, sp, #8
 8000e1a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN modbus_write */
	string res;
 8000e1c:	f107 030c 	add.w	r3, r7, #12
 8000e20:	4618      	mov	r0, r3
 8000e22:	f005 fd3a 	bl	800689a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	unsigned char toSend;
  /* Infinite loop */
  for(;;)
  {
	for(int i=0;i<1;i++)//TODO получение количества опрашиваемых регистров
 8000e26:	2300      	movs	r3, #0
 8000e28:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000e2a:	e022      	b.n	8000e72 <_Z12modbus_writePv+0x5e>
	{

		if(true)
		{
		res=read_modbus(0, 0, 0, 0, 0);
 8000e2c:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8000e30:	2300      	movs	r3, #0
 8000e32:	9301      	str	r3, [sp, #4]
 8000e34:	2300      	movs	r3, #0
 8000e36:	9300      	str	r3, [sp, #0]
 8000e38:	2300      	movs	r3, #0
 8000e3a:	2200      	movs	r2, #0
 8000e3c:	2100      	movs	r1, #0
 8000e3e:	f000 f8e7 	bl	8001010 <_Z11read_modbusB5cxx11hhhhh>
 8000e42:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8000e46:	f107 030c 	add.w	r3, r7, #12
 8000e4a:	4611      	mov	r1, r2
 8000e4c:	4618      	mov	r0, r3
 8000e4e:	f005 fd52 	bl	80068f6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8000e52:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e56:	4618      	mov	r0, r3
 8000e58:	f005 fd47 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		xQueueSend(modbus_to_mqtt_queue,&toSend,100);
 8000e5c:	4b08      	ldr	r3, [pc, #32]	; (8000e80 <_Z12modbus_writePv+0x6c>)
 8000e5e:	6818      	ldr	r0, [r3, #0]
 8000e60:	f107 010b 	add.w	r1, r7, #11
 8000e64:	2300      	movs	r3, #0
 8000e66:	2264      	movs	r2, #100	; 0x64
 8000e68:	f003 f9ba 	bl	80041e0 <xQueueGenericSend>
	for(int i=0;i<1;i++)//TODO получение количества опрашиваемых регистров
 8000e6c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000e6e:	3301      	adds	r3, #1
 8000e70:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000e72:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	ddd9      	ble.n	8000e2c <_Z12modbus_writePv+0x18>
				write_modbus(0, 0, 0, 0, 0, 2, 0);
			}

	}

    osDelay(100);
 8000e78:	2064      	movs	r0, #100	; 0x64
 8000e7a:	f002 fefd 	bl	8003c78 <osDelay>
  }
 8000e7e:	e7d2      	b.n	8000e26 <_Z12modbus_writePv+0x12>
 8000e80:	20000234 	.word	0x20000234

08000e84 <_Z11Worker_funcPv>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Worker_func */
void Worker_func(void *argument)
{
 8000e84:	b580      	push	{r7, lr}
 8000e86:	b084      	sub	sp, #16
 8000e88:	af00      	add	r7, sp, #0
 8000e8a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Worker_func */
  /* Infinite loop */
  for(;;)
  {
	  unsigned char rec;
	   xQueueReceive( modbus_to_mqtt_queue, &( rec ), portMAX_DELAY );
 8000e8c:	4b06      	ldr	r3, [pc, #24]	; (8000ea8 <_Z11Worker_funcPv+0x24>)
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	f107 010f 	add.w	r1, r7, #15
 8000e94:	f04f 32ff 	mov.w	r2, #4294967295
 8000e98:	4618      	mov	r0, r3
 8000e9a:	f003 fb3b 	bl	8004514 <xQueueReceive>
	   osDelay(1000);
 8000e9e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000ea2:	f002 fee9 	bl	8003c78 <osDelay>
  }
 8000ea6:	e7f1      	b.n	8000e8c <_Z11Worker_funcPv+0x8>
 8000ea8:	20000234 	.word	0x20000234

08000eac <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000eac:	b480      	push	{r7}
 8000eae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000eb0:	b672      	cpsid	i
}
 8000eb2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000eb4:	e7fe      	b.n	8000eb4 <Error_Handler+0x8>

08000eb6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
 8000eb6:	b580      	push	{r7, lr}
 8000eb8:	b082      	sub	sp, #8
 8000eba:	af00      	add	r7, sp, #0
 8000ebc:	6078      	str	r0, [r7, #4]
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	4618      	mov	r0, r3
 8000ec2:	f000 f849 	bl	8000f58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
 8000ec6:	687b      	ldr	r3, [r7, #4]
 8000ec8:	4618      	mov	r0, r3
 8000eca:	3708      	adds	r7, #8
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	bd80      	pop	{r7, pc}

08000ed0 <_ZN16GlobalDataKeeperD1Ev>:
	string imei;
	time_t time;

} modem_conf;

class GlobalDataKeeper {
 8000ed0:	b580      	push	{r7, lr}
 8000ed2:	b082      	sub	sp, #8
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	6078      	str	r0, [r7, #4]
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	3304      	adds	r3, #4
 8000edc:	4618      	mov	r0, r3
 8000ede:	f7ff ffea 	bl	8000eb6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED1Ev>
 8000ee2:	687b      	ldr	r3, [r7, #4]
 8000ee4:	4618      	mov	r0, r3
 8000ee6:	3708      	adds	r7, #8
 8000ee8:	46bd      	mov	sp, r7
 8000eea:	bd80      	pop	{r7, pc}

08000eec <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b082      	sub	sp, #8
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	6078      	str	r0, [r7, #4]
 8000ef4:	6039      	str	r1, [r7, #0]
 8000ef6:	687b      	ldr	r3, [r7, #4]
 8000ef8:	2b01      	cmp	r3, #1
 8000efa:	d10a      	bne.n	8000f12 <_Z41__static_initialization_and_destruction_0ii+0x26>
 8000efc:	683b      	ldr	r3, [r7, #0]
 8000efe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000f02:	4293      	cmp	r3, r2
 8000f04:	d105      	bne.n	8000f12 <_Z41__static_initialization_and_destruction_0ii+0x26>
GlobalDataKeeper data;
 8000f06:	480c      	ldr	r0, [pc, #48]	; (8000f38 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 8000f08:	f7ff fb77 	bl	80005fa <_ZN16GlobalDataKeeperC1Ev>
string modemRx;
 8000f0c:	480b      	ldr	r0, [pc, #44]	; (8000f3c <_Z41__static_initialization_and_destruction_0ii+0x50>)
 8000f0e:	f005 fcc4 	bl	800689a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8000f12:	687b      	ldr	r3, [r7, #4]
 8000f14:	2b00      	cmp	r3, #0
 8000f16:	d10a      	bne.n	8000f2e <_Z41__static_initialization_and_destruction_0ii+0x42>
 8000f18:	683b      	ldr	r3, [r7, #0]
 8000f1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000f1e:	4293      	cmp	r3, r2
 8000f20:	d105      	bne.n	8000f2e <_Z41__static_initialization_and_destruction_0ii+0x42>
 8000f22:	4806      	ldr	r0, [pc, #24]	; (8000f3c <_Z41__static_initialization_and_destruction_0ii+0x50>)
 8000f24:	f005 fce1 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
GlobalDataKeeper data;
 8000f28:	4803      	ldr	r0, [pc, #12]	; (8000f38 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 8000f2a:	f7ff ffd1 	bl	8000ed0 <_ZN16GlobalDataKeeperD1Ev>
}
 8000f2e:	bf00      	nop
 8000f30:	3708      	adds	r7, #8
 8000f32:	46bd      	mov	sp, r7
 8000f34:	bd80      	pop	{r7, pc}
 8000f36:	bf00      	nop
 8000f38:	200001fc 	.word	0x200001fc
 8000f3c:	2000021c 	.word	0x2000021c

08000f40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8000f40:	b580      	push	{r7, lr}
 8000f42:	b082      	sub	sp, #8
 8000f44:	af00      	add	r7, sp, #0
 8000f46:	6078      	str	r0, [r7, #4]
 8000f48:	6878      	ldr	r0, [r7, #4]
 8000f4a:	f000 f81a 	bl	8000f82 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEED1Ev>
 8000f4e:	687b      	ldr	r3, [r7, #4]
 8000f50:	4618      	mov	r0, r3
 8000f52:	3708      	adds	r7, #8
 8000f54:	46bd      	mov	sp, r7
 8000f56:	bd80      	pop	{r7, pc}

08000f58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8000f58:	b580      	push	{r7, lr}
 8000f5a:	b082      	sub	sp, #8
 8000f5c:	af00      	add	r7, sp, #0
 8000f5e:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8000f60:	6878      	ldr	r0, [r7, #4]
 8000f62:	f7ff fbb4 	bl	80006ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
 8000f66:	4603      	mov	r3, r0
 8000f68:	4619      	mov	r1, r3
 8000f6a:	6878      	ldr	r0, [r7, #4]
 8000f6c:	f7ff fb8f 	bl	800068e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
 8000f70:	687b      	ldr	r3, [r7, #4]
 8000f72:	4618      	mov	r0, r3
 8000f74:	f7ff ffe4 	bl	8000f40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	4618      	mov	r0, r3
 8000f7c:	3708      	adds	r7, #8
 8000f7e:	46bd      	mov	sp, r7
 8000f80:	bd80      	pop	{r7, pc}

08000f82 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
 8000f82:	b580      	push	{r7, lr}
 8000f84:	b082      	sub	sp, #8
 8000f86:	af00      	add	r7, sp, #0
 8000f88:	6078      	str	r0, [r7, #4]
 8000f8a:	6878      	ldr	r0, [r7, #4]
 8000f8c:	f000 f805 	bl	8000f9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEED1Ev>
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	4618      	mov	r0, r3
 8000f94:	3708      	adds	r7, #8
 8000f96:	46bd      	mov	sp, r7
 8000f98:	bd80      	pop	{r7, pc}

08000f9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8000f9a:	b480      	push	{r7}
 8000f9c:	b083      	sub	sp, #12
 8000f9e:	af00      	add	r7, sp, #0
 8000fa0:	6078      	str	r0, [r7, #4]
 8000fa2:	687b      	ldr	r3, [r7, #4]
 8000fa4:	4618      	mov	r0, r3
 8000fa6:	370c      	adds	r7, #12
 8000fa8:	46bd      	mov	sp, r7
 8000faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fae:	4770      	bx	lr

08000fb0 <_GLOBAL__sub_I_huart4>:
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	af00      	add	r7, sp, #0
 8000fb4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000fb8:	2001      	movs	r0, #1
 8000fba:	f7ff ff97 	bl	8000eec <_Z41__static_initialization_and_destruction_0ii>
 8000fbe:	bd80      	pop	{r7, pc}

08000fc0 <_GLOBAL__sub_D_huart4>:
 8000fc0:	b580      	push	{r7, lr}
 8000fc2:	af00      	add	r7, sp, #0
 8000fc4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000fc8:	2000      	movs	r0, #0
 8000fca:	f7ff ff8f 	bl	8000eec <_Z41__static_initialization_and_destruction_0ii>
 8000fce:	bd80      	pop	{r7, pc}

08000fd0 <_Z14sendData_rs485Phi>:
 8000fd0:	b580      	push	{r7, lr}
 8000fd2:	b082      	sub	sp, #8
 8000fd4:	af00      	add	r7, sp, #0
 8000fd6:	6078      	str	r0, [r7, #4]
 8000fd8:	6039      	str	r1, [r7, #0]
 8000fda:	2201      	movs	r2, #1
 8000fdc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000fe0:	4809      	ldr	r0, [pc, #36]	; (8001008 <_Z14sendData_rs485Phi+0x38>)
 8000fe2:	f000 fff7 	bl	8001fd4 <HAL_GPIO_WritePin>
 8000fe6:	683b      	ldr	r3, [r7, #0]
 8000fe8:	b29a      	uxth	r2, r3
 8000fea:	2364      	movs	r3, #100	; 0x64
 8000fec:	6879      	ldr	r1, [r7, #4]
 8000fee:	4807      	ldr	r0, [pc, #28]	; (800100c <_Z14sendData_rs485Phi+0x3c>)
 8000ff0:	f001 fcc9 	bl	8002986 <HAL_UART_Transmit>
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000ffa:	4803      	ldr	r0, [pc, #12]	; (8001008 <_Z14sendData_rs485Phi+0x38>)
 8000ffc:	f000 ffea 	bl	8001fd4 <HAL_GPIO_WritePin>
 8001000:	bf00      	nop
 8001002:	3708      	adds	r7, #8
 8001004:	46bd      	mov	sp, r7
 8001006:	bd80      	pop	{r7, pc}
 8001008:	40021800 	.word	0x40021800
 800100c:	200001a4 	.word	0x200001a4

08001010 <_Z11read_modbusB5cxx11hhhhh>:
 8001010:	b580      	push	{r7, lr}
 8001012:	b08c      	sub	sp, #48	; 0x30
 8001014:	af00      	add	r7, sp, #0
 8001016:	6078      	str	r0, [r7, #4]
 8001018:	4608      	mov	r0, r1
 800101a:	4611      	mov	r1, r2
 800101c:	461a      	mov	r2, r3
 800101e:	4603      	mov	r3, r0
 8001020:	70fb      	strb	r3, [r7, #3]
 8001022:	460b      	mov	r3, r1
 8001024:	70bb      	strb	r3, [r7, #2]
 8001026:	4613      	mov	r3, r2
 8001028:	707b      	strb	r3, [r7, #1]
 800102a:	4a3d      	ldr	r2, [pc, #244]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 800102c:	78fb      	ldrb	r3, [r7, #3]
 800102e:	7013      	strb	r3, [r2, #0]
 8001030:	4b3b      	ldr	r3, [pc, #236]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 8001032:	2203      	movs	r2, #3
 8001034:	705a      	strb	r2, [r3, #1]
 8001036:	4a3a      	ldr	r2, [pc, #232]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 8001038:	78bb      	ldrb	r3, [r7, #2]
 800103a:	7093      	strb	r3, [r2, #2]
 800103c:	4a38      	ldr	r2, [pc, #224]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 800103e:	787b      	ldrb	r3, [r7, #1]
 8001040:	70d3      	strb	r3, [r2, #3]
 8001042:	4a37      	ldr	r2, [pc, #220]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 8001044:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8001048:	7113      	strb	r3, [r2, #4]
 800104a:	4a35      	ldr	r2, [pc, #212]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 800104c:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8001050:	7153      	strb	r3, [r2, #5]
 8001052:	2106      	movs	r1, #6
 8001054:	4832      	ldr	r0, [pc, #200]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 8001056:	f000 f86d 	bl	8001134 <crc16_modbus>
 800105a:	4603      	mov	r3, r0
 800105c:	847b      	strh	r3, [r7, #34]	; 0x22
 800105e:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001060:	b2da      	uxtb	r2, r3
 8001062:	4b2f      	ldr	r3, [pc, #188]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 8001064:	719a      	strb	r2, [r3, #6]
 8001066:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001068:	0a1b      	lsrs	r3, r3, #8
 800106a:	b29b      	uxth	r3, r3
 800106c:	b2da      	uxtb	r2, r3
 800106e:	4b2c      	ldr	r3, [pc, #176]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 8001070:	71da      	strb	r2, [r3, #7]
 8001072:	2108      	movs	r1, #8
 8001074:	482a      	ldr	r0, [pc, #168]	; (8001120 <_Z11read_modbusB5cxx11hhhhh+0x110>)
 8001076:	f7ff ffab 	bl	8000fd0 <_Z14sendData_rs485Phi>
 800107a:	f107 0308 	add.w	r3, r7, #8
 800107e:	4618      	mov	r0, r3
 8001080:	f005 fc0b 	bl	800689a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8001084:	6878      	ldr	r0, [r7, #4]
 8001086:	f005 fc08 	bl	800689a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800108a:	2300      	movs	r3, #0
 800108c:	62bb      	str	r3, [r7, #40]	; 0x28
 800108e:	e021      	b.n	80010d4 <_Z11read_modbusB5cxx11hhhhh+0xc4>
 8001090:	2264      	movs	r2, #100	; 0x64
 8001092:	4924      	ldr	r1, [pc, #144]	; (8001124 <_Z11read_modbusB5cxx11hhhhh+0x114>)
 8001094:	4824      	ldr	r0, [pc, #144]	; (8001128 <_Z11read_modbusB5cxx11hhhhh+0x118>)
 8001096:	f001 fd08 	bl	8002aaa <HAL_UARTEx_ReceiveToIdle_IT>
 800109a:	20c8      	movs	r0, #200	; 0xc8
 800109c:	f000 fc36 	bl	800190c <HAL_Delay>
 80010a0:	2300      	movs	r3, #0
 80010a2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80010a4:	e00e      	b.n	80010c4 <_Z11read_modbusB5cxx11hhhhh+0xb4>
 80010a6:	4a1f      	ldr	r2, [pc, #124]	; (8001124 <_Z11read_modbusB5cxx11hhhhh+0x114>)
 80010a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80010aa:	4413      	add	r3, r2
 80010ac:	781b      	ldrb	r3, [r3, #0]
 80010ae:	2b00      	cmp	r3, #0
 80010b0:	d005      	beq.n	80010be <_Z11read_modbusB5cxx11hhhhh+0xae>
 80010b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80010b4:	3301      	adds	r3, #1
 80010b6:	4a1b      	ldr	r2, [pc, #108]	; (8001124 <_Z11read_modbusB5cxx11hhhhh+0x114>)
 80010b8:	5cd3      	ldrb	r3, [r2, r3]
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	d106      	bne.n	80010cc <_Z11read_modbusB5cxx11hhhhh+0xbc>
 80010be:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80010c0:	3301      	adds	r3, #1
 80010c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80010c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80010c6:	2b1f      	cmp	r3, #31
 80010c8:	dded      	ble.n	80010a6 <_Z11read_modbusB5cxx11hhhhh+0x96>
 80010ca:	e000      	b.n	80010ce <_Z11read_modbusB5cxx11hhhhh+0xbe>
 80010cc:	bf00      	nop
 80010ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80010d0:	3301      	adds	r3, #1
 80010d2:	62bb      	str	r3, [r7, #40]	; 0x28
 80010d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80010d6:	2b07      	cmp	r3, #7
 80010d8:	ddda      	ble.n	8001090 <_Z11read_modbusB5cxx11hhhhh+0x80>
 80010da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80010dc:	627b      	str	r3, [r7, #36]	; 0x24
 80010de:	e00f      	b.n	8001100 <_Z11read_modbusB5cxx11hhhhh+0xf0>
 80010e0:	4a10      	ldr	r2, [pc, #64]	; (8001124 <_Z11read_modbusB5cxx11hhhhh+0x114>)
 80010e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010e4:	4413      	add	r3, r2
 80010e6:	781b      	ldrb	r3, [r3, #0]
 80010e8:	461a      	mov	r2, r3
 80010ea:	4910      	ldr	r1, [pc, #64]	; (800112c <_Z11read_modbusB5cxx11hhhhh+0x11c>)
 80010ec:	4810      	ldr	r0, [pc, #64]	; (8001130 <_Z11read_modbusB5cxx11hhhhh+0x120>)
 80010ee:	f005 fdaf 	bl	8006c50 <siprintf>
 80010f2:	490f      	ldr	r1, [pc, #60]	; (8001130 <_Z11read_modbusB5cxx11hhhhh+0x120>)
 80010f4:	6878      	ldr	r0, [r7, #4]
 80010f6:	f005 fc9b 	bl	8006a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
 80010fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010fc:	3301      	adds	r3, #1
 80010fe:	627b      	str	r3, [r7, #36]	; 0x24
 8001100:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001102:	331f      	adds	r3, #31
 8001104:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001106:	429a      	cmp	r2, r3
 8001108:	ddea      	ble.n	80010e0 <_Z11read_modbusB5cxx11hhhhh+0xd0>
 800110a:	bf00      	nop
 800110c:	f107 0308 	add.w	r3, r7, #8
 8001110:	4618      	mov	r0, r3
 8001112:	f005 fbea 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001116:	bf00      	nop
 8001118:	6878      	ldr	r0, [r7, #4]
 800111a:	3730      	adds	r7, #48	; 0x30
 800111c:	46bd      	mov	sp, r7
 800111e:	bd80      	pop	{r7, pc}
 8001120:	200002d0 	.word	0x200002d0
 8001124:	20000238 	.word	0x20000238
 8001128:	200001a4 	.word	0x200001a4
 800112c:	080075c8 	.word	0x080075c8
 8001130:	20000304 	.word	0x20000304

08001134 <crc16_modbus>:
 8001134:	b480      	push	{r7}
 8001136:	b085      	sub	sp, #20
 8001138:	af00      	add	r7, sp, #0
 800113a:	6078      	str	r0, [r7, #4]
 800113c:	460b      	mov	r3, r1
 800113e:	807b      	strh	r3, [r7, #2]
 8001140:	23ff      	movs	r3, #255	; 0xff
 8001142:	73fb      	strb	r3, [r7, #15]
 8001144:	23ff      	movs	r3, #255	; 0xff
 8001146:	73bb      	strb	r3, [r7, #14]
 8001148:	e013      	b.n	8001172 <crc16_modbus+0x3e>
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	1c5a      	adds	r2, r3, #1
 800114e:	607a      	str	r2, [r7, #4]
 8001150:	781a      	ldrb	r2, [r3, #0]
 8001152:	7bbb      	ldrb	r3, [r7, #14]
 8001154:	4053      	eors	r3, r2
 8001156:	b2db      	uxtb	r3, r3
 8001158:	60bb      	str	r3, [r7, #8]
 800115a:	4a0f      	ldr	r2, [pc, #60]	; (8001198 <crc16_modbus+0x64>)
 800115c:	68bb      	ldr	r3, [r7, #8]
 800115e:	4413      	add	r3, r2
 8001160:	781a      	ldrb	r2, [r3, #0]
 8001162:	7bfb      	ldrb	r3, [r7, #15]
 8001164:	4053      	eors	r3, r2
 8001166:	73bb      	strb	r3, [r7, #14]
 8001168:	4a0c      	ldr	r2, [pc, #48]	; (800119c <crc16_modbus+0x68>)
 800116a:	68bb      	ldr	r3, [r7, #8]
 800116c:	4413      	add	r3, r2
 800116e:	781b      	ldrb	r3, [r3, #0]
 8001170:	73fb      	strb	r3, [r7, #15]
 8001172:	887b      	ldrh	r3, [r7, #2]
 8001174:	1e5a      	subs	r2, r3, #1
 8001176:	807a      	strh	r2, [r7, #2]
 8001178:	2b00      	cmp	r3, #0
 800117a:	d1e6      	bne.n	800114a <crc16_modbus+0x16>
 800117c:	7bfb      	ldrb	r3, [r7, #15]
 800117e:	021b      	lsls	r3, r3, #8
 8001180:	b21a      	sxth	r2, r3
 8001182:	7bbb      	ldrb	r3, [r7, #14]
 8001184:	b21b      	sxth	r3, r3
 8001186:	4313      	orrs	r3, r2
 8001188:	b21b      	sxth	r3, r3
 800118a:	b29b      	uxth	r3, r3
 800118c:	4618      	mov	r0, r3
 800118e:	3714      	adds	r7, #20
 8001190:	46bd      	mov	sp, r7
 8001192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001196:	4770      	bx	lr
 8001198:	080076ac 	.word	0x080076ac
 800119c:	080077ac 	.word	0x080077ac

080011a0 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b082      	sub	sp, #8
 80011a4:	af00      	add	r7, sp, #0
 80011a6:	6078      	str	r0, [r7, #4]
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
	  return __gnu_cxx::char_traits<char_type>::length(__s);
#endif
	return __builtin_strlen(__s);
 80011a8:	6878      	ldr	r0, [r7, #4]
 80011aa:	f7ff f861 	bl	8000270 <strlen>
 80011ae:	4603      	mov	r3, r0
      }
 80011b0:	4618      	mov	r0, r3
 80011b2:	3708      	adds	r7, #8
 80011b4:	46bd      	mov	sp, r7
 80011b6:	bd80      	pop	{r7, pc}

080011b8 <_Z9mqtt_sendNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_>:
 80011b8:	b5b0      	push	{r4, r5, r7, lr}
 80011ba:	b094      	sub	sp, #80	; 0x50
 80011bc:	af00      	add	r7, sp, #0
 80011be:	6078      	str	r0, [r7, #4]
 80011c0:	6039      	str	r1, [r7, #0]
 80011c2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80011c6:	687a      	ldr	r2, [r7, #4]
 80011c8:	4920      	ldr	r1, [pc, #128]	; (800124c <_Z9mqtt_sendNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x94>)
 80011ca:	4618      	mov	r0, r3
 80011cc:	f000 f85a 	bl	8001284 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 80011d0:	f107 0320 	add.w	r3, r7, #32
 80011d4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80011d8:	4a1d      	ldr	r2, [pc, #116]	; (8001250 <_Z9mqtt_sendNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x98>)
 80011da:	4618      	mov	r0, r3
 80011dc:	f000 f892 	bl	8001304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80011e0:	f107 0308 	add.w	r3, r7, #8
 80011e4:	f107 0120 	add.w	r1, r7, #32
 80011e8:	683a      	ldr	r2, [r7, #0]
 80011ea:	4618      	mov	r0, r3
 80011ec:	f000 f8a1 	bl	8001332 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
 80011f0:	f107 0320 	add.w	r3, r7, #32
 80011f4:	4618      	mov	r0, r3
 80011f6:	f005 fb78 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80011fa:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80011fe:	4618      	mov	r0, r3
 8001200:	f005 fb73 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001204:	f107 0308 	add.w	r3, r7, #8
 8001208:	4618      	mov	r0, r3
 800120a:	f005 fc15 	bl	8006a38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800120e:	4605      	mov	r5, r0
 8001210:	f107 0308 	add.w	r3, r7, #8
 8001214:	4618      	mov	r0, r3
 8001216:	f005 fb9b 	bl	8006950 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 800121a:	4603      	mov	r3, r0
 800121c:	b29c      	uxth	r4, r3
 800121e:	f107 0308 	add.w	r3, r7, #8
 8001222:	4618      	mov	r0, r3
 8001224:	f005 fb94 	bl	8006950 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 8001228:	4602      	mov	r2, r0
 800122a:	4613      	mov	r3, r2
 800122c:	005b      	lsls	r3, r3, #1
 800122e:	4413      	add	r3, r2
 8001230:	4622      	mov	r2, r4
 8001232:	4629      	mov	r1, r5
 8001234:	4807      	ldr	r0, [pc, #28]	; (8001254 <_Z9mqtt_sendNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_+0x9c>)
 8001236:	f001 fba6 	bl	8002986 <HAL_UART_Transmit>
 800123a:	f107 0308 	add.w	r3, r7, #8
 800123e:	4618      	mov	r0, r3
 8001240:	f005 fb53 	bl	80068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001244:	3750      	adds	r7, #80	; 0x50
 8001246:	46bd      	mov	sp, r7
 8001248:	bdb0      	pop	{r4, r5, r7, pc}
 800124a:	bf00      	nop
 800124c:	080075dc 	.word	0x080075dc
 8001250:	080075d8 	.word	0x080075d8
 8001254:	200000d8 	.word	0x200000d8

08001258 <_Z11mqtt_reciveB5cxx11v>:
 8001258:	b580      	push	{r7, lr}
 800125a:	b0a8      	sub	sp, #160	; 0xa0
 800125c:	af00      	add	r7, sp, #0
 800125e:	6078      	str	r0, [r7, #4]
 8001260:	6878      	ldr	r0, [r7, #4]
 8001262:	f005 fb1a 	bl	800689a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8001266:	f107 0308 	add.w	r3, r7, #8
 800126a:	2296      	movs	r2, #150	; 0x96
 800126c:	4619      	mov	r1, r3
 800126e:	4804      	ldr	r0, [pc, #16]	; (8001280 <_Z11mqtt_reciveB5cxx11v+0x28>)
 8001270:	f001 fc1b 	bl	8002aaa <HAL_UARTEx_ReceiveToIdle_IT>
 8001274:	bf00      	nop
 8001276:	6878      	ldr	r0, [r7, #4]
 8001278:	37a0      	adds	r7, #160	; 0xa0
 800127a:	46bd      	mov	sp, r7
 800127c:	bd80      	pop	{r7, pc}
 800127e:	bf00      	nop
 8001280:	200000d8 	.word	0x200000d8

08001284 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 8001284:	b580      	push	{r7, lr}
 8001286:	b088      	sub	sp, #32
 8001288:	af00      	add	r7, sp, #0
 800128a:	60f8      	str	r0, [r7, #12]
 800128c:	60b9      	str	r1, [r7, #8]
 800128e:	607a      	str	r2, [r7, #4]
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
 8001290:	68b8      	ldr	r0, [r7, #8]
 8001292:	f7ff ff85 	bl	80011a0 <_ZNSt11char_traitsIcE6lengthEPKc>
 8001296:	61f8      	str	r0, [r7, #28]
      __string_type __str(_Alloc_traits::_S_select_on_copy(
 8001298:	f107 0318 	add.w	r3, r7, #24
 800129c:	6879      	ldr	r1, [r7, #4]
 800129e:	4618      	mov	r0, r3
 80012a0:	f005 fbcc 	bl	8006a3c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>
 80012a4:	f107 0314 	add.w	r3, r7, #20
 80012a8:	f107 0218 	add.w	r2, r7, #24
 80012ac:	4611      	mov	r1, r2
 80012ae:	4618      	mov	r0, r3
 80012b0:	f000 f856 	bl	8001360 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
 80012b4:	f107 0314 	add.w	r3, r7, #20
 80012b8:	4619      	mov	r1, r3
 80012ba:	68f8      	ldr	r0, [r7, #12]
 80012bc:	f005 faf4 	bl	80068a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_>
 80012c0:	f107 0314 	add.w	r3, r7, #20
 80012c4:	4618      	mov	r0, r3
 80012c6:	f005 fa56 	bl	8006776 <_ZNSaIcED1Ev>
 80012ca:	f107 0318 	add.w	r3, r7, #24
 80012ce:	4618      	mov	r0, r3
 80012d0:	f005 fa51 	bl	8006776 <_ZNSaIcED1Ev>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
 80012d4:	6878      	ldr	r0, [r7, #4]
 80012d6:	f005 fb39 	bl	800694c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 80012da:	4602      	mov	r2, r0
 80012dc:	69fb      	ldr	r3, [r7, #28]
 80012de:	4413      	add	r3, r2
 80012e0:	4619      	mov	r1, r3
 80012e2:	68f8      	ldr	r0, [r7, #12]
 80012e4:	f005 fb36 	bl	8006954 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 80012e8:	69fa      	ldr	r2, [r7, #28]
 80012ea:	68b9      	ldr	r1, [r7, #8]
 80012ec:	68f8      	ldr	r0, [r7, #12]
 80012ee:	f005 fb79 	bl	80069e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 80012f2:	6879      	ldr	r1, [r7, #4]
 80012f4:	68f8      	ldr	r0, [r7, #12]
 80012f6:	f005 fb6e 	bl	80069d6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 80012fa:	bf00      	nop
    }
 80012fc:	68f8      	ldr	r0, [r7, #12]
 80012fe:	3720      	adds	r7, #32
 8001300:	46bd      	mov	sp, r7
 8001302:	bd80      	pop	{r7, pc}

08001304 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
    { return std::move(__rhs.insert(0, 1, __lhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8001304:	b580      	push	{r7, lr}
 8001306:	b084      	sub	sp, #16
 8001308:	af00      	add	r7, sp, #0
 800130a:	60f8      	str	r0, [r7, #12]
 800130c:	60b9      	str	r1, [r7, #8]
 800130e:	607a      	str	r2, [r7, #4]
	      const _CharT* __rhs)
    { return std::move(__lhs.append(__rhs)); }
 8001310:	6879      	ldr	r1, [r7, #4]
 8001312:	68b8      	ldr	r0, [r7, #8]
 8001314:	f005 fb76 	bl	8006a04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 8001318:	4603      	mov	r3, r0
 800131a:	4618      	mov	r0, r3
 800131c:	f7ff f9e3 	bl	80006e6 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8001320:	4603      	mov	r3, r0
 8001322:	4619      	mov	r1, r3
 8001324:	68f8      	ldr	r0, [r7, #12]
 8001326:	f005 fac6 	bl	80068b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 800132a:	68f8      	ldr	r0, [r7, #12]
 800132c:	3710      	adds	r7, #16
 800132e:	46bd      	mov	sp, r7
 8001330:	bd80      	pop	{r7, pc}

08001332 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8001332:	b580      	push	{r7, lr}
 8001334:	b084      	sub	sp, #16
 8001336:	af00      	add	r7, sp, #0
 8001338:	60f8      	str	r0, [r7, #12]
 800133a:	60b9      	str	r1, [r7, #8]
 800133c:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 800133e:	6879      	ldr	r1, [r7, #4]
 8001340:	68b8      	ldr	r0, [r7, #8]
 8001342:	f005 fb48 	bl	80069d6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8001346:	4603      	mov	r3, r0
 8001348:	4618      	mov	r0, r3
 800134a:	f7ff f9cc 	bl	80006e6 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800134e:	4603      	mov	r3, r0
 8001350:	4619      	mov	r1, r3
 8001352:	68f8      	ldr	r0, [r7, #12]
 8001354:	f005 faaf 	bl	80068b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8001358:	68f8      	ldr	r0, [r7, #12]
 800135a:	3710      	adds	r7, #16
 800135c:	46bd      	mov	sp, r7
 800135e:	bd80      	pop	{r7, pc}

08001360 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 8001360:	b580      	push	{r7, lr}
 8001362:	b082      	sub	sp, #8
 8001364:	af00      	add	r7, sp, #0
 8001366:	6078      	str	r0, [r7, #4]
 8001368:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	6839      	ldr	r1, [r7, #0]
 800136e:	4618      	mov	r0, r3
 8001370:	f000 f804 	bl	800137c <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
 8001374:	6878      	ldr	r0, [r7, #4]
 8001376:	3708      	adds	r7, #8
 8001378:	46bd      	mov	sp, r7
 800137a:	bd80      	pop	{r7, pc}

0800137c <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
       *  @brief  Obtain an allocator to use when copying a container.
       *  @param  __rhs  An allocator.
       *  @return @c __rhs
      */
      static _GLIBCXX20_CONSTEXPR allocator_type
      select_on_container_copy_construction(const allocator_type& __rhs)
 800137c:	b580      	push	{r7, lr}
 800137e:	b082      	sub	sp, #8
 8001380:	af00      	add	r7, sp, #0
 8001382:	6078      	str	r0, [r7, #4]
 8001384:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 8001386:	6839      	ldr	r1, [r7, #0]
 8001388:	6878      	ldr	r0, [r7, #4]
 800138a:	f005 f9f3 	bl	8006774 <_ZNSaIcEC1ERKS_>
 800138e:	6878      	ldr	r0, [r7, #4]
 8001390:	3708      	adds	r7, #8
 8001392:	46bd      	mov	sp, r7
 8001394:	bd80      	pop	{r7, pc}
	...

08001398 <HAL_MspInit>:
 8001398:	b580      	push	{r7, lr}
 800139a:	b082      	sub	sp, #8
 800139c:	af00      	add	r7, sp, #0
 800139e:	2300      	movs	r3, #0
 80013a0:	607b      	str	r3, [r7, #4]
 80013a2:	4b12      	ldr	r3, [pc, #72]	; (80013ec <HAL_MspInit+0x54>)
 80013a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013a6:	4a11      	ldr	r2, [pc, #68]	; (80013ec <HAL_MspInit+0x54>)
 80013a8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80013ac:	6453      	str	r3, [r2, #68]	; 0x44
 80013ae:	4b0f      	ldr	r3, [pc, #60]	; (80013ec <HAL_MspInit+0x54>)
 80013b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013b2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80013b6:	607b      	str	r3, [r7, #4]
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	2300      	movs	r3, #0
 80013bc:	603b      	str	r3, [r7, #0]
 80013be:	4b0b      	ldr	r3, [pc, #44]	; (80013ec <HAL_MspInit+0x54>)
 80013c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013c2:	4a0a      	ldr	r2, [pc, #40]	; (80013ec <HAL_MspInit+0x54>)
 80013c4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80013c8:	6413      	str	r3, [r2, #64]	; 0x40
 80013ca:	4b08      	ldr	r3, [pc, #32]	; (80013ec <HAL_MspInit+0x54>)
 80013cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80013d2:	603b      	str	r3, [r7, #0]
 80013d4:	683b      	ldr	r3, [r7, #0]
 80013d6:	2200      	movs	r2, #0
 80013d8:	210f      	movs	r1, #15
 80013da:	f06f 0001 	mvn.w	r0, #1
 80013de:	f000 fb94 	bl	8001b0a <HAL_NVIC_SetPriority>
 80013e2:	bf00      	nop
 80013e4:	3708      	adds	r7, #8
 80013e6:	46bd      	mov	sp, r7
 80013e8:	bd80      	pop	{r7, pc}
 80013ea:	bf00      	nop
 80013ec:	40023800 	.word	0x40023800

080013f0 <HAL_UART_MspInit>:
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b092      	sub	sp, #72	; 0x48
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	6078      	str	r0, [r7, #4]
 80013f8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80013fc:	2200      	movs	r2, #0
 80013fe:	601a      	str	r2, [r3, #0]
 8001400:	605a      	str	r2, [r3, #4]
 8001402:	609a      	str	r2, [r3, #8]
 8001404:	60da      	str	r2, [r3, #12]
 8001406:	611a      	str	r2, [r3, #16]
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	681b      	ldr	r3, [r3, #0]
 800140c:	4a8e      	ldr	r2, [pc, #568]	; (8001648 <HAL_UART_MspInit+0x258>)
 800140e:	4293      	cmp	r3, r2
 8001410:	d134      	bne.n	800147c <HAL_UART_MspInit+0x8c>
 8001412:	2300      	movs	r3, #0
 8001414:	633b      	str	r3, [r7, #48]	; 0x30
 8001416:	4b8d      	ldr	r3, [pc, #564]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001418:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800141a:	4a8c      	ldr	r2, [pc, #560]	; (800164c <HAL_UART_MspInit+0x25c>)
 800141c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001420:	6413      	str	r3, [r2, #64]	; 0x40
 8001422:	4b8a      	ldr	r3, [pc, #552]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001426:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800142a:	633b      	str	r3, [r7, #48]	; 0x30
 800142c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800142e:	2300      	movs	r3, #0
 8001430:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001432:	4b86      	ldr	r3, [pc, #536]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001434:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001436:	4a85      	ldr	r2, [pc, #532]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001438:	f043 0301 	orr.w	r3, r3, #1
 800143c:	6313      	str	r3, [r2, #48]	; 0x30
 800143e:	4b83      	ldr	r3, [pc, #524]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001442:	f003 0301 	and.w	r3, r3, #1
 8001446:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001448:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800144a:	2303      	movs	r3, #3
 800144c:	637b      	str	r3, [r7, #52]	; 0x34
 800144e:	2302      	movs	r3, #2
 8001450:	63bb      	str	r3, [r7, #56]	; 0x38
 8001452:	2300      	movs	r3, #0
 8001454:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001456:	2303      	movs	r3, #3
 8001458:	643b      	str	r3, [r7, #64]	; 0x40
 800145a:	2308      	movs	r3, #8
 800145c:	647b      	str	r3, [r7, #68]	; 0x44
 800145e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8001462:	4619      	mov	r1, r3
 8001464:	487a      	ldr	r0, [pc, #488]	; (8001650 <HAL_UART_MspInit+0x260>)
 8001466:	f000 fc19 	bl	8001c9c <HAL_GPIO_Init>
 800146a:	2200      	movs	r2, #0
 800146c:	2105      	movs	r1, #5
 800146e:	2034      	movs	r0, #52	; 0x34
 8001470:	f000 fb4b 	bl	8001b0a <HAL_NVIC_SetPriority>
 8001474:	2034      	movs	r0, #52	; 0x34
 8001476:	f000 fb64 	bl	8001b42 <HAL_NVIC_EnableIRQ>
 800147a:	e0e0      	b.n	800163e <HAL_UART_MspInit+0x24e>
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	4a74      	ldr	r2, [pc, #464]	; (8001654 <HAL_UART_MspInit+0x264>)
 8001482:	4293      	cmp	r3, r2
 8001484:	d135      	bne.n	80014f2 <HAL_UART_MspInit+0x102>
 8001486:	2300      	movs	r3, #0
 8001488:	62bb      	str	r3, [r7, #40]	; 0x28
 800148a:	4b70      	ldr	r3, [pc, #448]	; (800164c <HAL_UART_MspInit+0x25c>)
 800148c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800148e:	4a6f      	ldr	r2, [pc, #444]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001490:	f043 0310 	orr.w	r3, r3, #16
 8001494:	6453      	str	r3, [r2, #68]	; 0x44
 8001496:	4b6d      	ldr	r3, [pc, #436]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001498:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800149a:	f003 0310 	and.w	r3, r3, #16
 800149e:	62bb      	str	r3, [r7, #40]	; 0x28
 80014a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80014a2:	2300      	movs	r3, #0
 80014a4:	627b      	str	r3, [r7, #36]	; 0x24
 80014a6:	4b69      	ldr	r3, [pc, #420]	; (800164c <HAL_UART_MspInit+0x25c>)
 80014a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014aa:	4a68      	ldr	r2, [pc, #416]	; (800164c <HAL_UART_MspInit+0x25c>)
 80014ac:	f043 0301 	orr.w	r3, r3, #1
 80014b0:	6313      	str	r3, [r2, #48]	; 0x30
 80014b2:	4b66      	ldr	r3, [pc, #408]	; (800164c <HAL_UART_MspInit+0x25c>)
 80014b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014b6:	f003 0301 	and.w	r3, r3, #1
 80014ba:	627b      	str	r3, [r7, #36]	; 0x24
 80014bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014be:	f44f 53f0 	mov.w	r3, #7680	; 0x1e00
 80014c2:	637b      	str	r3, [r7, #52]	; 0x34
 80014c4:	2302      	movs	r3, #2
 80014c6:	63bb      	str	r3, [r7, #56]	; 0x38
 80014c8:	2300      	movs	r3, #0
 80014ca:	63fb      	str	r3, [r7, #60]	; 0x3c
 80014cc:	2303      	movs	r3, #3
 80014ce:	643b      	str	r3, [r7, #64]	; 0x40
 80014d0:	2307      	movs	r3, #7
 80014d2:	647b      	str	r3, [r7, #68]	; 0x44
 80014d4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80014d8:	4619      	mov	r1, r3
 80014da:	485d      	ldr	r0, [pc, #372]	; (8001650 <HAL_UART_MspInit+0x260>)
 80014dc:	f000 fbde 	bl	8001c9c <HAL_GPIO_Init>
 80014e0:	2200      	movs	r2, #0
 80014e2:	2105      	movs	r1, #5
 80014e4:	2025      	movs	r0, #37	; 0x25
 80014e6:	f000 fb10 	bl	8001b0a <HAL_NVIC_SetPriority>
 80014ea:	2025      	movs	r0, #37	; 0x25
 80014ec:	f000 fb29 	bl	8001b42 <HAL_NVIC_EnableIRQ>
 80014f0:	e0a5      	b.n	800163e <HAL_UART_MspInit+0x24e>
 80014f2:	687b      	ldr	r3, [r7, #4]
 80014f4:	681b      	ldr	r3, [r3, #0]
 80014f6:	4a58      	ldr	r2, [pc, #352]	; (8001658 <HAL_UART_MspInit+0x268>)
 80014f8:	4293      	cmp	r3, r2
 80014fa:	d134      	bne.n	8001566 <HAL_UART_MspInit+0x176>
 80014fc:	2300      	movs	r3, #0
 80014fe:	623b      	str	r3, [r7, #32]
 8001500:	4b52      	ldr	r3, [pc, #328]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001502:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001504:	4a51      	ldr	r2, [pc, #324]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001506:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800150a:	6413      	str	r3, [r2, #64]	; 0x40
 800150c:	4b4f      	ldr	r3, [pc, #316]	; (800164c <HAL_UART_MspInit+0x25c>)
 800150e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001510:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001514:	623b      	str	r3, [r7, #32]
 8001516:	6a3b      	ldr	r3, [r7, #32]
 8001518:	2300      	movs	r3, #0
 800151a:	61fb      	str	r3, [r7, #28]
 800151c:	4b4b      	ldr	r3, [pc, #300]	; (800164c <HAL_UART_MspInit+0x25c>)
 800151e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001520:	4a4a      	ldr	r2, [pc, #296]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001522:	f043 0301 	orr.w	r3, r3, #1
 8001526:	6313      	str	r3, [r2, #48]	; 0x30
 8001528:	4b48      	ldr	r3, [pc, #288]	; (800164c <HAL_UART_MspInit+0x25c>)
 800152a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800152c:	f003 0301 	and.w	r3, r3, #1
 8001530:	61fb      	str	r3, [r7, #28]
 8001532:	69fb      	ldr	r3, [r7, #28]
 8001534:	230c      	movs	r3, #12
 8001536:	637b      	str	r3, [r7, #52]	; 0x34
 8001538:	2302      	movs	r3, #2
 800153a:	63bb      	str	r3, [r7, #56]	; 0x38
 800153c:	2300      	movs	r3, #0
 800153e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001540:	2303      	movs	r3, #3
 8001542:	643b      	str	r3, [r7, #64]	; 0x40
 8001544:	2307      	movs	r3, #7
 8001546:	647b      	str	r3, [r7, #68]	; 0x44
 8001548:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800154c:	4619      	mov	r1, r3
 800154e:	4840      	ldr	r0, [pc, #256]	; (8001650 <HAL_UART_MspInit+0x260>)
 8001550:	f000 fba4 	bl	8001c9c <HAL_GPIO_Init>
 8001554:	2200      	movs	r2, #0
 8001556:	2105      	movs	r1, #5
 8001558:	2026      	movs	r0, #38	; 0x26
 800155a:	f000 fad6 	bl	8001b0a <HAL_NVIC_SetPriority>
 800155e:	2026      	movs	r0, #38	; 0x26
 8001560:	f000 faef 	bl	8001b42 <HAL_NVIC_EnableIRQ>
 8001564:	e06b      	b.n	800163e <HAL_UART_MspInit+0x24e>
 8001566:	687b      	ldr	r3, [r7, #4]
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	4a3c      	ldr	r2, [pc, #240]	; (800165c <HAL_UART_MspInit+0x26c>)
 800156c:	4293      	cmp	r3, r2
 800156e:	d12d      	bne.n	80015cc <HAL_UART_MspInit+0x1dc>
 8001570:	2300      	movs	r3, #0
 8001572:	61bb      	str	r3, [r7, #24]
 8001574:	4b35      	ldr	r3, [pc, #212]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001576:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001578:	4a34      	ldr	r2, [pc, #208]	; (800164c <HAL_UART_MspInit+0x25c>)
 800157a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800157e:	6413      	str	r3, [r2, #64]	; 0x40
 8001580:	4b32      	ldr	r3, [pc, #200]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001582:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001584:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001588:	61bb      	str	r3, [r7, #24]
 800158a:	69bb      	ldr	r3, [r7, #24]
 800158c:	2300      	movs	r3, #0
 800158e:	617b      	str	r3, [r7, #20]
 8001590:	4b2e      	ldr	r3, [pc, #184]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001592:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001594:	4a2d      	ldr	r2, [pc, #180]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001596:	f043 0304 	orr.w	r3, r3, #4
 800159a:	6313      	str	r3, [r2, #48]	; 0x30
 800159c:	4b2b      	ldr	r3, [pc, #172]	; (800164c <HAL_UART_MspInit+0x25c>)
 800159e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015a0:	f003 0304 	and.w	r3, r3, #4
 80015a4:	617b      	str	r3, [r7, #20]
 80015a6:	697b      	ldr	r3, [r7, #20]
 80015a8:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80015ac:	637b      	str	r3, [r7, #52]	; 0x34
 80015ae:	2302      	movs	r3, #2
 80015b0:	63bb      	str	r3, [r7, #56]	; 0x38
 80015b2:	2300      	movs	r3, #0
 80015b4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80015b6:	2303      	movs	r3, #3
 80015b8:	643b      	str	r3, [r7, #64]	; 0x40
 80015ba:	2307      	movs	r3, #7
 80015bc:	647b      	str	r3, [r7, #68]	; 0x44
 80015be:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80015c2:	4619      	mov	r1, r3
 80015c4:	4826      	ldr	r0, [pc, #152]	; (8001660 <HAL_UART_MspInit+0x270>)
 80015c6:	f000 fb69 	bl	8001c9c <HAL_GPIO_Init>
 80015ca:	e038      	b.n	800163e <HAL_UART_MspInit+0x24e>
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	681b      	ldr	r3, [r3, #0]
 80015d0:	4a24      	ldr	r2, [pc, #144]	; (8001664 <HAL_UART_MspInit+0x274>)
 80015d2:	4293      	cmp	r3, r2
 80015d4:	d133      	bne.n	800163e <HAL_UART_MspInit+0x24e>
 80015d6:	2300      	movs	r3, #0
 80015d8:	613b      	str	r3, [r7, #16]
 80015da:	4b1c      	ldr	r3, [pc, #112]	; (800164c <HAL_UART_MspInit+0x25c>)
 80015dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015de:	4a1b      	ldr	r2, [pc, #108]	; (800164c <HAL_UART_MspInit+0x25c>)
 80015e0:	f043 0320 	orr.w	r3, r3, #32
 80015e4:	6453      	str	r3, [r2, #68]	; 0x44
 80015e6:	4b19      	ldr	r3, [pc, #100]	; (800164c <HAL_UART_MspInit+0x25c>)
 80015e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015ea:	f003 0320 	and.w	r3, r3, #32
 80015ee:	613b      	str	r3, [r7, #16]
 80015f0:	693b      	ldr	r3, [r7, #16]
 80015f2:	2300      	movs	r3, #0
 80015f4:	60fb      	str	r3, [r7, #12]
 80015f6:	4b15      	ldr	r3, [pc, #84]	; (800164c <HAL_UART_MspInit+0x25c>)
 80015f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015fa:	4a14      	ldr	r2, [pc, #80]	; (800164c <HAL_UART_MspInit+0x25c>)
 80015fc:	f043 0304 	orr.w	r3, r3, #4
 8001600:	6313      	str	r3, [r2, #48]	; 0x30
 8001602:	4b12      	ldr	r3, [pc, #72]	; (800164c <HAL_UART_MspInit+0x25c>)
 8001604:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001606:	f003 0304 	and.w	r3, r3, #4
 800160a:	60fb      	str	r3, [r7, #12]
 800160c:	68fb      	ldr	r3, [r7, #12]
 800160e:	23c0      	movs	r3, #192	; 0xc0
 8001610:	637b      	str	r3, [r7, #52]	; 0x34
 8001612:	2302      	movs	r3, #2
 8001614:	63bb      	str	r3, [r7, #56]	; 0x38
 8001616:	2300      	movs	r3, #0
 8001618:	63fb      	str	r3, [r7, #60]	; 0x3c
 800161a:	2303      	movs	r3, #3
 800161c:	643b      	str	r3, [r7, #64]	; 0x40
 800161e:	2308      	movs	r3, #8
 8001620:	647b      	str	r3, [r7, #68]	; 0x44
 8001622:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8001626:	4619      	mov	r1, r3
 8001628:	480d      	ldr	r0, [pc, #52]	; (8001660 <HAL_UART_MspInit+0x270>)
 800162a:	f000 fb37 	bl	8001c9c <HAL_GPIO_Init>
 800162e:	2200      	movs	r2, #0
 8001630:	2105      	movs	r1, #5
 8001632:	2047      	movs	r0, #71	; 0x47
 8001634:	f000 fa69 	bl	8001b0a <HAL_NVIC_SetPriority>
 8001638:	2047      	movs	r0, #71	; 0x47
 800163a:	f000 fa82 	bl	8001b42 <HAL_NVIC_EnableIRQ>
 800163e:	bf00      	nop
 8001640:	3748      	adds	r7, #72	; 0x48
 8001642:	46bd      	mov	sp, r7
 8001644:	bd80      	pop	{r7, pc}
 8001646:	bf00      	nop
 8001648:	40004c00 	.word	0x40004c00
 800164c:	40023800 	.word	0x40023800
 8001650:	40020000 	.word	0x40020000
 8001654:	40011000 	.word	0x40011000
 8001658:	40004400 	.word	0x40004400
 800165c:	40004800 	.word	0x40004800
 8001660:	40020800 	.word	0x40020800
 8001664:	40011400 	.word	0x40011400

08001668 <NMI_Handler>:
 8001668:	b480      	push	{r7}
 800166a:	af00      	add	r7, sp, #0
 800166c:	e7fe      	b.n	800166c <NMI_Handler+0x4>

0800166e <HardFault_Handler>:
 800166e:	b480      	push	{r7}
 8001670:	af00      	add	r7, sp, #0
 8001672:	e7fe      	b.n	8001672 <HardFault_Handler+0x4>

08001674 <MemManage_Handler>:
 8001674:	b480      	push	{r7}
 8001676:	af00      	add	r7, sp, #0
 8001678:	e7fe      	b.n	8001678 <MemManage_Handler+0x4>

0800167a <BusFault_Handler>:
 800167a:	b480      	push	{r7}
 800167c:	af00      	add	r7, sp, #0
 800167e:	e7fe      	b.n	800167e <BusFault_Handler+0x4>

08001680 <UsageFault_Handler>:
 8001680:	b480      	push	{r7}
 8001682:	af00      	add	r7, sp, #0
 8001684:	e7fe      	b.n	8001684 <UsageFault_Handler+0x4>

08001686 <DebugMon_Handler>:
 8001686:	b480      	push	{r7}
 8001688:	af00      	add	r7, sp, #0
 800168a:	bf00      	nop
 800168c:	46bd      	mov	sp, r7
 800168e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001692:	4770      	bx	lr

08001694 <SysTick_Handler>:
 8001694:	b580      	push	{r7, lr}
 8001696:	af00      	add	r7, sp, #0
 8001698:	f000 f918 	bl	80018cc <HAL_IncTick>
 800169c:	f003 ffee 	bl	800567c <xTaskGetSchedulerState>
 80016a0:	4603      	mov	r3, r0
 80016a2:	2b01      	cmp	r3, #1
 80016a4:	d001      	beq.n	80016aa <SysTick_Handler+0x16>
 80016a6:	f004 fdd7 	bl	8006258 <xPortSysTickHandler>
 80016aa:	bf00      	nop
 80016ac:	bd80      	pop	{r7, pc}
	...

080016b0 <USART1_IRQHandler>:
 80016b0:	b580      	push	{r7, lr}
 80016b2:	af00      	add	r7, sp, #0
 80016b4:	4802      	ldr	r0, [pc, #8]	; (80016c0 <USART1_IRQHandler+0x10>)
 80016b6:	f001 fa5d 	bl	8002b74 <HAL_UART_IRQHandler>
 80016ba:	bf00      	nop
 80016bc:	bd80      	pop	{r7, pc}
 80016be:	bf00      	nop
 80016c0:	200000d8 	.word	0x200000d8

080016c4 <USART2_IRQHandler>:
 80016c4:	b580      	push	{r7, lr}
 80016c6:	af00      	add	r7, sp, #0
 80016c8:	4802      	ldr	r0, [pc, #8]	; (80016d4 <USART2_IRQHandler+0x10>)
 80016ca:	f001 fa53 	bl	8002b74 <HAL_UART_IRQHandler>
 80016ce:	bf00      	nop
 80016d0:	bd80      	pop	{r7, pc}
 80016d2:	bf00      	nop
 80016d4:	2000011c 	.word	0x2000011c

080016d8 <UART4_IRQHandler>:
 80016d8:	b580      	push	{r7, lr}
 80016da:	af00      	add	r7, sp, #0
 80016dc:	4802      	ldr	r0, [pc, #8]	; (80016e8 <UART4_IRQHandler+0x10>)
 80016de:	f001 fa49 	bl	8002b74 <HAL_UART_IRQHandler>
 80016e2:	bf00      	nop
 80016e4:	bd80      	pop	{r7, pc}
 80016e6:	bf00      	nop
 80016e8:	20000094 	.word	0x20000094

080016ec <USART6_IRQHandler>:
 80016ec:	b580      	push	{r7, lr}
 80016ee:	af00      	add	r7, sp, #0
 80016f0:	4802      	ldr	r0, [pc, #8]	; (80016fc <USART6_IRQHandler+0x10>)
 80016f2:	f001 fa3f 	bl	8002b74 <HAL_UART_IRQHandler>
 80016f6:	bf00      	nop
 80016f8:	bd80      	pop	{r7, pc}
 80016fa:	bf00      	nop
 80016fc:	200001a4 	.word	0x200001a4

08001700 <_getpid>:
 8001700:	b480      	push	{r7}
 8001702:	af00      	add	r7, sp, #0
 8001704:	2301      	movs	r3, #1
 8001706:	4618      	mov	r0, r3
 8001708:	46bd      	mov	sp, r7
 800170a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800170e:	4770      	bx	lr

08001710 <_kill>:
 8001710:	b580      	push	{r7, lr}
 8001712:	b082      	sub	sp, #8
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]
 8001718:	6039      	str	r1, [r7, #0]
 800171a:	f005 fb85 	bl	8006e28 <__errno>
 800171e:	4603      	mov	r3, r0
 8001720:	2216      	movs	r2, #22
 8001722:	601a      	str	r2, [r3, #0]
 8001724:	f04f 33ff 	mov.w	r3, #4294967295
 8001728:	4618      	mov	r0, r3
 800172a:	3708      	adds	r7, #8
 800172c:	46bd      	mov	sp, r7
 800172e:	bd80      	pop	{r7, pc}

08001730 <_exit>:
 8001730:	b580      	push	{r7, lr}
 8001732:	b082      	sub	sp, #8
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
 8001738:	f04f 31ff 	mov.w	r1, #4294967295
 800173c:	6878      	ldr	r0, [r7, #4]
 800173e:	f7ff ffe7 	bl	8001710 <_kill>
 8001742:	e7fe      	b.n	8001742 <_exit+0x12>

08001744 <_sbrk>:
 8001744:	b580      	push	{r7, lr}
 8001746:	b086      	sub	sp, #24
 8001748:	af00      	add	r7, sp, #0
 800174a:	6078      	str	r0, [r7, #4]
 800174c:	4a14      	ldr	r2, [pc, #80]	; (80017a0 <_sbrk+0x5c>)
 800174e:	4b15      	ldr	r3, [pc, #84]	; (80017a4 <_sbrk+0x60>)
 8001750:	1ad3      	subs	r3, r2, r3
 8001752:	617b      	str	r3, [r7, #20]
 8001754:	697b      	ldr	r3, [r7, #20]
 8001756:	613b      	str	r3, [r7, #16]
 8001758:	4b13      	ldr	r3, [pc, #76]	; (80017a8 <_sbrk+0x64>)
 800175a:	681b      	ldr	r3, [r3, #0]
 800175c:	2b00      	cmp	r3, #0
 800175e:	d102      	bne.n	8001766 <_sbrk+0x22>
 8001760:	4b11      	ldr	r3, [pc, #68]	; (80017a8 <_sbrk+0x64>)
 8001762:	4a12      	ldr	r2, [pc, #72]	; (80017ac <_sbrk+0x68>)
 8001764:	601a      	str	r2, [r3, #0]
 8001766:	4b10      	ldr	r3, [pc, #64]	; (80017a8 <_sbrk+0x64>)
 8001768:	681a      	ldr	r2, [r3, #0]
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	4413      	add	r3, r2
 800176e:	693a      	ldr	r2, [r7, #16]
 8001770:	429a      	cmp	r2, r3
 8001772:	d207      	bcs.n	8001784 <_sbrk+0x40>
 8001774:	f005 fb58 	bl	8006e28 <__errno>
 8001778:	4603      	mov	r3, r0
 800177a:	220c      	movs	r2, #12
 800177c:	601a      	str	r2, [r3, #0]
 800177e:	f04f 33ff 	mov.w	r3, #4294967295
 8001782:	e009      	b.n	8001798 <_sbrk+0x54>
 8001784:	4b08      	ldr	r3, [pc, #32]	; (80017a8 <_sbrk+0x64>)
 8001786:	681b      	ldr	r3, [r3, #0]
 8001788:	60fb      	str	r3, [r7, #12]
 800178a:	4b07      	ldr	r3, [pc, #28]	; (80017a8 <_sbrk+0x64>)
 800178c:	681a      	ldr	r2, [r3, #0]
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	4413      	add	r3, r2
 8001792:	4a05      	ldr	r2, [pc, #20]	; (80017a8 <_sbrk+0x64>)
 8001794:	6013      	str	r3, [r2, #0]
 8001796:	68fb      	ldr	r3, [r7, #12]
 8001798:	4618      	mov	r0, r3
 800179a:	3718      	adds	r7, #24
 800179c:	46bd      	mov	sp, r7
 800179e:	bd80      	pop	{r7, pc}
 80017a0:	20020000 	.word	0x20020000
 80017a4:	00000400 	.word	0x00000400
 80017a8:	2000039c 	.word	0x2000039c
 80017ac:	20004ed8 	.word	0x20004ed8

080017b0 <SystemInit>:
 80017b0:	b480      	push	{r7}
 80017b2:	af00      	add	r7, sp, #0
 80017b4:	4b06      	ldr	r3, [pc, #24]	; (80017d0 <SystemInit+0x20>)
 80017b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80017ba:	4a05      	ldr	r2, [pc, #20]	; (80017d0 <SystemInit+0x20>)
 80017bc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80017c0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80017c4:	bf00      	nop
 80017c6:	46bd      	mov	sp, r7
 80017c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017cc:	4770      	bx	lr
 80017ce:	bf00      	nop
 80017d0:	e000ed00 	.word	0xe000ed00

080017d4 <Reset_Handler>:
 80017d4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800180c <LoopFillZerobss+0x12>
 80017d8:	480d      	ldr	r0, [pc, #52]	; (8001810 <LoopFillZerobss+0x16>)
 80017da:	490e      	ldr	r1, [pc, #56]	; (8001814 <LoopFillZerobss+0x1a>)
 80017dc:	4a0e      	ldr	r2, [pc, #56]	; (8001818 <LoopFillZerobss+0x1e>)
 80017de:	2300      	movs	r3, #0
 80017e0:	e002      	b.n	80017e8 <LoopCopyDataInit>

080017e2 <CopyDataInit>:
 80017e2:	58d4      	ldr	r4, [r2, r3]
 80017e4:	50c4      	str	r4, [r0, r3]
 80017e6:	3304      	adds	r3, #4

080017e8 <LoopCopyDataInit>:
 80017e8:	18c4      	adds	r4, r0, r3
 80017ea:	428c      	cmp	r4, r1
 80017ec:	d3f9      	bcc.n	80017e2 <CopyDataInit>
 80017ee:	4a0b      	ldr	r2, [pc, #44]	; (800181c <LoopFillZerobss+0x22>)
 80017f0:	4c0b      	ldr	r4, [pc, #44]	; (8001820 <LoopFillZerobss+0x26>)
 80017f2:	2300      	movs	r3, #0
 80017f4:	e001      	b.n	80017fa <LoopFillZerobss>

080017f6 <FillZerobss>:
 80017f6:	6013      	str	r3, [r2, #0]
 80017f8:	3204      	adds	r2, #4

080017fa <LoopFillZerobss>:
 80017fa:	42a2      	cmp	r2, r4
 80017fc:	d3fb      	bcc.n	80017f6 <FillZerobss>
 80017fe:	f7ff ffd7 	bl	80017b0 <SystemInit>
 8001802:	f005 fb17 	bl	8006e34 <__libc_init_array>
 8001806:	f7ff f87d 	bl	8000904 <main>
 800180a:	4770      	bx	lr
 800180c:	20020000 	.word	0x20020000
 8001810:	20000000 	.word	0x20000000
 8001814:	20000060 	.word	0x20000060
 8001818:	08007970 	.word	0x08007970
 800181c:	20000060 	.word	0x20000060
 8001820:	20004ed8 	.word	0x20004ed8

08001824 <ADC_IRQHandler>:
 8001824:	e7fe      	b.n	8001824 <ADC_IRQHandler>
	...

08001828 <HAL_Init>:
 8001828:	b580      	push	{r7, lr}
 800182a:	af00      	add	r7, sp, #0
 800182c:	4b0e      	ldr	r3, [pc, #56]	; (8001868 <HAL_Init+0x40>)
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	4a0d      	ldr	r2, [pc, #52]	; (8001868 <HAL_Init+0x40>)
 8001832:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001836:	6013      	str	r3, [r2, #0]
 8001838:	4b0b      	ldr	r3, [pc, #44]	; (8001868 <HAL_Init+0x40>)
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	4a0a      	ldr	r2, [pc, #40]	; (8001868 <HAL_Init+0x40>)
 800183e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001842:	6013      	str	r3, [r2, #0]
 8001844:	4b08      	ldr	r3, [pc, #32]	; (8001868 <HAL_Init+0x40>)
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	4a07      	ldr	r2, [pc, #28]	; (8001868 <HAL_Init+0x40>)
 800184a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800184e:	6013      	str	r3, [r2, #0]
 8001850:	2003      	movs	r0, #3
 8001852:	f000 f94f 	bl	8001af4 <HAL_NVIC_SetPriorityGrouping>
 8001856:	200f      	movs	r0, #15
 8001858:	f000 f808 	bl	800186c <HAL_InitTick>
 800185c:	f7ff fd9c 	bl	8001398 <HAL_MspInit>
 8001860:	2300      	movs	r3, #0
 8001862:	4618      	mov	r0, r3
 8001864:	bd80      	pop	{r7, pc}
 8001866:	bf00      	nop
 8001868:	40023c00 	.word	0x40023c00

0800186c <HAL_InitTick>:
 800186c:	b580      	push	{r7, lr}
 800186e:	b082      	sub	sp, #8
 8001870:	af00      	add	r7, sp, #0
 8001872:	6078      	str	r0, [r7, #4]
 8001874:	4b12      	ldr	r3, [pc, #72]	; (80018c0 <HAL_InitTick+0x54>)
 8001876:	681a      	ldr	r2, [r3, #0]
 8001878:	4b12      	ldr	r3, [pc, #72]	; (80018c4 <HAL_InitTick+0x58>)
 800187a:	781b      	ldrb	r3, [r3, #0]
 800187c:	4619      	mov	r1, r3
 800187e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001882:	fbb3 f3f1 	udiv	r3, r3, r1
 8001886:	fbb2 f3f3 	udiv	r3, r2, r3
 800188a:	4618      	mov	r0, r3
 800188c:	f000 f967 	bl	8001b5e <HAL_SYSTICK_Config>
 8001890:	4603      	mov	r3, r0
 8001892:	2b00      	cmp	r3, #0
 8001894:	d001      	beq.n	800189a <HAL_InitTick+0x2e>
 8001896:	2301      	movs	r3, #1
 8001898:	e00e      	b.n	80018b8 <HAL_InitTick+0x4c>
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	2b0f      	cmp	r3, #15
 800189e:	d80a      	bhi.n	80018b6 <HAL_InitTick+0x4a>
 80018a0:	2200      	movs	r2, #0
 80018a2:	6879      	ldr	r1, [r7, #4]
 80018a4:	f04f 30ff 	mov.w	r0, #4294967295
 80018a8:	f000 f92f 	bl	8001b0a <HAL_NVIC_SetPriority>
 80018ac:	4a06      	ldr	r2, [pc, #24]	; (80018c8 <HAL_InitTick+0x5c>)
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	6013      	str	r3, [r2, #0]
 80018b2:	2300      	movs	r3, #0
 80018b4:	e000      	b.n	80018b8 <HAL_InitTick+0x4c>
 80018b6:	2301      	movs	r3, #1
 80018b8:	4618      	mov	r0, r3
 80018ba:	3708      	adds	r7, #8
 80018bc:	46bd      	mov	sp, r7
 80018be:	bd80      	pop	{r7, pc}
 80018c0:	20000000 	.word	0x20000000
 80018c4:	20000008 	.word	0x20000008
 80018c8:	20000004 	.word	0x20000004

080018cc <HAL_IncTick>:
 80018cc:	b480      	push	{r7}
 80018ce:	af00      	add	r7, sp, #0
 80018d0:	4b06      	ldr	r3, [pc, #24]	; (80018ec <HAL_IncTick+0x20>)
 80018d2:	781b      	ldrb	r3, [r3, #0]
 80018d4:	461a      	mov	r2, r3
 80018d6:	4b06      	ldr	r3, [pc, #24]	; (80018f0 <HAL_IncTick+0x24>)
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	4413      	add	r3, r2
 80018dc:	4a04      	ldr	r2, [pc, #16]	; (80018f0 <HAL_IncTick+0x24>)
 80018de:	6013      	str	r3, [r2, #0]
 80018e0:	bf00      	nop
 80018e2:	46bd      	mov	sp, r7
 80018e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018e8:	4770      	bx	lr
 80018ea:	bf00      	nop
 80018ec:	20000008 	.word	0x20000008
 80018f0:	200003a0 	.word	0x200003a0

080018f4 <HAL_GetTick>:
 80018f4:	b480      	push	{r7}
 80018f6:	af00      	add	r7, sp, #0
 80018f8:	4b03      	ldr	r3, [pc, #12]	; (8001908 <HAL_GetTick+0x14>)
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	4618      	mov	r0, r3
 80018fe:	46bd      	mov	sp, r7
 8001900:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001904:	4770      	bx	lr
 8001906:	bf00      	nop
 8001908:	200003a0 	.word	0x200003a0

0800190c <HAL_Delay>:
 800190c:	b580      	push	{r7, lr}
 800190e:	b084      	sub	sp, #16
 8001910:	af00      	add	r7, sp, #0
 8001912:	6078      	str	r0, [r7, #4]
 8001914:	f7ff ffee 	bl	80018f4 <HAL_GetTick>
 8001918:	60b8      	str	r0, [r7, #8]
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	60fb      	str	r3, [r7, #12]
 800191e:	68fb      	ldr	r3, [r7, #12]
 8001920:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001924:	d005      	beq.n	8001932 <HAL_Delay+0x26>
 8001926:	4b0a      	ldr	r3, [pc, #40]	; (8001950 <HAL_Delay+0x44>)
 8001928:	781b      	ldrb	r3, [r3, #0]
 800192a:	461a      	mov	r2, r3
 800192c:	68fb      	ldr	r3, [r7, #12]
 800192e:	4413      	add	r3, r2
 8001930:	60fb      	str	r3, [r7, #12]
 8001932:	bf00      	nop
 8001934:	f7ff ffde 	bl	80018f4 <HAL_GetTick>
 8001938:	4602      	mov	r2, r0
 800193a:	68bb      	ldr	r3, [r7, #8]
 800193c:	1ad3      	subs	r3, r2, r3
 800193e:	68fa      	ldr	r2, [r7, #12]
 8001940:	429a      	cmp	r2, r3
 8001942:	d8f7      	bhi.n	8001934 <HAL_Delay+0x28>
 8001944:	bf00      	nop
 8001946:	bf00      	nop
 8001948:	3710      	adds	r7, #16
 800194a:	46bd      	mov	sp, r7
 800194c:	bd80      	pop	{r7, pc}
 800194e:	bf00      	nop
 8001950:	20000008 	.word	0x20000008

08001954 <__NVIC_SetPriorityGrouping>:
 8001954:	b480      	push	{r7}
 8001956:	b085      	sub	sp, #20
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	f003 0307 	and.w	r3, r3, #7
 8001962:	60fb      	str	r3, [r7, #12]
 8001964:	4b0c      	ldr	r3, [pc, #48]	; (8001998 <__NVIC_SetPriorityGrouping+0x44>)
 8001966:	68db      	ldr	r3, [r3, #12]
 8001968:	60bb      	str	r3, [r7, #8]
 800196a:	68ba      	ldr	r2, [r7, #8]
 800196c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001970:	4013      	ands	r3, r2
 8001972:	60bb      	str	r3, [r7, #8]
 8001974:	68fb      	ldr	r3, [r7, #12]
 8001976:	021a      	lsls	r2, r3, #8
 8001978:	68bb      	ldr	r3, [r7, #8]
 800197a:	4313      	orrs	r3, r2
 800197c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001980:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001984:	60bb      	str	r3, [r7, #8]
 8001986:	4a04      	ldr	r2, [pc, #16]	; (8001998 <__NVIC_SetPriorityGrouping+0x44>)
 8001988:	68bb      	ldr	r3, [r7, #8]
 800198a:	60d3      	str	r3, [r2, #12]
 800198c:	bf00      	nop
 800198e:	3714      	adds	r7, #20
 8001990:	46bd      	mov	sp, r7
 8001992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001996:	4770      	bx	lr
 8001998:	e000ed00 	.word	0xe000ed00

0800199c <__NVIC_GetPriorityGrouping>:
 800199c:	b480      	push	{r7}
 800199e:	af00      	add	r7, sp, #0
 80019a0:	4b04      	ldr	r3, [pc, #16]	; (80019b4 <__NVIC_GetPriorityGrouping+0x18>)
 80019a2:	68db      	ldr	r3, [r3, #12]
 80019a4:	0a1b      	lsrs	r3, r3, #8
 80019a6:	f003 0307 	and.w	r3, r3, #7
 80019aa:	4618      	mov	r0, r3
 80019ac:	46bd      	mov	sp, r7
 80019ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b2:	4770      	bx	lr
 80019b4:	e000ed00 	.word	0xe000ed00

080019b8 <__NVIC_EnableIRQ>:
 80019b8:	b480      	push	{r7}
 80019ba:	b083      	sub	sp, #12
 80019bc:	af00      	add	r7, sp, #0
 80019be:	4603      	mov	r3, r0
 80019c0:	71fb      	strb	r3, [r7, #7]
 80019c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019c6:	2b00      	cmp	r3, #0
 80019c8:	db0b      	blt.n	80019e2 <__NVIC_EnableIRQ+0x2a>
 80019ca:	79fb      	ldrb	r3, [r7, #7]
 80019cc:	f003 021f 	and.w	r2, r3, #31
 80019d0:	4907      	ldr	r1, [pc, #28]	; (80019f0 <__NVIC_EnableIRQ+0x38>)
 80019d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019d6:	095b      	lsrs	r3, r3, #5
 80019d8:	2001      	movs	r0, #1
 80019da:	fa00 f202 	lsl.w	r2, r0, r2
 80019de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80019e2:	bf00      	nop
 80019e4:	370c      	adds	r7, #12
 80019e6:	46bd      	mov	sp, r7
 80019e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ec:	4770      	bx	lr
 80019ee:	bf00      	nop
 80019f0:	e000e100 	.word	0xe000e100

080019f4 <__NVIC_SetPriority>:
 80019f4:	b480      	push	{r7}
 80019f6:	b083      	sub	sp, #12
 80019f8:	af00      	add	r7, sp, #0
 80019fa:	4603      	mov	r3, r0
 80019fc:	6039      	str	r1, [r7, #0]
 80019fe:	71fb      	strb	r3, [r7, #7]
 8001a00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a04:	2b00      	cmp	r3, #0
 8001a06:	db0a      	blt.n	8001a1e <__NVIC_SetPriority+0x2a>
 8001a08:	683b      	ldr	r3, [r7, #0]
 8001a0a:	b2da      	uxtb	r2, r3
 8001a0c:	490c      	ldr	r1, [pc, #48]	; (8001a40 <__NVIC_SetPriority+0x4c>)
 8001a0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a12:	0112      	lsls	r2, r2, #4
 8001a14:	b2d2      	uxtb	r2, r2
 8001a16:	440b      	add	r3, r1
 8001a18:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001a1c:	e00a      	b.n	8001a34 <__NVIC_SetPriority+0x40>
 8001a1e:	683b      	ldr	r3, [r7, #0]
 8001a20:	b2da      	uxtb	r2, r3
 8001a22:	4908      	ldr	r1, [pc, #32]	; (8001a44 <__NVIC_SetPriority+0x50>)
 8001a24:	79fb      	ldrb	r3, [r7, #7]
 8001a26:	f003 030f 	and.w	r3, r3, #15
 8001a2a:	3b04      	subs	r3, #4
 8001a2c:	0112      	lsls	r2, r2, #4
 8001a2e:	b2d2      	uxtb	r2, r2
 8001a30:	440b      	add	r3, r1
 8001a32:	761a      	strb	r2, [r3, #24]
 8001a34:	bf00      	nop
 8001a36:	370c      	adds	r7, #12
 8001a38:	46bd      	mov	sp, r7
 8001a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3e:	4770      	bx	lr
 8001a40:	e000e100 	.word	0xe000e100
 8001a44:	e000ed00 	.word	0xe000ed00

08001a48 <NVIC_EncodePriority>:
 8001a48:	b480      	push	{r7}
 8001a4a:	b089      	sub	sp, #36	; 0x24
 8001a4c:	af00      	add	r7, sp, #0
 8001a4e:	60f8      	str	r0, [r7, #12]
 8001a50:	60b9      	str	r1, [r7, #8]
 8001a52:	607a      	str	r2, [r7, #4]
 8001a54:	68fb      	ldr	r3, [r7, #12]
 8001a56:	f003 0307 	and.w	r3, r3, #7
 8001a5a:	61fb      	str	r3, [r7, #28]
 8001a5c:	69fb      	ldr	r3, [r7, #28]
 8001a5e:	f1c3 0307 	rsb	r3, r3, #7
 8001a62:	2b04      	cmp	r3, #4
 8001a64:	bf28      	it	cs
 8001a66:	2304      	movcs	r3, #4
 8001a68:	61bb      	str	r3, [r7, #24]
 8001a6a:	69fb      	ldr	r3, [r7, #28]
 8001a6c:	3304      	adds	r3, #4
 8001a6e:	2b06      	cmp	r3, #6
 8001a70:	d902      	bls.n	8001a78 <NVIC_EncodePriority+0x30>
 8001a72:	69fb      	ldr	r3, [r7, #28]
 8001a74:	3b03      	subs	r3, #3
 8001a76:	e000      	b.n	8001a7a <NVIC_EncodePriority+0x32>
 8001a78:	2300      	movs	r3, #0
 8001a7a:	617b      	str	r3, [r7, #20]
 8001a7c:	f04f 32ff 	mov.w	r2, #4294967295
 8001a80:	69bb      	ldr	r3, [r7, #24]
 8001a82:	fa02 f303 	lsl.w	r3, r2, r3
 8001a86:	43da      	mvns	r2, r3
 8001a88:	68bb      	ldr	r3, [r7, #8]
 8001a8a:	401a      	ands	r2, r3
 8001a8c:	697b      	ldr	r3, [r7, #20]
 8001a8e:	409a      	lsls	r2, r3
 8001a90:	f04f 31ff 	mov.w	r1, #4294967295
 8001a94:	697b      	ldr	r3, [r7, #20]
 8001a96:	fa01 f303 	lsl.w	r3, r1, r3
 8001a9a:	43d9      	mvns	r1, r3
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	400b      	ands	r3, r1
 8001aa0:	4313      	orrs	r3, r2
 8001aa2:	4618      	mov	r0, r3
 8001aa4:	3724      	adds	r7, #36	; 0x24
 8001aa6:	46bd      	mov	sp, r7
 8001aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aac:	4770      	bx	lr
	...

08001ab0 <SysTick_Config>:
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b082      	sub	sp, #8
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	6078      	str	r0, [r7, #4]
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	3b01      	subs	r3, #1
 8001abc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001ac0:	d301      	bcc.n	8001ac6 <SysTick_Config+0x16>
 8001ac2:	2301      	movs	r3, #1
 8001ac4:	e00f      	b.n	8001ae6 <SysTick_Config+0x36>
 8001ac6:	4a0a      	ldr	r2, [pc, #40]	; (8001af0 <SysTick_Config+0x40>)
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	3b01      	subs	r3, #1
 8001acc:	6053      	str	r3, [r2, #4]
 8001ace:	210f      	movs	r1, #15
 8001ad0:	f04f 30ff 	mov.w	r0, #4294967295
 8001ad4:	f7ff ff8e 	bl	80019f4 <__NVIC_SetPriority>
 8001ad8:	4b05      	ldr	r3, [pc, #20]	; (8001af0 <SysTick_Config+0x40>)
 8001ada:	2200      	movs	r2, #0
 8001adc:	609a      	str	r2, [r3, #8]
 8001ade:	4b04      	ldr	r3, [pc, #16]	; (8001af0 <SysTick_Config+0x40>)
 8001ae0:	2207      	movs	r2, #7
 8001ae2:	601a      	str	r2, [r3, #0]
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	4618      	mov	r0, r3
 8001ae8:	3708      	adds	r7, #8
 8001aea:	46bd      	mov	sp, r7
 8001aec:	bd80      	pop	{r7, pc}
 8001aee:	bf00      	nop
 8001af0:	e000e010 	.word	0xe000e010

08001af4 <HAL_NVIC_SetPriorityGrouping>:
 8001af4:	b580      	push	{r7, lr}
 8001af6:	b082      	sub	sp, #8
 8001af8:	af00      	add	r7, sp, #0
 8001afa:	6078      	str	r0, [r7, #4]
 8001afc:	6878      	ldr	r0, [r7, #4]
 8001afe:	f7ff ff29 	bl	8001954 <__NVIC_SetPriorityGrouping>
 8001b02:	bf00      	nop
 8001b04:	3708      	adds	r7, #8
 8001b06:	46bd      	mov	sp, r7
 8001b08:	bd80      	pop	{r7, pc}

08001b0a <HAL_NVIC_SetPriority>:
 8001b0a:	b580      	push	{r7, lr}
 8001b0c:	b086      	sub	sp, #24
 8001b0e:	af00      	add	r7, sp, #0
 8001b10:	4603      	mov	r3, r0
 8001b12:	60b9      	str	r1, [r7, #8]
 8001b14:	607a      	str	r2, [r7, #4]
 8001b16:	73fb      	strb	r3, [r7, #15]
 8001b18:	2300      	movs	r3, #0
 8001b1a:	617b      	str	r3, [r7, #20]
 8001b1c:	f7ff ff3e 	bl	800199c <__NVIC_GetPriorityGrouping>
 8001b20:	6178      	str	r0, [r7, #20]
 8001b22:	687a      	ldr	r2, [r7, #4]
 8001b24:	68b9      	ldr	r1, [r7, #8]
 8001b26:	6978      	ldr	r0, [r7, #20]
 8001b28:	f7ff ff8e 	bl	8001a48 <NVIC_EncodePriority>
 8001b2c:	4602      	mov	r2, r0
 8001b2e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b32:	4611      	mov	r1, r2
 8001b34:	4618      	mov	r0, r3
 8001b36:	f7ff ff5d 	bl	80019f4 <__NVIC_SetPriority>
 8001b3a:	bf00      	nop
 8001b3c:	3718      	adds	r7, #24
 8001b3e:	46bd      	mov	sp, r7
 8001b40:	bd80      	pop	{r7, pc}

08001b42 <HAL_NVIC_EnableIRQ>:
 8001b42:	b580      	push	{r7, lr}
 8001b44:	b082      	sub	sp, #8
 8001b46:	af00      	add	r7, sp, #0
 8001b48:	4603      	mov	r3, r0
 8001b4a:	71fb      	strb	r3, [r7, #7]
 8001b4c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b50:	4618      	mov	r0, r3
 8001b52:	f7ff ff31 	bl	80019b8 <__NVIC_EnableIRQ>
 8001b56:	bf00      	nop
 8001b58:	3708      	adds	r7, #8
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	bd80      	pop	{r7, pc}

08001b5e <HAL_SYSTICK_Config>:
 8001b5e:	b580      	push	{r7, lr}
 8001b60:	b082      	sub	sp, #8
 8001b62:	af00      	add	r7, sp, #0
 8001b64:	6078      	str	r0, [r7, #4]
 8001b66:	6878      	ldr	r0, [r7, #4]
 8001b68:	f7ff ffa2 	bl	8001ab0 <SysTick_Config>
 8001b6c:	4603      	mov	r3, r0
 8001b6e:	4618      	mov	r0, r3
 8001b70:	3708      	adds	r7, #8
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bd80      	pop	{r7, pc}

08001b76 <HAL_DMA_Abort>:
 8001b76:	b580      	push	{r7, lr}
 8001b78:	b084      	sub	sp, #16
 8001b7a:	af00      	add	r7, sp, #0
 8001b7c:	6078      	str	r0, [r7, #4]
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001b82:	60fb      	str	r3, [r7, #12]
 8001b84:	f7ff feb6 	bl	80018f4 <HAL_GetTick>
 8001b88:	60b8      	str	r0, [r7, #8]
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001b90:	b2db      	uxtb	r3, r3
 8001b92:	2b02      	cmp	r3, #2
 8001b94:	d008      	beq.n	8001ba8 <HAL_DMA_Abort+0x32>
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	2280      	movs	r2, #128	; 0x80
 8001b9a:	655a      	str	r2, [r3, #84]	; 0x54
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001ba4:	2301      	movs	r3, #1
 8001ba6:	e052      	b.n	8001c4e <HAL_DMA_Abort+0xd8>
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	681a      	ldr	r2, [r3, #0]
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	f022 0216 	bic.w	r2, r2, #22
 8001bb6:	601a      	str	r2, [r3, #0]
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	695a      	ldr	r2, [r3, #20]
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	681b      	ldr	r3, [r3, #0]
 8001bc2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001bc6:	615a      	str	r2, [r3, #20]
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d103      	bne.n	8001bd8 <HAL_DMA_Abort+0x62>
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d007      	beq.n	8001be8 <HAL_DMA_Abort+0x72>
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	681a      	ldr	r2, [r3, #0]
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	f022 0208 	bic.w	r2, r2, #8
 8001be6:	601a      	str	r2, [r3, #0]
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	681a      	ldr	r2, [r3, #0]
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	f022 0201 	bic.w	r2, r2, #1
 8001bf6:	601a      	str	r2, [r3, #0]
 8001bf8:	e013      	b.n	8001c22 <HAL_DMA_Abort+0xac>
 8001bfa:	f7ff fe7b 	bl	80018f4 <HAL_GetTick>
 8001bfe:	4602      	mov	r2, r0
 8001c00:	68bb      	ldr	r3, [r7, #8]
 8001c02:	1ad3      	subs	r3, r2, r3
 8001c04:	2b05      	cmp	r3, #5
 8001c06:	d90c      	bls.n	8001c22 <HAL_DMA_Abort+0xac>
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	2220      	movs	r2, #32
 8001c0c:	655a      	str	r2, [r3, #84]	; 0x54
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	2203      	movs	r2, #3
 8001c12:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	2200      	movs	r2, #0
 8001c1a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001c1e:	2303      	movs	r3, #3
 8001c20:	e015      	b.n	8001c4e <HAL_DMA_Abort+0xd8>
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	f003 0301 	and.w	r3, r3, #1
 8001c2c:	2b00      	cmp	r3, #0
 8001c2e:	d1e4      	bne.n	8001bfa <HAL_DMA_Abort+0x84>
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001c34:	223f      	movs	r2, #63	; 0x3f
 8001c36:	409a      	lsls	r2, r3
 8001c38:	68fb      	ldr	r3, [r7, #12]
 8001c3a:	609a      	str	r2, [r3, #8]
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	2201      	movs	r2, #1
 8001c40:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	2200      	movs	r2, #0
 8001c48:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001c4c:	2300      	movs	r3, #0
 8001c4e:	4618      	mov	r0, r3
 8001c50:	3710      	adds	r7, #16
 8001c52:	46bd      	mov	sp, r7
 8001c54:	bd80      	pop	{r7, pc}

08001c56 <HAL_DMA_Abort_IT>:
 8001c56:	b480      	push	{r7}
 8001c58:	b083      	sub	sp, #12
 8001c5a:	af00      	add	r7, sp, #0
 8001c5c:	6078      	str	r0, [r7, #4]
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001c64:	b2db      	uxtb	r3, r3
 8001c66:	2b02      	cmp	r3, #2
 8001c68:	d004      	beq.n	8001c74 <HAL_DMA_Abort_IT+0x1e>
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	2280      	movs	r2, #128	; 0x80
 8001c6e:	655a      	str	r2, [r3, #84]	; 0x54
 8001c70:	2301      	movs	r3, #1
 8001c72:	e00c      	b.n	8001c8e <HAL_DMA_Abort_IT+0x38>
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	2205      	movs	r2, #5
 8001c78:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	681a      	ldr	r2, [r3, #0]
 8001c82:	687b      	ldr	r3, [r7, #4]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	f022 0201 	bic.w	r2, r2, #1
 8001c8a:	601a      	str	r2, [r3, #0]
 8001c8c:	2300      	movs	r3, #0
 8001c8e:	4618      	mov	r0, r3
 8001c90:	370c      	adds	r7, #12
 8001c92:	46bd      	mov	sp, r7
 8001c94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c98:	4770      	bx	lr
	...

08001c9c <HAL_GPIO_Init>:
 8001c9c:	b480      	push	{r7}
 8001c9e:	b089      	sub	sp, #36	; 0x24
 8001ca0:	af00      	add	r7, sp, #0
 8001ca2:	6078      	str	r0, [r7, #4]
 8001ca4:	6039      	str	r1, [r7, #0]
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	617b      	str	r3, [r7, #20]
 8001caa:	2300      	movs	r3, #0
 8001cac:	613b      	str	r3, [r7, #16]
 8001cae:	2300      	movs	r3, #0
 8001cb0:	61bb      	str	r3, [r7, #24]
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	61fb      	str	r3, [r7, #28]
 8001cb6:	e16b      	b.n	8001f90 <HAL_GPIO_Init+0x2f4>
 8001cb8:	2201      	movs	r2, #1
 8001cba:	69fb      	ldr	r3, [r7, #28]
 8001cbc:	fa02 f303 	lsl.w	r3, r2, r3
 8001cc0:	617b      	str	r3, [r7, #20]
 8001cc2:	683b      	ldr	r3, [r7, #0]
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	697a      	ldr	r2, [r7, #20]
 8001cc8:	4013      	ands	r3, r2
 8001cca:	613b      	str	r3, [r7, #16]
 8001ccc:	693a      	ldr	r2, [r7, #16]
 8001cce:	697b      	ldr	r3, [r7, #20]
 8001cd0:	429a      	cmp	r2, r3
 8001cd2:	f040 815a 	bne.w	8001f8a <HAL_GPIO_Init+0x2ee>
 8001cd6:	683b      	ldr	r3, [r7, #0]
 8001cd8:	685b      	ldr	r3, [r3, #4]
 8001cda:	f003 0303 	and.w	r3, r3, #3
 8001cde:	2b01      	cmp	r3, #1
 8001ce0:	d005      	beq.n	8001cee <HAL_GPIO_Init+0x52>
 8001ce2:	683b      	ldr	r3, [r7, #0]
 8001ce4:	685b      	ldr	r3, [r3, #4]
 8001ce6:	f003 0303 	and.w	r3, r3, #3
 8001cea:	2b02      	cmp	r3, #2
 8001cec:	d130      	bne.n	8001d50 <HAL_GPIO_Init+0xb4>
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	689b      	ldr	r3, [r3, #8]
 8001cf2:	61bb      	str	r3, [r7, #24]
 8001cf4:	69fb      	ldr	r3, [r7, #28]
 8001cf6:	005b      	lsls	r3, r3, #1
 8001cf8:	2203      	movs	r2, #3
 8001cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8001cfe:	43db      	mvns	r3, r3
 8001d00:	69ba      	ldr	r2, [r7, #24]
 8001d02:	4013      	ands	r3, r2
 8001d04:	61bb      	str	r3, [r7, #24]
 8001d06:	683b      	ldr	r3, [r7, #0]
 8001d08:	68da      	ldr	r2, [r3, #12]
 8001d0a:	69fb      	ldr	r3, [r7, #28]
 8001d0c:	005b      	lsls	r3, r3, #1
 8001d0e:	fa02 f303 	lsl.w	r3, r2, r3
 8001d12:	69ba      	ldr	r2, [r7, #24]
 8001d14:	4313      	orrs	r3, r2
 8001d16:	61bb      	str	r3, [r7, #24]
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	69ba      	ldr	r2, [r7, #24]
 8001d1c:	609a      	str	r2, [r3, #8]
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	685b      	ldr	r3, [r3, #4]
 8001d22:	61bb      	str	r3, [r7, #24]
 8001d24:	2201      	movs	r2, #1
 8001d26:	69fb      	ldr	r3, [r7, #28]
 8001d28:	fa02 f303 	lsl.w	r3, r2, r3
 8001d2c:	43db      	mvns	r3, r3
 8001d2e:	69ba      	ldr	r2, [r7, #24]
 8001d30:	4013      	ands	r3, r2
 8001d32:	61bb      	str	r3, [r7, #24]
 8001d34:	683b      	ldr	r3, [r7, #0]
 8001d36:	685b      	ldr	r3, [r3, #4]
 8001d38:	091b      	lsrs	r3, r3, #4
 8001d3a:	f003 0201 	and.w	r2, r3, #1
 8001d3e:	69fb      	ldr	r3, [r7, #28]
 8001d40:	fa02 f303 	lsl.w	r3, r2, r3
 8001d44:	69ba      	ldr	r2, [r7, #24]
 8001d46:	4313      	orrs	r3, r2
 8001d48:	61bb      	str	r3, [r7, #24]
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	69ba      	ldr	r2, [r7, #24]
 8001d4e:	605a      	str	r2, [r3, #4]
 8001d50:	683b      	ldr	r3, [r7, #0]
 8001d52:	685b      	ldr	r3, [r3, #4]
 8001d54:	f003 0303 	and.w	r3, r3, #3
 8001d58:	2b03      	cmp	r3, #3
 8001d5a:	d017      	beq.n	8001d8c <HAL_GPIO_Init+0xf0>
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	68db      	ldr	r3, [r3, #12]
 8001d60:	61bb      	str	r3, [r7, #24]
 8001d62:	69fb      	ldr	r3, [r7, #28]
 8001d64:	005b      	lsls	r3, r3, #1
 8001d66:	2203      	movs	r2, #3
 8001d68:	fa02 f303 	lsl.w	r3, r2, r3
 8001d6c:	43db      	mvns	r3, r3
 8001d6e:	69ba      	ldr	r2, [r7, #24]
 8001d70:	4013      	ands	r3, r2
 8001d72:	61bb      	str	r3, [r7, #24]
 8001d74:	683b      	ldr	r3, [r7, #0]
 8001d76:	689a      	ldr	r2, [r3, #8]
 8001d78:	69fb      	ldr	r3, [r7, #28]
 8001d7a:	005b      	lsls	r3, r3, #1
 8001d7c:	fa02 f303 	lsl.w	r3, r2, r3
 8001d80:	69ba      	ldr	r2, [r7, #24]
 8001d82:	4313      	orrs	r3, r2
 8001d84:	61bb      	str	r3, [r7, #24]
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	69ba      	ldr	r2, [r7, #24]
 8001d8a:	60da      	str	r2, [r3, #12]
 8001d8c:	683b      	ldr	r3, [r7, #0]
 8001d8e:	685b      	ldr	r3, [r3, #4]
 8001d90:	f003 0303 	and.w	r3, r3, #3
 8001d94:	2b02      	cmp	r3, #2
 8001d96:	d123      	bne.n	8001de0 <HAL_GPIO_Init+0x144>
 8001d98:	69fb      	ldr	r3, [r7, #28]
 8001d9a:	08da      	lsrs	r2, r3, #3
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	3208      	adds	r2, #8
 8001da0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001da4:	61bb      	str	r3, [r7, #24]
 8001da6:	69fb      	ldr	r3, [r7, #28]
 8001da8:	f003 0307 	and.w	r3, r3, #7
 8001dac:	009b      	lsls	r3, r3, #2
 8001dae:	220f      	movs	r2, #15
 8001db0:	fa02 f303 	lsl.w	r3, r2, r3
 8001db4:	43db      	mvns	r3, r3
 8001db6:	69ba      	ldr	r2, [r7, #24]
 8001db8:	4013      	ands	r3, r2
 8001dba:	61bb      	str	r3, [r7, #24]
 8001dbc:	683b      	ldr	r3, [r7, #0]
 8001dbe:	691a      	ldr	r2, [r3, #16]
 8001dc0:	69fb      	ldr	r3, [r7, #28]
 8001dc2:	f003 0307 	and.w	r3, r3, #7
 8001dc6:	009b      	lsls	r3, r3, #2
 8001dc8:	fa02 f303 	lsl.w	r3, r2, r3
 8001dcc:	69ba      	ldr	r2, [r7, #24]
 8001dce:	4313      	orrs	r3, r2
 8001dd0:	61bb      	str	r3, [r7, #24]
 8001dd2:	69fb      	ldr	r3, [r7, #28]
 8001dd4:	08da      	lsrs	r2, r3, #3
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	3208      	adds	r2, #8
 8001dda:	69b9      	ldr	r1, [r7, #24]
 8001ddc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	61bb      	str	r3, [r7, #24]
 8001de6:	69fb      	ldr	r3, [r7, #28]
 8001de8:	005b      	lsls	r3, r3, #1
 8001dea:	2203      	movs	r2, #3
 8001dec:	fa02 f303 	lsl.w	r3, r2, r3
 8001df0:	43db      	mvns	r3, r3
 8001df2:	69ba      	ldr	r2, [r7, #24]
 8001df4:	4013      	ands	r3, r2
 8001df6:	61bb      	str	r3, [r7, #24]
 8001df8:	683b      	ldr	r3, [r7, #0]
 8001dfa:	685b      	ldr	r3, [r3, #4]
 8001dfc:	f003 0203 	and.w	r2, r3, #3
 8001e00:	69fb      	ldr	r3, [r7, #28]
 8001e02:	005b      	lsls	r3, r3, #1
 8001e04:	fa02 f303 	lsl.w	r3, r2, r3
 8001e08:	69ba      	ldr	r2, [r7, #24]
 8001e0a:	4313      	orrs	r3, r2
 8001e0c:	61bb      	str	r3, [r7, #24]
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	69ba      	ldr	r2, [r7, #24]
 8001e12:	601a      	str	r2, [r3, #0]
 8001e14:	683b      	ldr	r3, [r7, #0]
 8001e16:	685b      	ldr	r3, [r3, #4]
 8001e18:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	f000 80b4 	beq.w	8001f8a <HAL_GPIO_Init+0x2ee>
 8001e22:	2300      	movs	r3, #0
 8001e24:	60fb      	str	r3, [r7, #12]
 8001e26:	4b60      	ldr	r3, [pc, #384]	; (8001fa8 <HAL_GPIO_Init+0x30c>)
 8001e28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001e2a:	4a5f      	ldr	r2, [pc, #380]	; (8001fa8 <HAL_GPIO_Init+0x30c>)
 8001e2c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001e30:	6453      	str	r3, [r2, #68]	; 0x44
 8001e32:	4b5d      	ldr	r3, [pc, #372]	; (8001fa8 <HAL_GPIO_Init+0x30c>)
 8001e34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001e36:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001e3a:	60fb      	str	r3, [r7, #12]
 8001e3c:	68fb      	ldr	r3, [r7, #12]
 8001e3e:	4a5b      	ldr	r2, [pc, #364]	; (8001fac <HAL_GPIO_Init+0x310>)
 8001e40:	69fb      	ldr	r3, [r7, #28]
 8001e42:	089b      	lsrs	r3, r3, #2
 8001e44:	3302      	adds	r3, #2
 8001e46:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e4a:	61bb      	str	r3, [r7, #24]
 8001e4c:	69fb      	ldr	r3, [r7, #28]
 8001e4e:	f003 0303 	and.w	r3, r3, #3
 8001e52:	009b      	lsls	r3, r3, #2
 8001e54:	220f      	movs	r2, #15
 8001e56:	fa02 f303 	lsl.w	r3, r2, r3
 8001e5a:	43db      	mvns	r3, r3
 8001e5c:	69ba      	ldr	r2, [r7, #24]
 8001e5e:	4013      	ands	r3, r2
 8001e60:	61bb      	str	r3, [r7, #24]
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	4a52      	ldr	r2, [pc, #328]	; (8001fb0 <HAL_GPIO_Init+0x314>)
 8001e66:	4293      	cmp	r3, r2
 8001e68:	d02b      	beq.n	8001ec2 <HAL_GPIO_Init+0x226>
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	4a51      	ldr	r2, [pc, #324]	; (8001fb4 <HAL_GPIO_Init+0x318>)
 8001e6e:	4293      	cmp	r3, r2
 8001e70:	d025      	beq.n	8001ebe <HAL_GPIO_Init+0x222>
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	4a50      	ldr	r2, [pc, #320]	; (8001fb8 <HAL_GPIO_Init+0x31c>)
 8001e76:	4293      	cmp	r3, r2
 8001e78:	d01f      	beq.n	8001eba <HAL_GPIO_Init+0x21e>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	4a4f      	ldr	r2, [pc, #316]	; (8001fbc <HAL_GPIO_Init+0x320>)
 8001e7e:	4293      	cmp	r3, r2
 8001e80:	d019      	beq.n	8001eb6 <HAL_GPIO_Init+0x21a>
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	4a4e      	ldr	r2, [pc, #312]	; (8001fc0 <HAL_GPIO_Init+0x324>)
 8001e86:	4293      	cmp	r3, r2
 8001e88:	d013      	beq.n	8001eb2 <HAL_GPIO_Init+0x216>
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	4a4d      	ldr	r2, [pc, #308]	; (8001fc4 <HAL_GPIO_Init+0x328>)
 8001e8e:	4293      	cmp	r3, r2
 8001e90:	d00d      	beq.n	8001eae <HAL_GPIO_Init+0x212>
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	4a4c      	ldr	r2, [pc, #304]	; (8001fc8 <HAL_GPIO_Init+0x32c>)
 8001e96:	4293      	cmp	r3, r2
 8001e98:	d007      	beq.n	8001eaa <HAL_GPIO_Init+0x20e>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	4a4b      	ldr	r2, [pc, #300]	; (8001fcc <HAL_GPIO_Init+0x330>)
 8001e9e:	4293      	cmp	r3, r2
 8001ea0:	d101      	bne.n	8001ea6 <HAL_GPIO_Init+0x20a>
 8001ea2:	2307      	movs	r3, #7
 8001ea4:	e00e      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001ea6:	2308      	movs	r3, #8
 8001ea8:	e00c      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001eaa:	2306      	movs	r3, #6
 8001eac:	e00a      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001eae:	2305      	movs	r3, #5
 8001eb0:	e008      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001eb2:	2304      	movs	r3, #4
 8001eb4:	e006      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001eb6:	2303      	movs	r3, #3
 8001eb8:	e004      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001eba:	2302      	movs	r3, #2
 8001ebc:	e002      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001ebe:	2301      	movs	r3, #1
 8001ec0:	e000      	b.n	8001ec4 <HAL_GPIO_Init+0x228>
 8001ec2:	2300      	movs	r3, #0
 8001ec4:	69fa      	ldr	r2, [r7, #28]
 8001ec6:	f002 0203 	and.w	r2, r2, #3
 8001eca:	0092      	lsls	r2, r2, #2
 8001ecc:	4093      	lsls	r3, r2
 8001ece:	69ba      	ldr	r2, [r7, #24]
 8001ed0:	4313      	orrs	r3, r2
 8001ed2:	61bb      	str	r3, [r7, #24]
 8001ed4:	4935      	ldr	r1, [pc, #212]	; (8001fac <HAL_GPIO_Init+0x310>)
 8001ed6:	69fb      	ldr	r3, [r7, #28]
 8001ed8:	089b      	lsrs	r3, r3, #2
 8001eda:	3302      	adds	r3, #2
 8001edc:	69ba      	ldr	r2, [r7, #24]
 8001ede:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001ee2:	4b3b      	ldr	r3, [pc, #236]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001ee4:	689b      	ldr	r3, [r3, #8]
 8001ee6:	61bb      	str	r3, [r7, #24]
 8001ee8:	693b      	ldr	r3, [r7, #16]
 8001eea:	43db      	mvns	r3, r3
 8001eec:	69ba      	ldr	r2, [r7, #24]
 8001eee:	4013      	ands	r3, r2
 8001ef0:	61bb      	str	r3, [r7, #24]
 8001ef2:	683b      	ldr	r3, [r7, #0]
 8001ef4:	685b      	ldr	r3, [r3, #4]
 8001ef6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	d003      	beq.n	8001f06 <HAL_GPIO_Init+0x26a>
 8001efe:	69ba      	ldr	r2, [r7, #24]
 8001f00:	693b      	ldr	r3, [r7, #16]
 8001f02:	4313      	orrs	r3, r2
 8001f04:	61bb      	str	r3, [r7, #24]
 8001f06:	4a32      	ldr	r2, [pc, #200]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001f08:	69bb      	ldr	r3, [r7, #24]
 8001f0a:	6093      	str	r3, [r2, #8]
 8001f0c:	4b30      	ldr	r3, [pc, #192]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001f0e:	68db      	ldr	r3, [r3, #12]
 8001f10:	61bb      	str	r3, [r7, #24]
 8001f12:	693b      	ldr	r3, [r7, #16]
 8001f14:	43db      	mvns	r3, r3
 8001f16:	69ba      	ldr	r2, [r7, #24]
 8001f18:	4013      	ands	r3, r2
 8001f1a:	61bb      	str	r3, [r7, #24]
 8001f1c:	683b      	ldr	r3, [r7, #0]
 8001f1e:	685b      	ldr	r3, [r3, #4]
 8001f20:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001f24:	2b00      	cmp	r3, #0
 8001f26:	d003      	beq.n	8001f30 <HAL_GPIO_Init+0x294>
 8001f28:	69ba      	ldr	r2, [r7, #24]
 8001f2a:	693b      	ldr	r3, [r7, #16]
 8001f2c:	4313      	orrs	r3, r2
 8001f2e:	61bb      	str	r3, [r7, #24]
 8001f30:	4a27      	ldr	r2, [pc, #156]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001f32:	69bb      	ldr	r3, [r7, #24]
 8001f34:	60d3      	str	r3, [r2, #12]
 8001f36:	4b26      	ldr	r3, [pc, #152]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001f38:	685b      	ldr	r3, [r3, #4]
 8001f3a:	61bb      	str	r3, [r7, #24]
 8001f3c:	693b      	ldr	r3, [r7, #16]
 8001f3e:	43db      	mvns	r3, r3
 8001f40:	69ba      	ldr	r2, [r7, #24]
 8001f42:	4013      	ands	r3, r2
 8001f44:	61bb      	str	r3, [r7, #24]
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	685b      	ldr	r3, [r3, #4]
 8001f4a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f4e:	2b00      	cmp	r3, #0
 8001f50:	d003      	beq.n	8001f5a <HAL_GPIO_Init+0x2be>
 8001f52:	69ba      	ldr	r2, [r7, #24]
 8001f54:	693b      	ldr	r3, [r7, #16]
 8001f56:	4313      	orrs	r3, r2
 8001f58:	61bb      	str	r3, [r7, #24]
 8001f5a:	4a1d      	ldr	r2, [pc, #116]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001f5c:	69bb      	ldr	r3, [r7, #24]
 8001f5e:	6053      	str	r3, [r2, #4]
 8001f60:	4b1b      	ldr	r3, [pc, #108]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	61bb      	str	r3, [r7, #24]
 8001f66:	693b      	ldr	r3, [r7, #16]
 8001f68:	43db      	mvns	r3, r3
 8001f6a:	69ba      	ldr	r2, [r7, #24]
 8001f6c:	4013      	ands	r3, r2
 8001f6e:	61bb      	str	r3, [r7, #24]
 8001f70:	683b      	ldr	r3, [r7, #0]
 8001f72:	685b      	ldr	r3, [r3, #4]
 8001f74:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f78:	2b00      	cmp	r3, #0
 8001f7a:	d003      	beq.n	8001f84 <HAL_GPIO_Init+0x2e8>
 8001f7c:	69ba      	ldr	r2, [r7, #24]
 8001f7e:	693b      	ldr	r3, [r7, #16]
 8001f80:	4313      	orrs	r3, r2
 8001f82:	61bb      	str	r3, [r7, #24]
 8001f84:	4a12      	ldr	r2, [pc, #72]	; (8001fd0 <HAL_GPIO_Init+0x334>)
 8001f86:	69bb      	ldr	r3, [r7, #24]
 8001f88:	6013      	str	r3, [r2, #0]
 8001f8a:	69fb      	ldr	r3, [r7, #28]
 8001f8c:	3301      	adds	r3, #1
 8001f8e:	61fb      	str	r3, [r7, #28]
 8001f90:	69fb      	ldr	r3, [r7, #28]
 8001f92:	2b0f      	cmp	r3, #15
 8001f94:	f67f ae90 	bls.w	8001cb8 <HAL_GPIO_Init+0x1c>
 8001f98:	bf00      	nop
 8001f9a:	bf00      	nop
 8001f9c:	3724      	adds	r7, #36	; 0x24
 8001f9e:	46bd      	mov	sp, r7
 8001fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fa4:	4770      	bx	lr
 8001fa6:	bf00      	nop
 8001fa8:	40023800 	.word	0x40023800
 8001fac:	40013800 	.word	0x40013800
 8001fb0:	40020000 	.word	0x40020000
 8001fb4:	40020400 	.word	0x40020400
 8001fb8:	40020800 	.word	0x40020800
 8001fbc:	40020c00 	.word	0x40020c00
 8001fc0:	40021000 	.word	0x40021000
 8001fc4:	40021400 	.word	0x40021400
 8001fc8:	40021800 	.word	0x40021800
 8001fcc:	40021c00 	.word	0x40021c00
 8001fd0:	40013c00 	.word	0x40013c00

08001fd4 <HAL_GPIO_WritePin>:
 8001fd4:	b480      	push	{r7}
 8001fd6:	b083      	sub	sp, #12
 8001fd8:	af00      	add	r7, sp, #0
 8001fda:	6078      	str	r0, [r7, #4]
 8001fdc:	460b      	mov	r3, r1
 8001fde:	807b      	strh	r3, [r7, #2]
 8001fe0:	4613      	mov	r3, r2
 8001fe2:	707b      	strb	r3, [r7, #1]
 8001fe4:	787b      	ldrb	r3, [r7, #1]
 8001fe6:	2b00      	cmp	r3, #0
 8001fe8:	d003      	beq.n	8001ff2 <HAL_GPIO_WritePin+0x1e>
 8001fea:	887a      	ldrh	r2, [r7, #2]
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	619a      	str	r2, [r3, #24]
 8001ff0:	e003      	b.n	8001ffa <HAL_GPIO_WritePin+0x26>
 8001ff2:	887b      	ldrh	r3, [r7, #2]
 8001ff4:	041a      	lsls	r2, r3, #16
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	619a      	str	r2, [r3, #24]
 8001ffa:	bf00      	nop
 8001ffc:	370c      	adds	r7, #12
 8001ffe:	46bd      	mov	sp, r7
 8002000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002004:	4770      	bx	lr

08002006 <HAL_GPIO_TogglePin>:
 8002006:	b480      	push	{r7}
 8002008:	b085      	sub	sp, #20
 800200a:	af00      	add	r7, sp, #0
 800200c:	6078      	str	r0, [r7, #4]
 800200e:	460b      	mov	r3, r1
 8002010:	807b      	strh	r3, [r7, #2]
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	695b      	ldr	r3, [r3, #20]
 8002016:	60fb      	str	r3, [r7, #12]
 8002018:	887a      	ldrh	r2, [r7, #2]
 800201a:	68fb      	ldr	r3, [r7, #12]
 800201c:	4013      	ands	r3, r2
 800201e:	041a      	lsls	r2, r3, #16
 8002020:	68fb      	ldr	r3, [r7, #12]
 8002022:	43d9      	mvns	r1, r3
 8002024:	887b      	ldrh	r3, [r7, #2]
 8002026:	400b      	ands	r3, r1
 8002028:	431a      	orrs	r2, r3
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	619a      	str	r2, [r3, #24]
 800202e:	bf00      	nop
 8002030:	3714      	adds	r7, #20
 8002032:	46bd      	mov	sp, r7
 8002034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002038:	4770      	bx	lr
	...

0800203c <HAL_RCC_OscConfig>:
 800203c:	b580      	push	{r7, lr}
 800203e:	b086      	sub	sp, #24
 8002040:	af00      	add	r7, sp, #0
 8002042:	6078      	str	r0, [r7, #4]
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	2b00      	cmp	r3, #0
 8002048:	d101      	bne.n	800204e <HAL_RCC_OscConfig+0x12>
 800204a:	2301      	movs	r3, #1
 800204c:	e267      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	f003 0301 	and.w	r3, r3, #1
 8002056:	2b00      	cmp	r3, #0
 8002058:	d075      	beq.n	8002146 <HAL_RCC_OscConfig+0x10a>
 800205a:	4b88      	ldr	r3, [pc, #544]	; (800227c <HAL_RCC_OscConfig+0x240>)
 800205c:	689b      	ldr	r3, [r3, #8]
 800205e:	f003 030c 	and.w	r3, r3, #12
 8002062:	2b04      	cmp	r3, #4
 8002064:	d00c      	beq.n	8002080 <HAL_RCC_OscConfig+0x44>
 8002066:	4b85      	ldr	r3, [pc, #532]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002068:	689b      	ldr	r3, [r3, #8]
 800206a:	f003 030c 	and.w	r3, r3, #12
 800206e:	2b08      	cmp	r3, #8
 8002070:	d112      	bne.n	8002098 <HAL_RCC_OscConfig+0x5c>
 8002072:	4b82      	ldr	r3, [pc, #520]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002074:	685b      	ldr	r3, [r3, #4]
 8002076:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800207a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800207e:	d10b      	bne.n	8002098 <HAL_RCC_OscConfig+0x5c>
 8002080:	4b7e      	ldr	r3, [pc, #504]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002082:	681b      	ldr	r3, [r3, #0]
 8002084:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002088:	2b00      	cmp	r3, #0
 800208a:	d05b      	beq.n	8002144 <HAL_RCC_OscConfig+0x108>
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	685b      	ldr	r3, [r3, #4]
 8002090:	2b00      	cmp	r3, #0
 8002092:	d157      	bne.n	8002144 <HAL_RCC_OscConfig+0x108>
 8002094:	2301      	movs	r3, #1
 8002096:	e242      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	685b      	ldr	r3, [r3, #4]
 800209c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80020a0:	d106      	bne.n	80020b0 <HAL_RCC_OscConfig+0x74>
 80020a2:	4b76      	ldr	r3, [pc, #472]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	4a75      	ldr	r2, [pc, #468]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80020ac:	6013      	str	r3, [r2, #0]
 80020ae:	e01d      	b.n	80020ec <HAL_RCC_OscConfig+0xb0>
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	685b      	ldr	r3, [r3, #4]
 80020b4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80020b8:	d10c      	bne.n	80020d4 <HAL_RCC_OscConfig+0x98>
 80020ba:	4b70      	ldr	r3, [pc, #448]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	4a6f      	ldr	r2, [pc, #444]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020c0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80020c4:	6013      	str	r3, [r2, #0]
 80020c6:	4b6d      	ldr	r3, [pc, #436]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	4a6c      	ldr	r2, [pc, #432]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020cc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80020d0:	6013      	str	r3, [r2, #0]
 80020d2:	e00b      	b.n	80020ec <HAL_RCC_OscConfig+0xb0>
 80020d4:	4b69      	ldr	r3, [pc, #420]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	4a68      	ldr	r2, [pc, #416]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020da:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80020de:	6013      	str	r3, [r2, #0]
 80020e0:	4b66      	ldr	r3, [pc, #408]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	4a65      	ldr	r2, [pc, #404]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80020e6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80020ea:	6013      	str	r3, [r2, #0]
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	685b      	ldr	r3, [r3, #4]
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	d013      	beq.n	800211c <HAL_RCC_OscConfig+0xe0>
 80020f4:	f7ff fbfe 	bl	80018f4 <HAL_GetTick>
 80020f8:	6138      	str	r0, [r7, #16]
 80020fa:	e008      	b.n	800210e <HAL_RCC_OscConfig+0xd2>
 80020fc:	f7ff fbfa 	bl	80018f4 <HAL_GetTick>
 8002100:	4602      	mov	r2, r0
 8002102:	693b      	ldr	r3, [r7, #16]
 8002104:	1ad3      	subs	r3, r2, r3
 8002106:	2b64      	cmp	r3, #100	; 0x64
 8002108:	d901      	bls.n	800210e <HAL_RCC_OscConfig+0xd2>
 800210a:	2303      	movs	r3, #3
 800210c:	e207      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800210e:	4b5b      	ldr	r3, [pc, #364]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002116:	2b00      	cmp	r3, #0
 8002118:	d0f0      	beq.n	80020fc <HAL_RCC_OscConfig+0xc0>
 800211a:	e014      	b.n	8002146 <HAL_RCC_OscConfig+0x10a>
 800211c:	f7ff fbea 	bl	80018f4 <HAL_GetTick>
 8002120:	6138      	str	r0, [r7, #16]
 8002122:	e008      	b.n	8002136 <HAL_RCC_OscConfig+0xfa>
 8002124:	f7ff fbe6 	bl	80018f4 <HAL_GetTick>
 8002128:	4602      	mov	r2, r0
 800212a:	693b      	ldr	r3, [r7, #16]
 800212c:	1ad3      	subs	r3, r2, r3
 800212e:	2b64      	cmp	r3, #100	; 0x64
 8002130:	d901      	bls.n	8002136 <HAL_RCC_OscConfig+0xfa>
 8002132:	2303      	movs	r3, #3
 8002134:	e1f3      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 8002136:	4b51      	ldr	r3, [pc, #324]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800213e:	2b00      	cmp	r3, #0
 8002140:	d1f0      	bne.n	8002124 <HAL_RCC_OscConfig+0xe8>
 8002142:	e000      	b.n	8002146 <HAL_RCC_OscConfig+0x10a>
 8002144:	bf00      	nop
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	f003 0302 	and.w	r3, r3, #2
 800214e:	2b00      	cmp	r3, #0
 8002150:	d063      	beq.n	800221a <HAL_RCC_OscConfig+0x1de>
 8002152:	4b4a      	ldr	r3, [pc, #296]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002154:	689b      	ldr	r3, [r3, #8]
 8002156:	f003 030c 	and.w	r3, r3, #12
 800215a:	2b00      	cmp	r3, #0
 800215c:	d00b      	beq.n	8002176 <HAL_RCC_OscConfig+0x13a>
 800215e:	4b47      	ldr	r3, [pc, #284]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002160:	689b      	ldr	r3, [r3, #8]
 8002162:	f003 030c 	and.w	r3, r3, #12
 8002166:	2b08      	cmp	r3, #8
 8002168:	d11c      	bne.n	80021a4 <HAL_RCC_OscConfig+0x168>
 800216a:	4b44      	ldr	r3, [pc, #272]	; (800227c <HAL_RCC_OscConfig+0x240>)
 800216c:	685b      	ldr	r3, [r3, #4]
 800216e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002172:	2b00      	cmp	r3, #0
 8002174:	d116      	bne.n	80021a4 <HAL_RCC_OscConfig+0x168>
 8002176:	4b41      	ldr	r3, [pc, #260]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	f003 0302 	and.w	r3, r3, #2
 800217e:	2b00      	cmp	r3, #0
 8002180:	d005      	beq.n	800218e <HAL_RCC_OscConfig+0x152>
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	68db      	ldr	r3, [r3, #12]
 8002186:	2b01      	cmp	r3, #1
 8002188:	d001      	beq.n	800218e <HAL_RCC_OscConfig+0x152>
 800218a:	2301      	movs	r3, #1
 800218c:	e1c7      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800218e:	4b3b      	ldr	r3, [pc, #236]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	691b      	ldr	r3, [r3, #16]
 800219a:	00db      	lsls	r3, r3, #3
 800219c:	4937      	ldr	r1, [pc, #220]	; (800227c <HAL_RCC_OscConfig+0x240>)
 800219e:	4313      	orrs	r3, r2
 80021a0:	600b      	str	r3, [r1, #0]
 80021a2:	e03a      	b.n	800221a <HAL_RCC_OscConfig+0x1de>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	68db      	ldr	r3, [r3, #12]
 80021a8:	2b00      	cmp	r3, #0
 80021aa:	d020      	beq.n	80021ee <HAL_RCC_OscConfig+0x1b2>
 80021ac:	4b34      	ldr	r3, [pc, #208]	; (8002280 <HAL_RCC_OscConfig+0x244>)
 80021ae:	2201      	movs	r2, #1
 80021b0:	601a      	str	r2, [r3, #0]
 80021b2:	f7ff fb9f 	bl	80018f4 <HAL_GetTick>
 80021b6:	6138      	str	r0, [r7, #16]
 80021b8:	e008      	b.n	80021cc <HAL_RCC_OscConfig+0x190>
 80021ba:	f7ff fb9b 	bl	80018f4 <HAL_GetTick>
 80021be:	4602      	mov	r2, r0
 80021c0:	693b      	ldr	r3, [r7, #16]
 80021c2:	1ad3      	subs	r3, r2, r3
 80021c4:	2b02      	cmp	r3, #2
 80021c6:	d901      	bls.n	80021cc <HAL_RCC_OscConfig+0x190>
 80021c8:	2303      	movs	r3, #3
 80021ca:	e1a8      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 80021cc:	4b2b      	ldr	r3, [pc, #172]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	f003 0302 	and.w	r3, r3, #2
 80021d4:	2b00      	cmp	r3, #0
 80021d6:	d0f0      	beq.n	80021ba <HAL_RCC_OscConfig+0x17e>
 80021d8:	4b28      	ldr	r3, [pc, #160]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	691b      	ldr	r3, [r3, #16]
 80021e4:	00db      	lsls	r3, r3, #3
 80021e6:	4925      	ldr	r1, [pc, #148]	; (800227c <HAL_RCC_OscConfig+0x240>)
 80021e8:	4313      	orrs	r3, r2
 80021ea:	600b      	str	r3, [r1, #0]
 80021ec:	e015      	b.n	800221a <HAL_RCC_OscConfig+0x1de>
 80021ee:	4b24      	ldr	r3, [pc, #144]	; (8002280 <HAL_RCC_OscConfig+0x244>)
 80021f0:	2200      	movs	r2, #0
 80021f2:	601a      	str	r2, [r3, #0]
 80021f4:	f7ff fb7e 	bl	80018f4 <HAL_GetTick>
 80021f8:	6138      	str	r0, [r7, #16]
 80021fa:	e008      	b.n	800220e <HAL_RCC_OscConfig+0x1d2>
 80021fc:	f7ff fb7a 	bl	80018f4 <HAL_GetTick>
 8002200:	4602      	mov	r2, r0
 8002202:	693b      	ldr	r3, [r7, #16]
 8002204:	1ad3      	subs	r3, r2, r3
 8002206:	2b02      	cmp	r3, #2
 8002208:	d901      	bls.n	800220e <HAL_RCC_OscConfig+0x1d2>
 800220a:	2303      	movs	r3, #3
 800220c:	e187      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800220e:	4b1b      	ldr	r3, [pc, #108]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	f003 0302 	and.w	r3, r3, #2
 8002216:	2b00      	cmp	r3, #0
 8002218:	d1f0      	bne.n	80021fc <HAL_RCC_OscConfig+0x1c0>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	f003 0308 	and.w	r3, r3, #8
 8002222:	2b00      	cmp	r3, #0
 8002224:	d036      	beq.n	8002294 <HAL_RCC_OscConfig+0x258>
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	695b      	ldr	r3, [r3, #20]
 800222a:	2b00      	cmp	r3, #0
 800222c:	d016      	beq.n	800225c <HAL_RCC_OscConfig+0x220>
 800222e:	4b15      	ldr	r3, [pc, #84]	; (8002284 <HAL_RCC_OscConfig+0x248>)
 8002230:	2201      	movs	r2, #1
 8002232:	601a      	str	r2, [r3, #0]
 8002234:	f7ff fb5e 	bl	80018f4 <HAL_GetTick>
 8002238:	6138      	str	r0, [r7, #16]
 800223a:	e008      	b.n	800224e <HAL_RCC_OscConfig+0x212>
 800223c:	f7ff fb5a 	bl	80018f4 <HAL_GetTick>
 8002240:	4602      	mov	r2, r0
 8002242:	693b      	ldr	r3, [r7, #16]
 8002244:	1ad3      	subs	r3, r2, r3
 8002246:	2b02      	cmp	r3, #2
 8002248:	d901      	bls.n	800224e <HAL_RCC_OscConfig+0x212>
 800224a:	2303      	movs	r3, #3
 800224c:	e167      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800224e:	4b0b      	ldr	r3, [pc, #44]	; (800227c <HAL_RCC_OscConfig+0x240>)
 8002250:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002252:	f003 0302 	and.w	r3, r3, #2
 8002256:	2b00      	cmp	r3, #0
 8002258:	d0f0      	beq.n	800223c <HAL_RCC_OscConfig+0x200>
 800225a:	e01b      	b.n	8002294 <HAL_RCC_OscConfig+0x258>
 800225c:	4b09      	ldr	r3, [pc, #36]	; (8002284 <HAL_RCC_OscConfig+0x248>)
 800225e:	2200      	movs	r2, #0
 8002260:	601a      	str	r2, [r3, #0]
 8002262:	f7ff fb47 	bl	80018f4 <HAL_GetTick>
 8002266:	6138      	str	r0, [r7, #16]
 8002268:	e00e      	b.n	8002288 <HAL_RCC_OscConfig+0x24c>
 800226a:	f7ff fb43 	bl	80018f4 <HAL_GetTick>
 800226e:	4602      	mov	r2, r0
 8002270:	693b      	ldr	r3, [r7, #16]
 8002272:	1ad3      	subs	r3, r2, r3
 8002274:	2b02      	cmp	r3, #2
 8002276:	d907      	bls.n	8002288 <HAL_RCC_OscConfig+0x24c>
 8002278:	2303      	movs	r3, #3
 800227a:	e150      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800227c:	40023800 	.word	0x40023800
 8002280:	42470000 	.word	0x42470000
 8002284:	42470e80 	.word	0x42470e80
 8002288:	4b88      	ldr	r3, [pc, #544]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 800228a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800228c:	f003 0302 	and.w	r3, r3, #2
 8002290:	2b00      	cmp	r3, #0
 8002292:	d1ea      	bne.n	800226a <HAL_RCC_OscConfig+0x22e>
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	f003 0304 	and.w	r3, r3, #4
 800229c:	2b00      	cmp	r3, #0
 800229e:	f000 8097 	beq.w	80023d0 <HAL_RCC_OscConfig+0x394>
 80022a2:	2300      	movs	r3, #0
 80022a4:	75fb      	strb	r3, [r7, #23]
 80022a6:	4b81      	ldr	r3, [pc, #516]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80022a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d10f      	bne.n	80022d2 <HAL_RCC_OscConfig+0x296>
 80022b2:	2300      	movs	r3, #0
 80022b4:	60bb      	str	r3, [r7, #8]
 80022b6:	4b7d      	ldr	r3, [pc, #500]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80022b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022ba:	4a7c      	ldr	r2, [pc, #496]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80022bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80022c0:	6413      	str	r3, [r2, #64]	; 0x40
 80022c2:	4b7a      	ldr	r3, [pc, #488]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80022c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80022ca:	60bb      	str	r3, [r7, #8]
 80022cc:	68bb      	ldr	r3, [r7, #8]
 80022ce:	2301      	movs	r3, #1
 80022d0:	75fb      	strb	r3, [r7, #23]
 80022d2:	4b77      	ldr	r3, [pc, #476]	; (80024b0 <HAL_RCC_OscConfig+0x474>)
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d118      	bne.n	8002310 <HAL_RCC_OscConfig+0x2d4>
 80022de:	4b74      	ldr	r3, [pc, #464]	; (80024b0 <HAL_RCC_OscConfig+0x474>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	4a73      	ldr	r2, [pc, #460]	; (80024b0 <HAL_RCC_OscConfig+0x474>)
 80022e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80022e8:	6013      	str	r3, [r2, #0]
 80022ea:	f7ff fb03 	bl	80018f4 <HAL_GetTick>
 80022ee:	6138      	str	r0, [r7, #16]
 80022f0:	e008      	b.n	8002304 <HAL_RCC_OscConfig+0x2c8>
 80022f2:	f7ff faff 	bl	80018f4 <HAL_GetTick>
 80022f6:	4602      	mov	r2, r0
 80022f8:	693b      	ldr	r3, [r7, #16]
 80022fa:	1ad3      	subs	r3, r2, r3
 80022fc:	2b02      	cmp	r3, #2
 80022fe:	d901      	bls.n	8002304 <HAL_RCC_OscConfig+0x2c8>
 8002300:	2303      	movs	r3, #3
 8002302:	e10c      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 8002304:	4b6a      	ldr	r3, [pc, #424]	; (80024b0 <HAL_RCC_OscConfig+0x474>)
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800230c:	2b00      	cmp	r3, #0
 800230e:	d0f0      	beq.n	80022f2 <HAL_RCC_OscConfig+0x2b6>
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	689b      	ldr	r3, [r3, #8]
 8002314:	2b01      	cmp	r3, #1
 8002316:	d106      	bne.n	8002326 <HAL_RCC_OscConfig+0x2ea>
 8002318:	4b64      	ldr	r3, [pc, #400]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 800231a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800231c:	4a63      	ldr	r2, [pc, #396]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 800231e:	f043 0301 	orr.w	r3, r3, #1
 8002322:	6713      	str	r3, [r2, #112]	; 0x70
 8002324:	e01c      	b.n	8002360 <HAL_RCC_OscConfig+0x324>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	689b      	ldr	r3, [r3, #8]
 800232a:	2b05      	cmp	r3, #5
 800232c:	d10c      	bne.n	8002348 <HAL_RCC_OscConfig+0x30c>
 800232e:	4b5f      	ldr	r3, [pc, #380]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002330:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002332:	4a5e      	ldr	r2, [pc, #376]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002334:	f043 0304 	orr.w	r3, r3, #4
 8002338:	6713      	str	r3, [r2, #112]	; 0x70
 800233a:	4b5c      	ldr	r3, [pc, #368]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 800233c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800233e:	4a5b      	ldr	r2, [pc, #364]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002340:	f043 0301 	orr.w	r3, r3, #1
 8002344:	6713      	str	r3, [r2, #112]	; 0x70
 8002346:	e00b      	b.n	8002360 <HAL_RCC_OscConfig+0x324>
 8002348:	4b58      	ldr	r3, [pc, #352]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 800234a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800234c:	4a57      	ldr	r2, [pc, #348]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 800234e:	f023 0301 	bic.w	r3, r3, #1
 8002352:	6713      	str	r3, [r2, #112]	; 0x70
 8002354:	4b55      	ldr	r3, [pc, #340]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002356:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002358:	4a54      	ldr	r2, [pc, #336]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 800235a:	f023 0304 	bic.w	r3, r3, #4
 800235e:	6713      	str	r3, [r2, #112]	; 0x70
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	689b      	ldr	r3, [r3, #8]
 8002364:	2b00      	cmp	r3, #0
 8002366:	d015      	beq.n	8002394 <HAL_RCC_OscConfig+0x358>
 8002368:	f7ff fac4 	bl	80018f4 <HAL_GetTick>
 800236c:	6138      	str	r0, [r7, #16]
 800236e:	e00a      	b.n	8002386 <HAL_RCC_OscConfig+0x34a>
 8002370:	f7ff fac0 	bl	80018f4 <HAL_GetTick>
 8002374:	4602      	mov	r2, r0
 8002376:	693b      	ldr	r3, [r7, #16]
 8002378:	1ad3      	subs	r3, r2, r3
 800237a:	f241 3288 	movw	r2, #5000	; 0x1388
 800237e:	4293      	cmp	r3, r2
 8002380:	d901      	bls.n	8002386 <HAL_RCC_OscConfig+0x34a>
 8002382:	2303      	movs	r3, #3
 8002384:	e0cb      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 8002386:	4b49      	ldr	r3, [pc, #292]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002388:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800238a:	f003 0302 	and.w	r3, r3, #2
 800238e:	2b00      	cmp	r3, #0
 8002390:	d0ee      	beq.n	8002370 <HAL_RCC_OscConfig+0x334>
 8002392:	e014      	b.n	80023be <HAL_RCC_OscConfig+0x382>
 8002394:	f7ff faae 	bl	80018f4 <HAL_GetTick>
 8002398:	6138      	str	r0, [r7, #16]
 800239a:	e00a      	b.n	80023b2 <HAL_RCC_OscConfig+0x376>
 800239c:	f7ff faaa 	bl	80018f4 <HAL_GetTick>
 80023a0:	4602      	mov	r2, r0
 80023a2:	693b      	ldr	r3, [r7, #16]
 80023a4:	1ad3      	subs	r3, r2, r3
 80023a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80023aa:	4293      	cmp	r3, r2
 80023ac:	d901      	bls.n	80023b2 <HAL_RCC_OscConfig+0x376>
 80023ae:	2303      	movs	r3, #3
 80023b0:	e0b5      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 80023b2:	4b3e      	ldr	r3, [pc, #248]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80023b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80023b6:	f003 0302 	and.w	r3, r3, #2
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	d1ee      	bne.n	800239c <HAL_RCC_OscConfig+0x360>
 80023be:	7dfb      	ldrb	r3, [r7, #23]
 80023c0:	2b01      	cmp	r3, #1
 80023c2:	d105      	bne.n	80023d0 <HAL_RCC_OscConfig+0x394>
 80023c4:	4b39      	ldr	r3, [pc, #228]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80023c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023c8:	4a38      	ldr	r2, [pc, #224]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80023ca:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80023ce:	6413      	str	r3, [r2, #64]	; 0x40
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	699b      	ldr	r3, [r3, #24]
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	f000 80a1 	beq.w	800251c <HAL_RCC_OscConfig+0x4e0>
 80023da:	4b34      	ldr	r3, [pc, #208]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 80023dc:	689b      	ldr	r3, [r3, #8]
 80023de:	f003 030c 	and.w	r3, r3, #12
 80023e2:	2b08      	cmp	r3, #8
 80023e4:	d05c      	beq.n	80024a0 <HAL_RCC_OscConfig+0x464>
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	699b      	ldr	r3, [r3, #24]
 80023ea:	2b02      	cmp	r3, #2
 80023ec:	d141      	bne.n	8002472 <HAL_RCC_OscConfig+0x436>
 80023ee:	4b31      	ldr	r3, [pc, #196]	; (80024b4 <HAL_RCC_OscConfig+0x478>)
 80023f0:	2200      	movs	r2, #0
 80023f2:	601a      	str	r2, [r3, #0]
 80023f4:	f7ff fa7e 	bl	80018f4 <HAL_GetTick>
 80023f8:	6138      	str	r0, [r7, #16]
 80023fa:	e008      	b.n	800240e <HAL_RCC_OscConfig+0x3d2>
 80023fc:	f7ff fa7a 	bl	80018f4 <HAL_GetTick>
 8002400:	4602      	mov	r2, r0
 8002402:	693b      	ldr	r3, [r7, #16]
 8002404:	1ad3      	subs	r3, r2, r3
 8002406:	2b02      	cmp	r3, #2
 8002408:	d901      	bls.n	800240e <HAL_RCC_OscConfig+0x3d2>
 800240a:	2303      	movs	r3, #3
 800240c:	e087      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800240e:	4b27      	ldr	r3, [pc, #156]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002416:	2b00      	cmp	r3, #0
 8002418:	d1f0      	bne.n	80023fc <HAL_RCC_OscConfig+0x3c0>
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	69da      	ldr	r2, [r3, #28]
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	6a1b      	ldr	r3, [r3, #32]
 8002422:	431a      	orrs	r2, r3
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002428:	019b      	lsls	r3, r3, #6
 800242a:	431a      	orrs	r2, r3
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002430:	085b      	lsrs	r3, r3, #1
 8002432:	3b01      	subs	r3, #1
 8002434:	041b      	lsls	r3, r3, #16
 8002436:	431a      	orrs	r2, r3
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800243c:	061b      	lsls	r3, r3, #24
 800243e:	491b      	ldr	r1, [pc, #108]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002440:	4313      	orrs	r3, r2
 8002442:	604b      	str	r3, [r1, #4]
 8002444:	4b1b      	ldr	r3, [pc, #108]	; (80024b4 <HAL_RCC_OscConfig+0x478>)
 8002446:	2201      	movs	r2, #1
 8002448:	601a      	str	r2, [r3, #0]
 800244a:	f7ff fa53 	bl	80018f4 <HAL_GetTick>
 800244e:	6138      	str	r0, [r7, #16]
 8002450:	e008      	b.n	8002464 <HAL_RCC_OscConfig+0x428>
 8002452:	f7ff fa4f 	bl	80018f4 <HAL_GetTick>
 8002456:	4602      	mov	r2, r0
 8002458:	693b      	ldr	r3, [r7, #16]
 800245a:	1ad3      	subs	r3, r2, r3
 800245c:	2b02      	cmp	r3, #2
 800245e:	d901      	bls.n	8002464 <HAL_RCC_OscConfig+0x428>
 8002460:	2303      	movs	r3, #3
 8002462:	e05c      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 8002464:	4b11      	ldr	r3, [pc, #68]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800246c:	2b00      	cmp	r3, #0
 800246e:	d0f0      	beq.n	8002452 <HAL_RCC_OscConfig+0x416>
 8002470:	e054      	b.n	800251c <HAL_RCC_OscConfig+0x4e0>
 8002472:	4b10      	ldr	r3, [pc, #64]	; (80024b4 <HAL_RCC_OscConfig+0x478>)
 8002474:	2200      	movs	r2, #0
 8002476:	601a      	str	r2, [r3, #0]
 8002478:	f7ff fa3c 	bl	80018f4 <HAL_GetTick>
 800247c:	6138      	str	r0, [r7, #16]
 800247e:	e008      	b.n	8002492 <HAL_RCC_OscConfig+0x456>
 8002480:	f7ff fa38 	bl	80018f4 <HAL_GetTick>
 8002484:	4602      	mov	r2, r0
 8002486:	693b      	ldr	r3, [r7, #16]
 8002488:	1ad3      	subs	r3, r2, r3
 800248a:	2b02      	cmp	r3, #2
 800248c:	d901      	bls.n	8002492 <HAL_RCC_OscConfig+0x456>
 800248e:	2303      	movs	r3, #3
 8002490:	e045      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 8002492:	4b06      	ldr	r3, [pc, #24]	; (80024ac <HAL_RCC_OscConfig+0x470>)
 8002494:	681b      	ldr	r3, [r3, #0]
 8002496:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800249a:	2b00      	cmp	r3, #0
 800249c:	d1f0      	bne.n	8002480 <HAL_RCC_OscConfig+0x444>
 800249e:	e03d      	b.n	800251c <HAL_RCC_OscConfig+0x4e0>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	699b      	ldr	r3, [r3, #24]
 80024a4:	2b01      	cmp	r3, #1
 80024a6:	d107      	bne.n	80024b8 <HAL_RCC_OscConfig+0x47c>
 80024a8:	2301      	movs	r3, #1
 80024aa:	e038      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 80024ac:	40023800 	.word	0x40023800
 80024b0:	40007000 	.word	0x40007000
 80024b4:	42470060 	.word	0x42470060
 80024b8:	4b1b      	ldr	r3, [pc, #108]	; (8002528 <HAL_RCC_OscConfig+0x4ec>)
 80024ba:	685b      	ldr	r3, [r3, #4]
 80024bc:	60fb      	str	r3, [r7, #12]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	699b      	ldr	r3, [r3, #24]
 80024c2:	2b01      	cmp	r3, #1
 80024c4:	d028      	beq.n	8002518 <HAL_RCC_OscConfig+0x4dc>
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	69db      	ldr	r3, [r3, #28]
 80024d0:	429a      	cmp	r2, r3
 80024d2:	d121      	bne.n	8002518 <HAL_RCC_OscConfig+0x4dc>
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	6a1b      	ldr	r3, [r3, #32]
 80024de:	429a      	cmp	r2, r3
 80024e0:	d11a      	bne.n	8002518 <HAL_RCC_OscConfig+0x4dc>
 80024e2:	68fa      	ldr	r2, [r7, #12]
 80024e4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80024e8:	4013      	ands	r3, r2
 80024ea:	687a      	ldr	r2, [r7, #4]
 80024ec:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80024ee:	0192      	lsls	r2, r2, #6
 80024f0:	4293      	cmp	r3, r2
 80024f2:	d111      	bne.n	8002518 <HAL_RCC_OscConfig+0x4dc>
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024fe:	085b      	lsrs	r3, r3, #1
 8002500:	3b01      	subs	r3, #1
 8002502:	041b      	lsls	r3, r3, #16
 8002504:	429a      	cmp	r2, r3
 8002506:	d107      	bne.n	8002518 <HAL_RCC_OscConfig+0x4dc>
 8002508:	68fb      	ldr	r3, [r7, #12]
 800250a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002512:	061b      	lsls	r3, r3, #24
 8002514:	429a      	cmp	r2, r3
 8002516:	d001      	beq.n	800251c <HAL_RCC_OscConfig+0x4e0>
 8002518:	2301      	movs	r3, #1
 800251a:	e000      	b.n	800251e <HAL_RCC_OscConfig+0x4e2>
 800251c:	2300      	movs	r3, #0
 800251e:	4618      	mov	r0, r3
 8002520:	3718      	adds	r7, #24
 8002522:	46bd      	mov	sp, r7
 8002524:	bd80      	pop	{r7, pc}
 8002526:	bf00      	nop
 8002528:	40023800 	.word	0x40023800

0800252c <HAL_RCC_ClockConfig>:
 800252c:	b580      	push	{r7, lr}
 800252e:	b084      	sub	sp, #16
 8002530:	af00      	add	r7, sp, #0
 8002532:	6078      	str	r0, [r7, #4]
 8002534:	6039      	str	r1, [r7, #0]
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	2b00      	cmp	r3, #0
 800253a:	d101      	bne.n	8002540 <HAL_RCC_ClockConfig+0x14>
 800253c:	2301      	movs	r3, #1
 800253e:	e0cc      	b.n	80026da <HAL_RCC_ClockConfig+0x1ae>
 8002540:	4b68      	ldr	r3, [pc, #416]	; (80026e4 <HAL_RCC_ClockConfig+0x1b8>)
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	f003 0307 	and.w	r3, r3, #7
 8002548:	683a      	ldr	r2, [r7, #0]
 800254a:	429a      	cmp	r2, r3
 800254c:	d90c      	bls.n	8002568 <HAL_RCC_ClockConfig+0x3c>
 800254e:	4b65      	ldr	r3, [pc, #404]	; (80026e4 <HAL_RCC_ClockConfig+0x1b8>)
 8002550:	683a      	ldr	r2, [r7, #0]
 8002552:	b2d2      	uxtb	r2, r2
 8002554:	701a      	strb	r2, [r3, #0]
 8002556:	4b63      	ldr	r3, [pc, #396]	; (80026e4 <HAL_RCC_ClockConfig+0x1b8>)
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	f003 0307 	and.w	r3, r3, #7
 800255e:	683a      	ldr	r2, [r7, #0]
 8002560:	429a      	cmp	r2, r3
 8002562:	d001      	beq.n	8002568 <HAL_RCC_ClockConfig+0x3c>
 8002564:	2301      	movs	r3, #1
 8002566:	e0b8      	b.n	80026da <HAL_RCC_ClockConfig+0x1ae>
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f003 0302 	and.w	r3, r3, #2
 8002570:	2b00      	cmp	r3, #0
 8002572:	d020      	beq.n	80025b6 <HAL_RCC_ClockConfig+0x8a>
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	f003 0304 	and.w	r3, r3, #4
 800257c:	2b00      	cmp	r3, #0
 800257e:	d005      	beq.n	800258c <HAL_RCC_ClockConfig+0x60>
 8002580:	4b59      	ldr	r3, [pc, #356]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 8002582:	689b      	ldr	r3, [r3, #8]
 8002584:	4a58      	ldr	r2, [pc, #352]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 8002586:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800258a:	6093      	str	r3, [r2, #8]
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	f003 0308 	and.w	r3, r3, #8
 8002594:	2b00      	cmp	r3, #0
 8002596:	d005      	beq.n	80025a4 <HAL_RCC_ClockConfig+0x78>
 8002598:	4b53      	ldr	r3, [pc, #332]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 800259a:	689b      	ldr	r3, [r3, #8]
 800259c:	4a52      	ldr	r2, [pc, #328]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 800259e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80025a2:	6093      	str	r3, [r2, #8]
 80025a4:	4b50      	ldr	r3, [pc, #320]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80025a6:	689b      	ldr	r3, [r3, #8]
 80025a8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	689b      	ldr	r3, [r3, #8]
 80025b0:	494d      	ldr	r1, [pc, #308]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80025b2:	4313      	orrs	r3, r2
 80025b4:	608b      	str	r3, [r1, #8]
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	f003 0301 	and.w	r3, r3, #1
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d044      	beq.n	800264c <HAL_RCC_ClockConfig+0x120>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	685b      	ldr	r3, [r3, #4]
 80025c6:	2b01      	cmp	r3, #1
 80025c8:	d107      	bne.n	80025da <HAL_RCC_ClockConfig+0xae>
 80025ca:	4b47      	ldr	r3, [pc, #284]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d119      	bne.n	800260a <HAL_RCC_ClockConfig+0xde>
 80025d6:	2301      	movs	r3, #1
 80025d8:	e07f      	b.n	80026da <HAL_RCC_ClockConfig+0x1ae>
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	685b      	ldr	r3, [r3, #4]
 80025de:	2b02      	cmp	r3, #2
 80025e0:	d003      	beq.n	80025ea <HAL_RCC_ClockConfig+0xbe>
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	685b      	ldr	r3, [r3, #4]
 80025e6:	2b03      	cmp	r3, #3
 80025e8:	d107      	bne.n	80025fa <HAL_RCC_ClockConfig+0xce>
 80025ea:	4b3f      	ldr	r3, [pc, #252]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d109      	bne.n	800260a <HAL_RCC_ClockConfig+0xde>
 80025f6:	2301      	movs	r3, #1
 80025f8:	e06f      	b.n	80026da <HAL_RCC_ClockConfig+0x1ae>
 80025fa:	4b3b      	ldr	r3, [pc, #236]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80025fc:	681b      	ldr	r3, [r3, #0]
 80025fe:	f003 0302 	and.w	r3, r3, #2
 8002602:	2b00      	cmp	r3, #0
 8002604:	d101      	bne.n	800260a <HAL_RCC_ClockConfig+0xde>
 8002606:	2301      	movs	r3, #1
 8002608:	e067      	b.n	80026da <HAL_RCC_ClockConfig+0x1ae>
 800260a:	4b37      	ldr	r3, [pc, #220]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 800260c:	689b      	ldr	r3, [r3, #8]
 800260e:	f023 0203 	bic.w	r2, r3, #3
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	685b      	ldr	r3, [r3, #4]
 8002616:	4934      	ldr	r1, [pc, #208]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 8002618:	4313      	orrs	r3, r2
 800261a:	608b      	str	r3, [r1, #8]
 800261c:	f7ff f96a 	bl	80018f4 <HAL_GetTick>
 8002620:	60f8      	str	r0, [r7, #12]
 8002622:	e00a      	b.n	800263a <HAL_RCC_ClockConfig+0x10e>
 8002624:	f7ff f966 	bl	80018f4 <HAL_GetTick>
 8002628:	4602      	mov	r2, r0
 800262a:	68fb      	ldr	r3, [r7, #12]
 800262c:	1ad3      	subs	r3, r2, r3
 800262e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002632:	4293      	cmp	r3, r2
 8002634:	d901      	bls.n	800263a <HAL_RCC_ClockConfig+0x10e>
 8002636:	2303      	movs	r3, #3
 8002638:	e04f      	b.n	80026da <HAL_RCC_ClockConfig+0x1ae>
 800263a:	4b2b      	ldr	r3, [pc, #172]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 800263c:	689b      	ldr	r3, [r3, #8]
 800263e:	f003 020c 	and.w	r2, r3, #12
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	685b      	ldr	r3, [r3, #4]
 8002646:	009b      	lsls	r3, r3, #2
 8002648:	429a      	cmp	r2, r3
 800264a:	d1eb      	bne.n	8002624 <HAL_RCC_ClockConfig+0xf8>
 800264c:	4b25      	ldr	r3, [pc, #148]	; (80026e4 <HAL_RCC_ClockConfig+0x1b8>)
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	f003 0307 	and.w	r3, r3, #7
 8002654:	683a      	ldr	r2, [r7, #0]
 8002656:	429a      	cmp	r2, r3
 8002658:	d20c      	bcs.n	8002674 <HAL_RCC_ClockConfig+0x148>
 800265a:	4b22      	ldr	r3, [pc, #136]	; (80026e4 <HAL_RCC_ClockConfig+0x1b8>)
 800265c:	683a      	ldr	r2, [r7, #0]
 800265e:	b2d2      	uxtb	r2, r2
 8002660:	701a      	strb	r2, [r3, #0]
 8002662:	4b20      	ldr	r3, [pc, #128]	; (80026e4 <HAL_RCC_ClockConfig+0x1b8>)
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	f003 0307 	and.w	r3, r3, #7
 800266a:	683a      	ldr	r2, [r7, #0]
 800266c:	429a      	cmp	r2, r3
 800266e:	d001      	beq.n	8002674 <HAL_RCC_ClockConfig+0x148>
 8002670:	2301      	movs	r3, #1
 8002672:	e032      	b.n	80026da <HAL_RCC_ClockConfig+0x1ae>
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	f003 0304 	and.w	r3, r3, #4
 800267c:	2b00      	cmp	r3, #0
 800267e:	d008      	beq.n	8002692 <HAL_RCC_ClockConfig+0x166>
 8002680:	4b19      	ldr	r3, [pc, #100]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 8002682:	689b      	ldr	r3, [r3, #8]
 8002684:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	68db      	ldr	r3, [r3, #12]
 800268c:	4916      	ldr	r1, [pc, #88]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 800268e:	4313      	orrs	r3, r2
 8002690:	608b      	str	r3, [r1, #8]
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	f003 0308 	and.w	r3, r3, #8
 800269a:	2b00      	cmp	r3, #0
 800269c:	d009      	beq.n	80026b2 <HAL_RCC_ClockConfig+0x186>
 800269e:	4b12      	ldr	r3, [pc, #72]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80026a0:	689b      	ldr	r3, [r3, #8]
 80026a2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	691b      	ldr	r3, [r3, #16]
 80026aa:	00db      	lsls	r3, r3, #3
 80026ac:	490e      	ldr	r1, [pc, #56]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80026ae:	4313      	orrs	r3, r2
 80026b0:	608b      	str	r3, [r1, #8]
 80026b2:	f000 f821 	bl	80026f8 <HAL_RCC_GetSysClockFreq>
 80026b6:	4602      	mov	r2, r0
 80026b8:	4b0b      	ldr	r3, [pc, #44]	; (80026e8 <HAL_RCC_ClockConfig+0x1bc>)
 80026ba:	689b      	ldr	r3, [r3, #8]
 80026bc:	091b      	lsrs	r3, r3, #4
 80026be:	f003 030f 	and.w	r3, r3, #15
 80026c2:	490a      	ldr	r1, [pc, #40]	; (80026ec <HAL_RCC_ClockConfig+0x1c0>)
 80026c4:	5ccb      	ldrb	r3, [r1, r3]
 80026c6:	fa22 f303 	lsr.w	r3, r2, r3
 80026ca:	4a09      	ldr	r2, [pc, #36]	; (80026f0 <HAL_RCC_ClockConfig+0x1c4>)
 80026cc:	6013      	str	r3, [r2, #0]
 80026ce:	4b09      	ldr	r3, [pc, #36]	; (80026f4 <HAL_RCC_ClockConfig+0x1c8>)
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	4618      	mov	r0, r3
 80026d4:	f7ff f8ca 	bl	800186c <HAL_InitTick>
 80026d8:	2300      	movs	r3, #0
 80026da:	4618      	mov	r0, r3
 80026dc:	3710      	adds	r7, #16
 80026de:	46bd      	mov	sp, r7
 80026e0:	bd80      	pop	{r7, pc}
 80026e2:	bf00      	nop
 80026e4:	40023c00 	.word	0x40023c00
 80026e8:	40023800 	.word	0x40023800
 80026ec:	080078ac 	.word	0x080078ac
 80026f0:	20000000 	.word	0x20000000
 80026f4:	20000004 	.word	0x20000004

080026f8 <HAL_RCC_GetSysClockFreq>:
 80026f8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80026fc:	b090      	sub	sp, #64	; 0x40
 80026fe:	af00      	add	r7, sp, #0
 8002700:	2300      	movs	r3, #0
 8002702:	637b      	str	r3, [r7, #52]	; 0x34
 8002704:	2300      	movs	r3, #0
 8002706:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002708:	2300      	movs	r3, #0
 800270a:	633b      	str	r3, [r7, #48]	; 0x30
 800270c:	2300      	movs	r3, #0
 800270e:	63bb      	str	r3, [r7, #56]	; 0x38
 8002710:	4b59      	ldr	r3, [pc, #356]	; (8002878 <HAL_RCC_GetSysClockFreq+0x180>)
 8002712:	689b      	ldr	r3, [r3, #8]
 8002714:	f003 030c 	and.w	r3, r3, #12
 8002718:	2b08      	cmp	r3, #8
 800271a:	d00d      	beq.n	8002738 <HAL_RCC_GetSysClockFreq+0x40>
 800271c:	2b08      	cmp	r3, #8
 800271e:	f200 80a1 	bhi.w	8002864 <HAL_RCC_GetSysClockFreq+0x16c>
 8002722:	2b00      	cmp	r3, #0
 8002724:	d002      	beq.n	800272c <HAL_RCC_GetSysClockFreq+0x34>
 8002726:	2b04      	cmp	r3, #4
 8002728:	d003      	beq.n	8002732 <HAL_RCC_GetSysClockFreq+0x3a>
 800272a:	e09b      	b.n	8002864 <HAL_RCC_GetSysClockFreq+0x16c>
 800272c:	4b53      	ldr	r3, [pc, #332]	; (800287c <HAL_RCC_GetSysClockFreq+0x184>)
 800272e:	63bb      	str	r3, [r7, #56]	; 0x38
 8002730:	e09b      	b.n	800286a <HAL_RCC_GetSysClockFreq+0x172>
 8002732:	4b53      	ldr	r3, [pc, #332]	; (8002880 <HAL_RCC_GetSysClockFreq+0x188>)
 8002734:	63bb      	str	r3, [r7, #56]	; 0x38
 8002736:	e098      	b.n	800286a <HAL_RCC_GetSysClockFreq+0x172>
 8002738:	4b4f      	ldr	r3, [pc, #316]	; (8002878 <HAL_RCC_GetSysClockFreq+0x180>)
 800273a:	685b      	ldr	r3, [r3, #4]
 800273c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002740:	637b      	str	r3, [r7, #52]	; 0x34
 8002742:	4b4d      	ldr	r3, [pc, #308]	; (8002878 <HAL_RCC_GetSysClockFreq+0x180>)
 8002744:	685b      	ldr	r3, [r3, #4]
 8002746:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800274a:	2b00      	cmp	r3, #0
 800274c:	d028      	beq.n	80027a0 <HAL_RCC_GetSysClockFreq+0xa8>
 800274e:	4b4a      	ldr	r3, [pc, #296]	; (8002878 <HAL_RCC_GetSysClockFreq+0x180>)
 8002750:	685b      	ldr	r3, [r3, #4]
 8002752:	099b      	lsrs	r3, r3, #6
 8002754:	2200      	movs	r2, #0
 8002756:	623b      	str	r3, [r7, #32]
 8002758:	627a      	str	r2, [r7, #36]	; 0x24
 800275a:	6a3b      	ldr	r3, [r7, #32]
 800275c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8002760:	2100      	movs	r1, #0
 8002762:	4b47      	ldr	r3, [pc, #284]	; (8002880 <HAL_RCC_GetSysClockFreq+0x188>)
 8002764:	fb03 f201 	mul.w	r2, r3, r1
 8002768:	2300      	movs	r3, #0
 800276a:	fb00 f303 	mul.w	r3, r0, r3
 800276e:	4413      	add	r3, r2
 8002770:	4a43      	ldr	r2, [pc, #268]	; (8002880 <HAL_RCC_GetSysClockFreq+0x188>)
 8002772:	fba0 1202 	umull	r1, r2, r0, r2
 8002776:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002778:	460a      	mov	r2, r1
 800277a:	62ba      	str	r2, [r7, #40]	; 0x28
 800277c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800277e:	4413      	add	r3, r2
 8002780:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002782:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002784:	2200      	movs	r2, #0
 8002786:	61bb      	str	r3, [r7, #24]
 8002788:	61fa      	str	r2, [r7, #28]
 800278a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800278e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002792:	f7fd fd75 	bl	8000280 <__aeabi_uldivmod>
 8002796:	4602      	mov	r2, r0
 8002798:	460b      	mov	r3, r1
 800279a:	4613      	mov	r3, r2
 800279c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800279e:	e053      	b.n	8002848 <HAL_RCC_GetSysClockFreq+0x150>
 80027a0:	4b35      	ldr	r3, [pc, #212]	; (8002878 <HAL_RCC_GetSysClockFreq+0x180>)
 80027a2:	685b      	ldr	r3, [r3, #4]
 80027a4:	099b      	lsrs	r3, r3, #6
 80027a6:	2200      	movs	r2, #0
 80027a8:	613b      	str	r3, [r7, #16]
 80027aa:	617a      	str	r2, [r7, #20]
 80027ac:	693b      	ldr	r3, [r7, #16]
 80027ae:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80027b2:	f04f 0b00 	mov.w	fp, #0
 80027b6:	4652      	mov	r2, sl
 80027b8:	465b      	mov	r3, fp
 80027ba:	f04f 0000 	mov.w	r0, #0
 80027be:	f04f 0100 	mov.w	r1, #0
 80027c2:	0159      	lsls	r1, r3, #5
 80027c4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80027c8:	0150      	lsls	r0, r2, #5
 80027ca:	4602      	mov	r2, r0
 80027cc:	460b      	mov	r3, r1
 80027ce:	ebb2 080a 	subs.w	r8, r2, sl
 80027d2:	eb63 090b 	sbc.w	r9, r3, fp
 80027d6:	f04f 0200 	mov.w	r2, #0
 80027da:	f04f 0300 	mov.w	r3, #0
 80027de:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80027e2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80027e6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80027ea:	ebb2 0408 	subs.w	r4, r2, r8
 80027ee:	eb63 0509 	sbc.w	r5, r3, r9
 80027f2:	f04f 0200 	mov.w	r2, #0
 80027f6:	f04f 0300 	mov.w	r3, #0
 80027fa:	00eb      	lsls	r3, r5, #3
 80027fc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002800:	00e2      	lsls	r2, r4, #3
 8002802:	4614      	mov	r4, r2
 8002804:	461d      	mov	r5, r3
 8002806:	eb14 030a 	adds.w	r3, r4, sl
 800280a:	603b      	str	r3, [r7, #0]
 800280c:	eb45 030b 	adc.w	r3, r5, fp
 8002810:	607b      	str	r3, [r7, #4]
 8002812:	f04f 0200 	mov.w	r2, #0
 8002816:	f04f 0300 	mov.w	r3, #0
 800281a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800281e:	4629      	mov	r1, r5
 8002820:	028b      	lsls	r3, r1, #10
 8002822:	4621      	mov	r1, r4
 8002824:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002828:	4621      	mov	r1, r4
 800282a:	028a      	lsls	r2, r1, #10
 800282c:	4610      	mov	r0, r2
 800282e:	4619      	mov	r1, r3
 8002830:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002832:	2200      	movs	r2, #0
 8002834:	60bb      	str	r3, [r7, #8]
 8002836:	60fa      	str	r2, [r7, #12]
 8002838:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800283c:	f7fd fd20 	bl	8000280 <__aeabi_uldivmod>
 8002840:	4602      	mov	r2, r0
 8002842:	460b      	mov	r3, r1
 8002844:	4613      	mov	r3, r2
 8002846:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002848:	4b0b      	ldr	r3, [pc, #44]	; (8002878 <HAL_RCC_GetSysClockFreq+0x180>)
 800284a:	685b      	ldr	r3, [r3, #4]
 800284c:	0c1b      	lsrs	r3, r3, #16
 800284e:	f003 0303 	and.w	r3, r3, #3
 8002852:	3301      	adds	r3, #1
 8002854:	005b      	lsls	r3, r3, #1
 8002856:	633b      	str	r3, [r7, #48]	; 0x30
 8002858:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800285a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800285c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002860:	63bb      	str	r3, [r7, #56]	; 0x38
 8002862:	e002      	b.n	800286a <HAL_RCC_GetSysClockFreq+0x172>
 8002864:	4b05      	ldr	r3, [pc, #20]	; (800287c <HAL_RCC_GetSysClockFreq+0x184>)
 8002866:	63bb      	str	r3, [r7, #56]	; 0x38
 8002868:	bf00      	nop
 800286a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800286c:	4618      	mov	r0, r3
 800286e:	3740      	adds	r7, #64	; 0x40
 8002870:	46bd      	mov	sp, r7
 8002872:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002876:	bf00      	nop
 8002878:	40023800 	.word	0x40023800
 800287c:	00f42400 	.word	0x00f42400
 8002880:	017d7840 	.word	0x017d7840

08002884 <HAL_RCC_GetHCLKFreq>:
 8002884:	b480      	push	{r7}
 8002886:	af00      	add	r7, sp, #0
 8002888:	4b03      	ldr	r3, [pc, #12]	; (8002898 <HAL_RCC_GetHCLKFreq+0x14>)
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	4618      	mov	r0, r3
 800288e:	46bd      	mov	sp, r7
 8002890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002894:	4770      	bx	lr
 8002896:	bf00      	nop
 8002898:	20000000 	.word	0x20000000

0800289c <HAL_RCC_GetPCLK1Freq>:
 800289c:	b580      	push	{r7, lr}
 800289e:	af00      	add	r7, sp, #0
 80028a0:	f7ff fff0 	bl	8002884 <HAL_RCC_GetHCLKFreq>
 80028a4:	4602      	mov	r2, r0
 80028a6:	4b05      	ldr	r3, [pc, #20]	; (80028bc <HAL_RCC_GetPCLK1Freq+0x20>)
 80028a8:	689b      	ldr	r3, [r3, #8]
 80028aa:	0a9b      	lsrs	r3, r3, #10
 80028ac:	f003 0307 	and.w	r3, r3, #7
 80028b0:	4903      	ldr	r1, [pc, #12]	; (80028c0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80028b2:	5ccb      	ldrb	r3, [r1, r3]
 80028b4:	fa22 f303 	lsr.w	r3, r2, r3
 80028b8:	4618      	mov	r0, r3
 80028ba:	bd80      	pop	{r7, pc}
 80028bc:	40023800 	.word	0x40023800
 80028c0:	080078bc 	.word	0x080078bc

080028c4 <HAL_RCC_GetPCLK2Freq>:
 80028c4:	b580      	push	{r7, lr}
 80028c6:	af00      	add	r7, sp, #0
 80028c8:	f7ff ffdc 	bl	8002884 <HAL_RCC_GetHCLKFreq>
 80028cc:	4602      	mov	r2, r0
 80028ce:	4b05      	ldr	r3, [pc, #20]	; (80028e4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80028d0:	689b      	ldr	r3, [r3, #8]
 80028d2:	0b5b      	lsrs	r3, r3, #13
 80028d4:	f003 0307 	and.w	r3, r3, #7
 80028d8:	4903      	ldr	r1, [pc, #12]	; (80028e8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80028da:	5ccb      	ldrb	r3, [r1, r3]
 80028dc:	fa22 f303 	lsr.w	r3, r2, r3
 80028e0:	4618      	mov	r0, r3
 80028e2:	bd80      	pop	{r7, pc}
 80028e4:	40023800 	.word	0x40023800
 80028e8:	080078bc 	.word	0x080078bc

080028ec <HAL_UART_Init>:
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b082      	sub	sp, #8
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	6078      	str	r0, [r7, #4]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d101      	bne.n	80028fe <HAL_UART_Init+0x12>
 80028fa:	2301      	movs	r3, #1
 80028fc:	e03f      	b.n	800297e <HAL_UART_Init+0x92>
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002904:	b2db      	uxtb	r3, r3
 8002906:	2b00      	cmp	r3, #0
 8002908:	d106      	bne.n	8002918 <HAL_UART_Init+0x2c>
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	2200      	movs	r2, #0
 800290e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002912:	6878      	ldr	r0, [r7, #4]
 8002914:	f7fe fd6c 	bl	80013f0 <HAL_UART_MspInit>
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	2224      	movs	r2, #36	; 0x24
 800291c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	68da      	ldr	r2, [r3, #12]
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800292e:	60da      	str	r2, [r3, #12]
 8002930:	6878      	ldr	r0, [r7, #4]
 8002932:	f000 fe1d 	bl	8003570 <UART_SetConfig>
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	691a      	ldr	r2, [r3, #16]
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	681b      	ldr	r3, [r3, #0]
 8002940:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002944:	611a      	str	r2, [r3, #16]
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	681b      	ldr	r3, [r3, #0]
 800294a:	695a      	ldr	r2, [r3, #20]
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002954:	615a      	str	r2, [r3, #20]
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	68da      	ldr	r2, [r3, #12]
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002964:	60da      	str	r2, [r3, #12]
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	2200      	movs	r2, #0
 800296a:	641a      	str	r2, [r3, #64]	; 0x40
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	2220      	movs	r2, #32
 8002970:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	2220      	movs	r2, #32
 8002978:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800297c:	2300      	movs	r3, #0
 800297e:	4618      	mov	r0, r3
 8002980:	3708      	adds	r7, #8
 8002982:	46bd      	mov	sp, r7
 8002984:	bd80      	pop	{r7, pc}

08002986 <HAL_UART_Transmit>:
 8002986:	b580      	push	{r7, lr}
 8002988:	b08a      	sub	sp, #40	; 0x28
 800298a:	af02      	add	r7, sp, #8
 800298c:	60f8      	str	r0, [r7, #12]
 800298e:	60b9      	str	r1, [r7, #8]
 8002990:	603b      	str	r3, [r7, #0]
 8002992:	4613      	mov	r3, r2
 8002994:	80fb      	strh	r3, [r7, #6]
 8002996:	2300      	movs	r3, #0
 8002998:	617b      	str	r3, [r7, #20]
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80029a0:	b2db      	uxtb	r3, r3
 80029a2:	2b20      	cmp	r3, #32
 80029a4:	d17c      	bne.n	8002aa0 <HAL_UART_Transmit+0x11a>
 80029a6:	68bb      	ldr	r3, [r7, #8]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d002      	beq.n	80029b2 <HAL_UART_Transmit+0x2c>
 80029ac:	88fb      	ldrh	r3, [r7, #6]
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d101      	bne.n	80029b6 <HAL_UART_Transmit+0x30>
 80029b2:	2301      	movs	r3, #1
 80029b4:	e075      	b.n	8002aa2 <HAL_UART_Transmit+0x11c>
 80029b6:	68fb      	ldr	r3, [r7, #12]
 80029b8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80029bc:	2b01      	cmp	r3, #1
 80029be:	d101      	bne.n	80029c4 <HAL_UART_Transmit+0x3e>
 80029c0:	2302      	movs	r3, #2
 80029c2:	e06e      	b.n	8002aa2 <HAL_UART_Transmit+0x11c>
 80029c4:	68fb      	ldr	r3, [r7, #12]
 80029c6:	2201      	movs	r2, #1
 80029c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80029cc:	68fb      	ldr	r3, [r7, #12]
 80029ce:	2200      	movs	r2, #0
 80029d0:	641a      	str	r2, [r3, #64]	; 0x40
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	2221      	movs	r2, #33	; 0x21
 80029d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80029da:	f7fe ff8b 	bl	80018f4 <HAL_GetTick>
 80029de:	6178      	str	r0, [r7, #20]
 80029e0:	68fb      	ldr	r3, [r7, #12]
 80029e2:	88fa      	ldrh	r2, [r7, #6]
 80029e4:	849a      	strh	r2, [r3, #36]	; 0x24
 80029e6:	68fb      	ldr	r3, [r7, #12]
 80029e8:	88fa      	ldrh	r2, [r7, #6]
 80029ea:	84da      	strh	r2, [r3, #38]	; 0x26
 80029ec:	68fb      	ldr	r3, [r7, #12]
 80029ee:	689b      	ldr	r3, [r3, #8]
 80029f0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80029f4:	d108      	bne.n	8002a08 <HAL_UART_Transmit+0x82>
 80029f6:	68fb      	ldr	r3, [r7, #12]
 80029f8:	691b      	ldr	r3, [r3, #16]
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d104      	bne.n	8002a08 <HAL_UART_Transmit+0x82>
 80029fe:	2300      	movs	r3, #0
 8002a00:	61fb      	str	r3, [r7, #28]
 8002a02:	68bb      	ldr	r3, [r7, #8]
 8002a04:	61bb      	str	r3, [r7, #24]
 8002a06:	e003      	b.n	8002a10 <HAL_UART_Transmit+0x8a>
 8002a08:	68bb      	ldr	r3, [r7, #8]
 8002a0a:	61fb      	str	r3, [r7, #28]
 8002a0c:	2300      	movs	r3, #0
 8002a0e:	61bb      	str	r3, [r7, #24]
 8002a10:	68fb      	ldr	r3, [r7, #12]
 8002a12:	2200      	movs	r2, #0
 8002a14:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a18:	e02a      	b.n	8002a70 <HAL_UART_Transmit+0xea>
 8002a1a:	683b      	ldr	r3, [r7, #0]
 8002a1c:	9300      	str	r3, [sp, #0]
 8002a1e:	697b      	ldr	r3, [r7, #20]
 8002a20:	2200      	movs	r2, #0
 8002a22:	2180      	movs	r1, #128	; 0x80
 8002a24:	68f8      	ldr	r0, [r7, #12]
 8002a26:	f000 fb5d 	bl	80030e4 <UART_WaitOnFlagUntilTimeout>
 8002a2a:	4603      	mov	r3, r0
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d001      	beq.n	8002a34 <HAL_UART_Transmit+0xae>
 8002a30:	2303      	movs	r3, #3
 8002a32:	e036      	b.n	8002aa2 <HAL_UART_Transmit+0x11c>
 8002a34:	69fb      	ldr	r3, [r7, #28]
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d10b      	bne.n	8002a52 <HAL_UART_Transmit+0xcc>
 8002a3a:	69bb      	ldr	r3, [r7, #24]
 8002a3c:	881b      	ldrh	r3, [r3, #0]
 8002a3e:	461a      	mov	r2, r3
 8002a40:	68fb      	ldr	r3, [r7, #12]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002a48:	605a      	str	r2, [r3, #4]
 8002a4a:	69bb      	ldr	r3, [r7, #24]
 8002a4c:	3302      	adds	r3, #2
 8002a4e:	61bb      	str	r3, [r7, #24]
 8002a50:	e007      	b.n	8002a62 <HAL_UART_Transmit+0xdc>
 8002a52:	69fb      	ldr	r3, [r7, #28]
 8002a54:	781a      	ldrb	r2, [r3, #0]
 8002a56:	68fb      	ldr	r3, [r7, #12]
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	605a      	str	r2, [r3, #4]
 8002a5c:	69fb      	ldr	r3, [r7, #28]
 8002a5e:	3301      	adds	r3, #1
 8002a60:	61fb      	str	r3, [r7, #28]
 8002a62:	68fb      	ldr	r3, [r7, #12]
 8002a64:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002a66:	b29b      	uxth	r3, r3
 8002a68:	3b01      	subs	r3, #1
 8002a6a:	b29a      	uxth	r2, r3
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	84da      	strh	r2, [r3, #38]	; 0x26
 8002a70:	68fb      	ldr	r3, [r7, #12]
 8002a72:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002a74:	b29b      	uxth	r3, r3
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d1cf      	bne.n	8002a1a <HAL_UART_Transmit+0x94>
 8002a7a:	683b      	ldr	r3, [r7, #0]
 8002a7c:	9300      	str	r3, [sp, #0]
 8002a7e:	697b      	ldr	r3, [r7, #20]
 8002a80:	2200      	movs	r2, #0
 8002a82:	2140      	movs	r1, #64	; 0x40
 8002a84:	68f8      	ldr	r0, [r7, #12]
 8002a86:	f000 fb2d 	bl	80030e4 <UART_WaitOnFlagUntilTimeout>
 8002a8a:	4603      	mov	r3, r0
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d001      	beq.n	8002a94 <HAL_UART_Transmit+0x10e>
 8002a90:	2303      	movs	r3, #3
 8002a92:	e006      	b.n	8002aa2 <HAL_UART_Transmit+0x11c>
 8002a94:	68fb      	ldr	r3, [r7, #12]
 8002a96:	2220      	movs	r2, #32
 8002a98:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	e000      	b.n	8002aa2 <HAL_UART_Transmit+0x11c>
 8002aa0:	2302      	movs	r3, #2
 8002aa2:	4618      	mov	r0, r3
 8002aa4:	3720      	adds	r7, #32
 8002aa6:	46bd      	mov	sp, r7
 8002aa8:	bd80      	pop	{r7, pc}

08002aaa <HAL_UARTEx_ReceiveToIdle_IT>:
 8002aaa:	b580      	push	{r7, lr}
 8002aac:	b08c      	sub	sp, #48	; 0x30
 8002aae:	af00      	add	r7, sp, #0
 8002ab0:	60f8      	str	r0, [r7, #12]
 8002ab2:	60b9      	str	r1, [r7, #8]
 8002ab4:	4613      	mov	r3, r2
 8002ab6:	80fb      	strh	r3, [r7, #6]
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002abe:	b2db      	uxtb	r3, r3
 8002ac0:	2b20      	cmp	r3, #32
 8002ac2:	d152      	bne.n	8002b6a <HAL_UARTEx_ReceiveToIdle_IT+0xc0>
 8002ac4:	68bb      	ldr	r3, [r7, #8]
 8002ac6:	2b00      	cmp	r3, #0
 8002ac8:	d002      	beq.n	8002ad0 <HAL_UARTEx_ReceiveToIdle_IT+0x26>
 8002aca:	88fb      	ldrh	r3, [r7, #6]
 8002acc:	2b00      	cmp	r3, #0
 8002ace:	d101      	bne.n	8002ad4 <HAL_UARTEx_ReceiveToIdle_IT+0x2a>
 8002ad0:	2301      	movs	r3, #1
 8002ad2:	e04b      	b.n	8002b6c <HAL_UARTEx_ReceiveToIdle_IT+0xc2>
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002ada:	2b01      	cmp	r3, #1
 8002adc:	d101      	bne.n	8002ae2 <HAL_UARTEx_ReceiveToIdle_IT+0x38>
 8002ade:	2302      	movs	r3, #2
 8002ae0:	e044      	b.n	8002b6c <HAL_UARTEx_ReceiveToIdle_IT+0xc2>
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	2201      	movs	r2, #1
 8002ae6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	2201      	movs	r2, #1
 8002aee:	631a      	str	r2, [r3, #48]	; 0x30
 8002af0:	88fb      	ldrh	r3, [r7, #6]
 8002af2:	461a      	mov	r2, r3
 8002af4:	68b9      	ldr	r1, [r7, #8]
 8002af6:	68f8      	ldr	r0, [r7, #12]
 8002af8:	f000 fb62 	bl	80031c0 <UART_Start_Receive_IT>
 8002afc:	4603      	mov	r3, r0
 8002afe:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8002b02:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8002b06:	2b00      	cmp	r3, #0
 8002b08:	d12c      	bne.n	8002b64 <HAL_UARTEx_ReceiveToIdle_IT+0xba>
 8002b0a:	68fb      	ldr	r3, [r7, #12]
 8002b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b0e:	2b01      	cmp	r3, #1
 8002b10:	d125      	bne.n	8002b5e <HAL_UARTEx_ReceiveToIdle_IT+0xb4>
 8002b12:	2300      	movs	r3, #0
 8002b14:	613b      	str	r3, [r7, #16]
 8002b16:	68fb      	ldr	r3, [r7, #12]
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	613b      	str	r3, [r7, #16]
 8002b1e:	68fb      	ldr	r3, [r7, #12]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	685b      	ldr	r3, [r3, #4]
 8002b24:	613b      	str	r3, [r7, #16]
 8002b26:	693b      	ldr	r3, [r7, #16]
 8002b28:	68fb      	ldr	r3, [r7, #12]
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	330c      	adds	r3, #12
 8002b2e:	61bb      	str	r3, [r7, #24]
 8002b30:	69bb      	ldr	r3, [r7, #24]
 8002b32:	e853 3f00 	ldrex	r3, [r3]
 8002b36:	617b      	str	r3, [r7, #20]
 8002b38:	697b      	ldr	r3, [r7, #20]
 8002b3a:	f043 0310 	orr.w	r3, r3, #16
 8002b3e:	62bb      	str	r3, [r7, #40]	; 0x28
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	330c      	adds	r3, #12
 8002b46:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002b48:	627a      	str	r2, [r7, #36]	; 0x24
 8002b4a:	623b      	str	r3, [r7, #32]
 8002b4c:	6a39      	ldr	r1, [r7, #32]
 8002b4e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002b50:	e841 2300 	strex	r3, r2, [r1]
 8002b54:	61fb      	str	r3, [r7, #28]
 8002b56:	69fb      	ldr	r3, [r7, #28]
 8002b58:	2b00      	cmp	r3, #0
 8002b5a:	d1e5      	bne.n	8002b28 <HAL_UARTEx_ReceiveToIdle_IT+0x7e>
 8002b5c:	e002      	b.n	8002b64 <HAL_UARTEx_ReceiveToIdle_IT+0xba>
 8002b5e:	2301      	movs	r3, #1
 8002b60:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8002b64:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8002b68:	e000      	b.n	8002b6c <HAL_UARTEx_ReceiveToIdle_IT+0xc2>
 8002b6a:	2302      	movs	r3, #2
 8002b6c:	4618      	mov	r0, r3
 8002b6e:	3730      	adds	r7, #48	; 0x30
 8002b70:	46bd      	mov	sp, r7
 8002b72:	bd80      	pop	{r7, pc}

08002b74 <HAL_UART_IRQHandler>:
 8002b74:	b580      	push	{r7, lr}
 8002b76:	b0ba      	sub	sp, #232	; 0xe8
 8002b78:	af00      	add	r7, sp, #0
 8002b7a:	6078      	str	r0, [r7, #4]
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	68db      	ldr	r3, [r3, #12]
 8002b8c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	695b      	ldr	r3, [r3, #20]
 8002b96:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8002b9a:	2300      	movs	r3, #0
 8002b9c:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8002ba0:	2300      	movs	r3, #0
 8002ba2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8002ba6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002baa:	f003 030f 	and.w	r3, r3, #15
 8002bae:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8002bb2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	d10f      	bne.n	8002bda <HAL_UART_IRQHandler+0x66>
 8002bba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002bbe:	f003 0320 	and.w	r3, r3, #32
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d009      	beq.n	8002bda <HAL_UART_IRQHandler+0x66>
 8002bc6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8002bca:	f003 0320 	and.w	r3, r3, #32
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d003      	beq.n	8002bda <HAL_UART_IRQHandler+0x66>
 8002bd2:	6878      	ldr	r0, [r7, #4]
 8002bd4:	f000 fc11 	bl	80033fa <UART_Receive_IT>
 8002bd8:	e256      	b.n	8003088 <HAL_UART_IRQHandler+0x514>
 8002bda:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8002bde:	2b00      	cmp	r3, #0
 8002be0:	f000 80de 	beq.w	8002da0 <HAL_UART_IRQHandler+0x22c>
 8002be4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8002be8:	f003 0301 	and.w	r3, r3, #1
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d106      	bne.n	8002bfe <HAL_UART_IRQHandler+0x8a>
 8002bf0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8002bf4:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	f000 80d1 	beq.w	8002da0 <HAL_UART_IRQHandler+0x22c>
 8002bfe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002c02:	f003 0301 	and.w	r3, r3, #1
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	d00b      	beq.n	8002c22 <HAL_UART_IRQHandler+0xae>
 8002c0a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8002c0e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d005      	beq.n	8002c22 <HAL_UART_IRQHandler+0xae>
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c1a:	f043 0201 	orr.w	r2, r3, #1
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	641a      	str	r2, [r3, #64]	; 0x40
 8002c22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002c26:	f003 0304 	and.w	r3, r3, #4
 8002c2a:	2b00      	cmp	r3, #0
 8002c2c:	d00b      	beq.n	8002c46 <HAL_UART_IRQHandler+0xd2>
 8002c2e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8002c32:	f003 0301 	and.w	r3, r3, #1
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d005      	beq.n	8002c46 <HAL_UART_IRQHandler+0xd2>
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c3e:	f043 0202 	orr.w	r2, r3, #2
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	641a      	str	r2, [r3, #64]	; 0x40
 8002c46:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002c4a:	f003 0302 	and.w	r3, r3, #2
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d00b      	beq.n	8002c6a <HAL_UART_IRQHandler+0xf6>
 8002c52:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8002c56:	f003 0301 	and.w	r3, r3, #1
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	d005      	beq.n	8002c6a <HAL_UART_IRQHandler+0xf6>
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c62:	f043 0204 	orr.w	r2, r3, #4
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	641a      	str	r2, [r3, #64]	; 0x40
 8002c6a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002c6e:	f003 0308 	and.w	r3, r3, #8
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	d011      	beq.n	8002c9a <HAL_UART_IRQHandler+0x126>
 8002c76:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8002c7a:	f003 0320 	and.w	r3, r3, #32
 8002c7e:	2b00      	cmp	r3, #0
 8002c80:	d105      	bne.n	8002c8e <HAL_UART_IRQHandler+0x11a>
 8002c82:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8002c86:	f003 0301 	and.w	r3, r3, #1
 8002c8a:	2b00      	cmp	r3, #0
 8002c8c:	d005      	beq.n	8002c9a <HAL_UART_IRQHandler+0x126>
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c92:	f043 0208 	orr.w	r2, r3, #8
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	641a      	str	r2, [r3, #64]	; 0x40
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	f000 81ed 	beq.w	800307e <HAL_UART_IRQHandler+0x50a>
 8002ca4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002ca8:	f003 0320 	and.w	r3, r3, #32
 8002cac:	2b00      	cmp	r3, #0
 8002cae:	d008      	beq.n	8002cc2 <HAL_UART_IRQHandler+0x14e>
 8002cb0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8002cb4:	f003 0320 	and.w	r3, r3, #32
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d002      	beq.n	8002cc2 <HAL_UART_IRQHandler+0x14e>
 8002cbc:	6878      	ldr	r0, [r7, #4]
 8002cbe:	f000 fb9c 	bl	80033fa <UART_Receive_IT>
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	695b      	ldr	r3, [r3, #20]
 8002cc8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ccc:	2b40      	cmp	r3, #64	; 0x40
 8002cce:	bf0c      	ite	eq
 8002cd0:	2301      	moveq	r3, #1
 8002cd2:	2300      	movne	r3, #0
 8002cd4:	b2db      	uxtb	r3, r3
 8002cd6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cde:	f003 0308 	and.w	r3, r3, #8
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	d103      	bne.n	8002cee <HAL_UART_IRQHandler+0x17a>
 8002ce6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d04f      	beq.n	8002d8e <HAL_UART_IRQHandler+0x21a>
 8002cee:	6878      	ldr	r0, [r7, #4]
 8002cf0:	f000 faa4 	bl	800323c <UART_EndRxTransfer>
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	695b      	ldr	r3, [r3, #20]
 8002cfa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002cfe:	2b40      	cmp	r3, #64	; 0x40
 8002d00:	d141      	bne.n	8002d86 <HAL_UART_IRQHandler+0x212>
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	3314      	adds	r3, #20
 8002d08:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8002d0c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8002d10:	e853 3f00 	ldrex	r3, [r3]
 8002d14:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8002d18:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8002d1c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002d20:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	3314      	adds	r3, #20
 8002d2a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8002d2e:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8002d32:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8002d36:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8002d3a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8002d3e:	e841 2300 	strex	r3, r2, [r1]
 8002d42:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8002d46:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8002d4a:	2b00      	cmp	r3, #0
 8002d4c:	d1d9      	bne.n	8002d02 <HAL_UART_IRQHandler+0x18e>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d52:	2b00      	cmp	r3, #0
 8002d54:	d013      	beq.n	8002d7e <HAL_UART_IRQHandler+0x20a>
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d5a:	4a7d      	ldr	r2, [pc, #500]	; (8002f50 <HAL_UART_IRQHandler+0x3dc>)
 8002d5c:	651a      	str	r2, [r3, #80]	; 0x50
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d62:	4618      	mov	r0, r3
 8002d64:	f7fe ff77 	bl	8001c56 <HAL_DMA_Abort_IT>
 8002d68:	4603      	mov	r3, r0
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d016      	beq.n	8002d9c <HAL_UART_IRQHandler+0x228>
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002d74:	687a      	ldr	r2, [r7, #4]
 8002d76:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8002d78:	4610      	mov	r0, r2
 8002d7a:	4798      	blx	r3
 8002d7c:	e00e      	b.n	8002d9c <HAL_UART_IRQHandler+0x228>
 8002d7e:	6878      	ldr	r0, [r7, #4]
 8002d80:	f000 f99a 	bl	80030b8 <HAL_UART_ErrorCallback>
 8002d84:	e00a      	b.n	8002d9c <HAL_UART_IRQHandler+0x228>
 8002d86:	6878      	ldr	r0, [r7, #4]
 8002d88:	f000 f996 	bl	80030b8 <HAL_UART_ErrorCallback>
 8002d8c:	e006      	b.n	8002d9c <HAL_UART_IRQHandler+0x228>
 8002d8e:	6878      	ldr	r0, [r7, #4]
 8002d90:	f000 f992 	bl	80030b8 <HAL_UART_ErrorCallback>
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	2200      	movs	r2, #0
 8002d98:	641a      	str	r2, [r3, #64]	; 0x40
 8002d9a:	e170      	b.n	800307e <HAL_UART_IRQHandler+0x50a>
 8002d9c:	bf00      	nop
 8002d9e:	e16e      	b.n	800307e <HAL_UART_IRQHandler+0x50a>
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002da4:	2b01      	cmp	r3, #1
 8002da6:	f040 814a 	bne.w	800303e <HAL_UART_IRQHandler+0x4ca>
 8002daa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8002dae:	f003 0310 	and.w	r3, r3, #16
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	f000 8143 	beq.w	800303e <HAL_UART_IRQHandler+0x4ca>
 8002db8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8002dbc:	f003 0310 	and.w	r3, r3, #16
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	f000 813c 	beq.w	800303e <HAL_UART_IRQHandler+0x4ca>
 8002dc6:	2300      	movs	r3, #0
 8002dc8:	60bb      	str	r3, [r7, #8]
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	60bb      	str	r3, [r7, #8]
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	685b      	ldr	r3, [r3, #4]
 8002dd8:	60bb      	str	r3, [r7, #8]
 8002dda:	68bb      	ldr	r3, [r7, #8]
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	695b      	ldr	r3, [r3, #20]
 8002de2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002de6:	2b40      	cmp	r3, #64	; 0x40
 8002de8:	f040 80b4 	bne.w	8002f54 <HAL_UART_IRQHandler+0x3e0>
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	685b      	ldr	r3, [r3, #4]
 8002df4:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8002df8:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8002dfc:	2b00      	cmp	r3, #0
 8002dfe:	f000 8140 	beq.w	8003082 <HAL_UART_IRQHandler+0x50e>
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8002e06:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8002e0a:	429a      	cmp	r2, r3
 8002e0c:	f080 8139 	bcs.w	8003082 <HAL_UART_IRQHandler+0x50e>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8002e16:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002e1c:	69db      	ldr	r3, [r3, #28]
 8002e1e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002e22:	f000 8088 	beq.w	8002f36 <HAL_UART_IRQHandler+0x3c2>
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	330c      	adds	r3, #12
 8002e2c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8002e30:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8002e34:	e853 3f00 	ldrex	r3, [r3]
 8002e38:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8002e3c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8002e40:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002e44:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	330c      	adds	r3, #12
 8002e4e:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8002e52:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8002e56:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8002e5a:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8002e5e:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8002e62:	e841 2300 	strex	r3, r2, [r1]
 8002e66:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8002e6a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8002e6e:	2b00      	cmp	r3, #0
 8002e70:	d1d9      	bne.n	8002e26 <HAL_UART_IRQHandler+0x2b2>
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	3314      	adds	r3, #20
 8002e78:	677b      	str	r3, [r7, #116]	; 0x74
 8002e7a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002e7c:	e853 3f00 	ldrex	r3, [r3]
 8002e80:	673b      	str	r3, [r7, #112]	; 0x70
 8002e82:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002e84:	f023 0301 	bic.w	r3, r3, #1
 8002e88:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	3314      	adds	r3, #20
 8002e92:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8002e96:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8002e9a:	67fb      	str	r3, [r7, #124]	; 0x7c
 8002e9c:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8002e9e:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8002ea2:	e841 2300 	strex	r3, r2, [r1]
 8002ea6:	67bb      	str	r3, [r7, #120]	; 0x78
 8002ea8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002eaa:	2b00      	cmp	r3, #0
 8002eac:	d1e1      	bne.n	8002e72 <HAL_UART_IRQHandler+0x2fe>
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	3314      	adds	r3, #20
 8002eb4:	663b      	str	r3, [r7, #96]	; 0x60
 8002eb6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002eb8:	e853 3f00 	ldrex	r3, [r3]
 8002ebc:	65fb      	str	r3, [r7, #92]	; 0x5c
 8002ebe:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8002ec0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002ec4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	3314      	adds	r3, #20
 8002ece:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8002ed2:	66fa      	str	r2, [r7, #108]	; 0x6c
 8002ed4:	66bb      	str	r3, [r7, #104]	; 0x68
 8002ed6:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8002ed8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8002eda:	e841 2300 	strex	r3, r2, [r1]
 8002ede:	667b      	str	r3, [r7, #100]	; 0x64
 8002ee0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d1e3      	bne.n	8002eae <HAL_UART_IRQHandler+0x33a>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	2220      	movs	r2, #32
 8002eea:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	2200      	movs	r2, #0
 8002ef2:	631a      	str	r2, [r3, #48]	; 0x30
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	330c      	adds	r3, #12
 8002efa:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002efc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002efe:	e853 3f00 	ldrex	r3, [r3]
 8002f02:	64bb      	str	r3, [r7, #72]	; 0x48
 8002f04:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002f06:	f023 0310 	bic.w	r3, r3, #16
 8002f0a:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	330c      	adds	r3, #12
 8002f14:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8002f18:	65ba      	str	r2, [r7, #88]	; 0x58
 8002f1a:	657b      	str	r3, [r7, #84]	; 0x54
 8002f1c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8002f1e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8002f20:	e841 2300 	strex	r3, r2, [r1]
 8002f24:	653b      	str	r3, [r7, #80]	; 0x50
 8002f26:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002f28:	2b00      	cmp	r3, #0
 8002f2a:	d1e3      	bne.n	8002ef4 <HAL_UART_IRQHandler+0x380>
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f30:	4618      	mov	r0, r3
 8002f32:	f7fe fe20 	bl	8001b76 <HAL_DMA_Abort>
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002f3e:	b29b      	uxth	r3, r3
 8002f40:	1ad3      	subs	r3, r2, r3
 8002f42:	b29b      	uxth	r3, r3
 8002f44:	4619      	mov	r1, r3
 8002f46:	6878      	ldr	r0, [r7, #4]
 8002f48:	f000 f8c0 	bl	80030cc <HAL_UARTEx_RxEventCallback>
 8002f4c:	e099      	b.n	8003082 <HAL_UART_IRQHandler+0x50e>
 8002f4e:	bf00      	nop
 8002f50:	08003303 	.word	0x08003303
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002f5c:	b29b      	uxth	r3, r3
 8002f5e:	1ad3      	subs	r3, r2, r3
 8002f60:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002f68:	b29b      	uxth	r3, r3
 8002f6a:	2b00      	cmp	r3, #0
 8002f6c:	f000 808b 	beq.w	8003086 <HAL_UART_IRQHandler+0x512>
 8002f70:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8002f74:	2b00      	cmp	r3, #0
 8002f76:	f000 8086 	beq.w	8003086 <HAL_UART_IRQHandler+0x512>
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	330c      	adds	r3, #12
 8002f80:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f82:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002f84:	e853 3f00 	ldrex	r3, [r3]
 8002f88:	637b      	str	r3, [r7, #52]	; 0x34
 8002f8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002f8c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8002f90:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	330c      	adds	r3, #12
 8002f9a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8002f9e:	647a      	str	r2, [r7, #68]	; 0x44
 8002fa0:	643b      	str	r3, [r7, #64]	; 0x40
 8002fa2:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8002fa4:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002fa6:	e841 2300 	strex	r3, r2, [r1]
 8002faa:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002fac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d1e3      	bne.n	8002f7a <HAL_UART_IRQHandler+0x406>
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	3314      	adds	r3, #20
 8002fb8:	627b      	str	r3, [r7, #36]	; 0x24
 8002fba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fbc:	e853 3f00 	ldrex	r3, [r3]
 8002fc0:	623b      	str	r3, [r7, #32]
 8002fc2:	6a3b      	ldr	r3, [r7, #32]
 8002fc4:	f023 0301 	bic.w	r3, r3, #1
 8002fc8:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	3314      	adds	r3, #20
 8002fd2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8002fd6:	633a      	str	r2, [r7, #48]	; 0x30
 8002fd8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002fda:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8002fdc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002fde:	e841 2300 	strex	r3, r2, [r1]
 8002fe2:	62bb      	str	r3, [r7, #40]	; 0x28
 8002fe4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	d1e3      	bne.n	8002fb2 <HAL_UART_IRQHandler+0x43e>
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	2220      	movs	r2, #32
 8002fee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	2200      	movs	r2, #0
 8002ff6:	631a      	str	r2, [r3, #48]	; 0x30
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	330c      	adds	r3, #12
 8002ffe:	613b      	str	r3, [r7, #16]
 8003000:	693b      	ldr	r3, [r7, #16]
 8003002:	e853 3f00 	ldrex	r3, [r3]
 8003006:	60fb      	str	r3, [r7, #12]
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	f023 0310 	bic.w	r3, r3, #16
 800300e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	330c      	adds	r3, #12
 8003018:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800301c:	61fa      	str	r2, [r7, #28]
 800301e:	61bb      	str	r3, [r7, #24]
 8003020:	69b9      	ldr	r1, [r7, #24]
 8003022:	69fa      	ldr	r2, [r7, #28]
 8003024:	e841 2300 	strex	r3, r2, [r1]
 8003028:	617b      	str	r3, [r7, #20]
 800302a:	697b      	ldr	r3, [r7, #20]
 800302c:	2b00      	cmp	r3, #0
 800302e:	d1e3      	bne.n	8002ff8 <HAL_UART_IRQHandler+0x484>
 8003030:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8003034:	4619      	mov	r1, r3
 8003036:	6878      	ldr	r0, [r7, #4]
 8003038:	f000 f848 	bl	80030cc <HAL_UARTEx_RxEventCallback>
 800303c:	e023      	b.n	8003086 <HAL_UART_IRQHandler+0x512>
 800303e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003042:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003046:	2b00      	cmp	r3, #0
 8003048:	d009      	beq.n	800305e <HAL_UART_IRQHandler+0x4ea>
 800304a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800304e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003052:	2b00      	cmp	r3, #0
 8003054:	d003      	beq.n	800305e <HAL_UART_IRQHandler+0x4ea>
 8003056:	6878      	ldr	r0, [r7, #4]
 8003058:	f000 f967 	bl	800332a <UART_Transmit_IT>
 800305c:	e014      	b.n	8003088 <HAL_UART_IRQHandler+0x514>
 800305e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003062:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003066:	2b00      	cmp	r3, #0
 8003068:	d00e      	beq.n	8003088 <HAL_UART_IRQHandler+0x514>
 800306a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800306e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003072:	2b00      	cmp	r3, #0
 8003074:	d008      	beq.n	8003088 <HAL_UART_IRQHandler+0x514>
 8003076:	6878      	ldr	r0, [r7, #4]
 8003078:	f000 f9a7 	bl	80033ca <UART_EndTransmit_IT>
 800307c:	e004      	b.n	8003088 <HAL_UART_IRQHandler+0x514>
 800307e:	bf00      	nop
 8003080:	e002      	b.n	8003088 <HAL_UART_IRQHandler+0x514>
 8003082:	bf00      	nop
 8003084:	e000      	b.n	8003088 <HAL_UART_IRQHandler+0x514>
 8003086:	bf00      	nop
 8003088:	37e8      	adds	r7, #232	; 0xe8
 800308a:	46bd      	mov	sp, r7
 800308c:	bd80      	pop	{r7, pc}
 800308e:	bf00      	nop

08003090 <HAL_UART_TxCpltCallback>:
 8003090:	b480      	push	{r7}
 8003092:	b083      	sub	sp, #12
 8003094:	af00      	add	r7, sp, #0
 8003096:	6078      	str	r0, [r7, #4]
 8003098:	bf00      	nop
 800309a:	370c      	adds	r7, #12
 800309c:	46bd      	mov	sp, r7
 800309e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030a2:	4770      	bx	lr

080030a4 <HAL_UART_RxCpltCallback>:
 80030a4:	b480      	push	{r7}
 80030a6:	b083      	sub	sp, #12
 80030a8:	af00      	add	r7, sp, #0
 80030aa:	6078      	str	r0, [r7, #4]
 80030ac:	bf00      	nop
 80030ae:	370c      	adds	r7, #12
 80030b0:	46bd      	mov	sp, r7
 80030b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030b6:	4770      	bx	lr

080030b8 <HAL_UART_ErrorCallback>:
 80030b8:	b480      	push	{r7}
 80030ba:	b083      	sub	sp, #12
 80030bc:	af00      	add	r7, sp, #0
 80030be:	6078      	str	r0, [r7, #4]
 80030c0:	bf00      	nop
 80030c2:	370c      	adds	r7, #12
 80030c4:	46bd      	mov	sp, r7
 80030c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ca:	4770      	bx	lr

080030cc <HAL_UARTEx_RxEventCallback>:
 80030cc:	b480      	push	{r7}
 80030ce:	b083      	sub	sp, #12
 80030d0:	af00      	add	r7, sp, #0
 80030d2:	6078      	str	r0, [r7, #4]
 80030d4:	460b      	mov	r3, r1
 80030d6:	807b      	strh	r3, [r7, #2]
 80030d8:	bf00      	nop
 80030da:	370c      	adds	r7, #12
 80030dc:	46bd      	mov	sp, r7
 80030de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e2:	4770      	bx	lr

080030e4 <UART_WaitOnFlagUntilTimeout>:
 80030e4:	b580      	push	{r7, lr}
 80030e6:	b090      	sub	sp, #64	; 0x40
 80030e8:	af00      	add	r7, sp, #0
 80030ea:	60f8      	str	r0, [r7, #12]
 80030ec:	60b9      	str	r1, [r7, #8]
 80030ee:	603b      	str	r3, [r7, #0]
 80030f0:	4613      	mov	r3, r2
 80030f2:	71fb      	strb	r3, [r7, #7]
 80030f4:	e050      	b.n	8003198 <UART_WaitOnFlagUntilTimeout+0xb4>
 80030f6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80030f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80030fc:	d04c      	beq.n	8003198 <UART_WaitOnFlagUntilTimeout+0xb4>
 80030fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003100:	2b00      	cmp	r3, #0
 8003102:	d007      	beq.n	8003114 <UART_WaitOnFlagUntilTimeout+0x30>
 8003104:	f7fe fbf6 	bl	80018f4 <HAL_GetTick>
 8003108:	4602      	mov	r2, r0
 800310a:	683b      	ldr	r3, [r7, #0]
 800310c:	1ad3      	subs	r3, r2, r3
 800310e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8003110:	429a      	cmp	r2, r3
 8003112:	d241      	bcs.n	8003198 <UART_WaitOnFlagUntilTimeout+0xb4>
 8003114:	68fb      	ldr	r3, [r7, #12]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	330c      	adds	r3, #12
 800311a:	62bb      	str	r3, [r7, #40]	; 0x28
 800311c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800311e:	e853 3f00 	ldrex	r3, [r3]
 8003122:	627b      	str	r3, [r7, #36]	; 0x24
 8003124:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003126:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800312a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	330c      	adds	r3, #12
 8003132:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003134:	637a      	str	r2, [r7, #52]	; 0x34
 8003136:	633b      	str	r3, [r7, #48]	; 0x30
 8003138:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800313a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800313c:	e841 2300 	strex	r3, r2, [r1]
 8003140:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003142:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003144:	2b00      	cmp	r3, #0
 8003146:	d1e5      	bne.n	8003114 <UART_WaitOnFlagUntilTimeout+0x30>
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	3314      	adds	r3, #20
 800314e:	617b      	str	r3, [r7, #20]
 8003150:	697b      	ldr	r3, [r7, #20]
 8003152:	e853 3f00 	ldrex	r3, [r3]
 8003156:	613b      	str	r3, [r7, #16]
 8003158:	693b      	ldr	r3, [r7, #16]
 800315a:	f023 0301 	bic.w	r3, r3, #1
 800315e:	63bb      	str	r3, [r7, #56]	; 0x38
 8003160:	68fb      	ldr	r3, [r7, #12]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	3314      	adds	r3, #20
 8003166:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003168:	623a      	str	r2, [r7, #32]
 800316a:	61fb      	str	r3, [r7, #28]
 800316c:	69f9      	ldr	r1, [r7, #28]
 800316e:	6a3a      	ldr	r2, [r7, #32]
 8003170:	e841 2300 	strex	r3, r2, [r1]
 8003174:	61bb      	str	r3, [r7, #24]
 8003176:	69bb      	ldr	r3, [r7, #24]
 8003178:	2b00      	cmp	r3, #0
 800317a:	d1e5      	bne.n	8003148 <UART_WaitOnFlagUntilTimeout+0x64>
 800317c:	68fb      	ldr	r3, [r7, #12]
 800317e:	2220      	movs	r2, #32
 8003180:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	2220      	movs	r2, #32
 8003188:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	2200      	movs	r2, #0
 8003190:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003194:	2303      	movs	r3, #3
 8003196:	e00f      	b.n	80031b8 <UART_WaitOnFlagUntilTimeout+0xd4>
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	681a      	ldr	r2, [r3, #0]
 800319e:	68bb      	ldr	r3, [r7, #8]
 80031a0:	4013      	ands	r3, r2
 80031a2:	68ba      	ldr	r2, [r7, #8]
 80031a4:	429a      	cmp	r2, r3
 80031a6:	bf0c      	ite	eq
 80031a8:	2301      	moveq	r3, #1
 80031aa:	2300      	movne	r3, #0
 80031ac:	b2db      	uxtb	r3, r3
 80031ae:	461a      	mov	r2, r3
 80031b0:	79fb      	ldrb	r3, [r7, #7]
 80031b2:	429a      	cmp	r2, r3
 80031b4:	d09f      	beq.n	80030f6 <UART_WaitOnFlagUntilTimeout+0x12>
 80031b6:	2300      	movs	r3, #0
 80031b8:	4618      	mov	r0, r3
 80031ba:	3740      	adds	r7, #64	; 0x40
 80031bc:	46bd      	mov	sp, r7
 80031be:	bd80      	pop	{r7, pc}

080031c0 <UART_Start_Receive_IT>:
 80031c0:	b480      	push	{r7}
 80031c2:	b085      	sub	sp, #20
 80031c4:	af00      	add	r7, sp, #0
 80031c6:	60f8      	str	r0, [r7, #12]
 80031c8:	60b9      	str	r1, [r7, #8]
 80031ca:	4613      	mov	r3, r2
 80031cc:	80fb      	strh	r3, [r7, #6]
 80031ce:	68fb      	ldr	r3, [r7, #12]
 80031d0:	68ba      	ldr	r2, [r7, #8]
 80031d2:	629a      	str	r2, [r3, #40]	; 0x28
 80031d4:	68fb      	ldr	r3, [r7, #12]
 80031d6:	88fa      	ldrh	r2, [r7, #6]
 80031d8:	859a      	strh	r2, [r3, #44]	; 0x2c
 80031da:	68fb      	ldr	r3, [r7, #12]
 80031dc:	88fa      	ldrh	r2, [r7, #6]
 80031de:	85da      	strh	r2, [r3, #46]	; 0x2e
 80031e0:	68fb      	ldr	r3, [r7, #12]
 80031e2:	2200      	movs	r2, #0
 80031e4:	641a      	str	r2, [r3, #64]	; 0x40
 80031e6:	68fb      	ldr	r3, [r7, #12]
 80031e8:	2222      	movs	r2, #34	; 0x22
 80031ea:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	2200      	movs	r2, #0
 80031f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	691b      	ldr	r3, [r3, #16]
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	d007      	beq.n	800320e <UART_Start_Receive_IT+0x4e>
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	68da      	ldr	r2, [r3, #12]
 8003204:	68fb      	ldr	r3, [r7, #12]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800320c:	60da      	str	r2, [r3, #12]
 800320e:	68fb      	ldr	r3, [r7, #12]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	695a      	ldr	r2, [r3, #20]
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	f042 0201 	orr.w	r2, r2, #1
 800321c:	615a      	str	r2, [r3, #20]
 800321e:	68fb      	ldr	r3, [r7, #12]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	68da      	ldr	r2, [r3, #12]
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	f042 0220 	orr.w	r2, r2, #32
 800322c:	60da      	str	r2, [r3, #12]
 800322e:	2300      	movs	r3, #0
 8003230:	4618      	mov	r0, r3
 8003232:	3714      	adds	r7, #20
 8003234:	46bd      	mov	sp, r7
 8003236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800323a:	4770      	bx	lr

0800323c <UART_EndRxTransfer>:
 800323c:	b480      	push	{r7}
 800323e:	b095      	sub	sp, #84	; 0x54
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	330c      	adds	r3, #12
 800324a:	637b      	str	r3, [r7, #52]	; 0x34
 800324c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800324e:	e853 3f00 	ldrex	r3, [r3]
 8003252:	633b      	str	r3, [r7, #48]	; 0x30
 8003254:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003256:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800325a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	681b      	ldr	r3, [r3, #0]
 8003260:	330c      	adds	r3, #12
 8003262:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003264:	643a      	str	r2, [r7, #64]	; 0x40
 8003266:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003268:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800326a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800326c:	e841 2300 	strex	r3, r2, [r1]
 8003270:	63bb      	str	r3, [r7, #56]	; 0x38
 8003272:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003274:	2b00      	cmp	r3, #0
 8003276:	d1e5      	bne.n	8003244 <UART_EndRxTransfer+0x8>
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	3314      	adds	r3, #20
 800327e:	623b      	str	r3, [r7, #32]
 8003280:	6a3b      	ldr	r3, [r7, #32]
 8003282:	e853 3f00 	ldrex	r3, [r3]
 8003286:	61fb      	str	r3, [r7, #28]
 8003288:	69fb      	ldr	r3, [r7, #28]
 800328a:	f023 0301 	bic.w	r3, r3, #1
 800328e:	64bb      	str	r3, [r7, #72]	; 0x48
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	3314      	adds	r3, #20
 8003296:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8003298:	62fa      	str	r2, [r7, #44]	; 0x2c
 800329a:	62bb      	str	r3, [r7, #40]	; 0x28
 800329c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800329e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80032a0:	e841 2300 	strex	r3, r2, [r1]
 80032a4:	627b      	str	r3, [r7, #36]	; 0x24
 80032a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032a8:	2b00      	cmp	r3, #0
 80032aa:	d1e5      	bne.n	8003278 <UART_EndRxTransfer+0x3c>
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032b0:	2b01      	cmp	r3, #1
 80032b2:	d119      	bne.n	80032e8 <UART_EndRxTransfer+0xac>
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	330c      	adds	r3, #12
 80032ba:	60fb      	str	r3, [r7, #12]
 80032bc:	68fb      	ldr	r3, [r7, #12]
 80032be:	e853 3f00 	ldrex	r3, [r3]
 80032c2:	60bb      	str	r3, [r7, #8]
 80032c4:	68bb      	ldr	r3, [r7, #8]
 80032c6:	f023 0310 	bic.w	r3, r3, #16
 80032ca:	647b      	str	r3, [r7, #68]	; 0x44
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	330c      	adds	r3, #12
 80032d2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80032d4:	61ba      	str	r2, [r7, #24]
 80032d6:	617b      	str	r3, [r7, #20]
 80032d8:	6979      	ldr	r1, [r7, #20]
 80032da:	69ba      	ldr	r2, [r7, #24]
 80032dc:	e841 2300 	strex	r3, r2, [r1]
 80032e0:	613b      	str	r3, [r7, #16]
 80032e2:	693b      	ldr	r3, [r7, #16]
 80032e4:	2b00      	cmp	r3, #0
 80032e6:	d1e5      	bne.n	80032b4 <UART_EndRxTransfer+0x78>
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	2220      	movs	r2, #32
 80032ec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	2200      	movs	r2, #0
 80032f4:	631a      	str	r2, [r3, #48]	; 0x30
 80032f6:	bf00      	nop
 80032f8:	3754      	adds	r7, #84	; 0x54
 80032fa:	46bd      	mov	sp, r7
 80032fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003300:	4770      	bx	lr

08003302 <UART_DMAAbortOnError>:
 8003302:	b580      	push	{r7, lr}
 8003304:	b084      	sub	sp, #16
 8003306:	af00      	add	r7, sp, #0
 8003308:	6078      	str	r0, [r7, #4]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800330e:	60fb      	str	r3, [r7, #12]
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	2200      	movs	r2, #0
 8003314:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	2200      	movs	r2, #0
 800331a:	84da      	strh	r2, [r3, #38]	; 0x26
 800331c:	68f8      	ldr	r0, [r7, #12]
 800331e:	f7ff fecb 	bl	80030b8 <HAL_UART_ErrorCallback>
 8003322:	bf00      	nop
 8003324:	3710      	adds	r7, #16
 8003326:	46bd      	mov	sp, r7
 8003328:	bd80      	pop	{r7, pc}

0800332a <UART_Transmit_IT>:
 800332a:	b480      	push	{r7}
 800332c:	b085      	sub	sp, #20
 800332e:	af00      	add	r7, sp, #0
 8003330:	6078      	str	r0, [r7, #4]
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003338:	b2db      	uxtb	r3, r3
 800333a:	2b21      	cmp	r3, #33	; 0x21
 800333c:	d13e      	bne.n	80033bc <UART_Transmit_IT+0x92>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	689b      	ldr	r3, [r3, #8]
 8003342:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003346:	d114      	bne.n	8003372 <UART_Transmit_IT+0x48>
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	691b      	ldr	r3, [r3, #16]
 800334c:	2b00      	cmp	r3, #0
 800334e:	d110      	bne.n	8003372 <UART_Transmit_IT+0x48>
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	6a1b      	ldr	r3, [r3, #32]
 8003354:	60fb      	str	r3, [r7, #12]
 8003356:	68fb      	ldr	r3, [r7, #12]
 8003358:	881b      	ldrh	r3, [r3, #0]
 800335a:	461a      	mov	r2, r3
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003364:	605a      	str	r2, [r3, #4]
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	6a1b      	ldr	r3, [r3, #32]
 800336a:	1c9a      	adds	r2, r3, #2
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	621a      	str	r2, [r3, #32]
 8003370:	e008      	b.n	8003384 <UART_Transmit_IT+0x5a>
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	6a1b      	ldr	r3, [r3, #32]
 8003376:	1c59      	adds	r1, r3, #1
 8003378:	687a      	ldr	r2, [r7, #4]
 800337a:	6211      	str	r1, [r2, #32]
 800337c:	781a      	ldrb	r2, [r3, #0]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	605a      	str	r2, [r3, #4]
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003388:	b29b      	uxth	r3, r3
 800338a:	3b01      	subs	r3, #1
 800338c:	b29b      	uxth	r3, r3
 800338e:	687a      	ldr	r2, [r7, #4]
 8003390:	4619      	mov	r1, r3
 8003392:	84d1      	strh	r1, [r2, #38]	; 0x26
 8003394:	2b00      	cmp	r3, #0
 8003396:	d10f      	bne.n	80033b8 <UART_Transmit_IT+0x8e>
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	68da      	ldr	r2, [r3, #12]
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80033a6:	60da      	str	r2, [r3, #12]
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	68da      	ldr	r2, [r3, #12]
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80033b6:	60da      	str	r2, [r3, #12]
 80033b8:	2300      	movs	r3, #0
 80033ba:	e000      	b.n	80033be <UART_Transmit_IT+0x94>
 80033bc:	2302      	movs	r3, #2
 80033be:	4618      	mov	r0, r3
 80033c0:	3714      	adds	r7, #20
 80033c2:	46bd      	mov	sp, r7
 80033c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033c8:	4770      	bx	lr

080033ca <UART_EndTransmit_IT>:
 80033ca:	b580      	push	{r7, lr}
 80033cc:	b082      	sub	sp, #8
 80033ce:	af00      	add	r7, sp, #0
 80033d0:	6078      	str	r0, [r7, #4]
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	68da      	ldr	r2, [r3, #12]
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80033e0:	60da      	str	r2, [r3, #12]
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	2220      	movs	r2, #32
 80033e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80033ea:	6878      	ldr	r0, [r7, #4]
 80033ec:	f7ff fe50 	bl	8003090 <HAL_UART_TxCpltCallback>
 80033f0:	2300      	movs	r3, #0
 80033f2:	4618      	mov	r0, r3
 80033f4:	3708      	adds	r7, #8
 80033f6:	46bd      	mov	sp, r7
 80033f8:	bd80      	pop	{r7, pc}

080033fa <UART_Receive_IT>:
 80033fa:	b580      	push	{r7, lr}
 80033fc:	b08c      	sub	sp, #48	; 0x30
 80033fe:	af00      	add	r7, sp, #0
 8003400:	6078      	str	r0, [r7, #4]
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003408:	b2db      	uxtb	r3, r3
 800340a:	2b22      	cmp	r3, #34	; 0x22
 800340c:	f040 80ab 	bne.w	8003566 <UART_Receive_IT+0x16c>
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	689b      	ldr	r3, [r3, #8]
 8003414:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003418:	d117      	bne.n	800344a <UART_Receive_IT+0x50>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	691b      	ldr	r3, [r3, #16]
 800341e:	2b00      	cmp	r3, #0
 8003420:	d113      	bne.n	800344a <UART_Receive_IT+0x50>
 8003422:	2300      	movs	r3, #0
 8003424:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800342a:	62bb      	str	r3, [r7, #40]	; 0x28
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	685b      	ldr	r3, [r3, #4]
 8003432:	b29b      	uxth	r3, r3
 8003434:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003438:	b29a      	uxth	r2, r3
 800343a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800343c:	801a      	strh	r2, [r3, #0]
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003442:	1c9a      	adds	r2, r3, #2
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	629a      	str	r2, [r3, #40]	; 0x28
 8003448:	e026      	b.n	8003498 <UART_Receive_IT+0x9e>
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800344e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003450:	2300      	movs	r3, #0
 8003452:	62bb      	str	r3, [r7, #40]	; 0x28
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	689b      	ldr	r3, [r3, #8]
 8003458:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800345c:	d007      	beq.n	800346e <UART_Receive_IT+0x74>
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	689b      	ldr	r3, [r3, #8]
 8003462:	2b00      	cmp	r3, #0
 8003464:	d10a      	bne.n	800347c <UART_Receive_IT+0x82>
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	691b      	ldr	r3, [r3, #16]
 800346a:	2b00      	cmp	r3, #0
 800346c:	d106      	bne.n	800347c <UART_Receive_IT+0x82>
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	685b      	ldr	r3, [r3, #4]
 8003474:	b2da      	uxtb	r2, r3
 8003476:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003478:	701a      	strb	r2, [r3, #0]
 800347a:	e008      	b.n	800348e <UART_Receive_IT+0x94>
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	681b      	ldr	r3, [r3, #0]
 8003480:	685b      	ldr	r3, [r3, #4]
 8003482:	b2db      	uxtb	r3, r3
 8003484:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003488:	b2da      	uxtb	r2, r3
 800348a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800348c:	701a      	strb	r2, [r3, #0]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003492:	1c5a      	adds	r2, r3, #1
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	629a      	str	r2, [r3, #40]	; 0x28
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800349c:	b29b      	uxth	r3, r3
 800349e:	3b01      	subs	r3, #1
 80034a0:	b29b      	uxth	r3, r3
 80034a2:	687a      	ldr	r2, [r7, #4]
 80034a4:	4619      	mov	r1, r3
 80034a6:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80034a8:	2b00      	cmp	r3, #0
 80034aa:	d15a      	bne.n	8003562 <UART_Receive_IT+0x168>
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	68da      	ldr	r2, [r3, #12]
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	f022 0220 	bic.w	r2, r2, #32
 80034ba:	60da      	str	r2, [r3, #12]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	68da      	ldr	r2, [r3, #12]
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	681b      	ldr	r3, [r3, #0]
 80034c6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80034ca:	60da      	str	r2, [r3, #12]
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	695a      	ldr	r2, [r3, #20]
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	f022 0201 	bic.w	r2, r2, #1
 80034da:	615a      	str	r2, [r3, #20]
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	2220      	movs	r2, #32
 80034e0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034e8:	2b01      	cmp	r3, #1
 80034ea:	d135      	bne.n	8003558 <UART_Receive_IT+0x15e>
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	2200      	movs	r2, #0
 80034f0:	631a      	str	r2, [r3, #48]	; 0x30
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	330c      	adds	r3, #12
 80034f8:	617b      	str	r3, [r7, #20]
 80034fa:	697b      	ldr	r3, [r7, #20]
 80034fc:	e853 3f00 	ldrex	r3, [r3]
 8003500:	613b      	str	r3, [r7, #16]
 8003502:	693b      	ldr	r3, [r7, #16]
 8003504:	f023 0310 	bic.w	r3, r3, #16
 8003508:	627b      	str	r3, [r7, #36]	; 0x24
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	681b      	ldr	r3, [r3, #0]
 800350e:	330c      	adds	r3, #12
 8003510:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003512:	623a      	str	r2, [r7, #32]
 8003514:	61fb      	str	r3, [r7, #28]
 8003516:	69f9      	ldr	r1, [r7, #28]
 8003518:	6a3a      	ldr	r2, [r7, #32]
 800351a:	e841 2300 	strex	r3, r2, [r1]
 800351e:	61bb      	str	r3, [r7, #24]
 8003520:	69bb      	ldr	r3, [r7, #24]
 8003522:	2b00      	cmp	r3, #0
 8003524:	d1e5      	bne.n	80034f2 <UART_Receive_IT+0xf8>
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	f003 0310 	and.w	r3, r3, #16
 8003530:	2b10      	cmp	r3, #16
 8003532:	d10a      	bne.n	800354a <UART_Receive_IT+0x150>
 8003534:	2300      	movs	r3, #0
 8003536:	60fb      	str	r3, [r7, #12]
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	60fb      	str	r3, [r7, #12]
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	685b      	ldr	r3, [r3, #4]
 8003546:	60fb      	str	r3, [r7, #12]
 8003548:	68fb      	ldr	r3, [r7, #12]
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800354e:	4619      	mov	r1, r3
 8003550:	6878      	ldr	r0, [r7, #4]
 8003552:	f7ff fdbb 	bl	80030cc <HAL_UARTEx_RxEventCallback>
 8003556:	e002      	b.n	800355e <UART_Receive_IT+0x164>
 8003558:	6878      	ldr	r0, [r7, #4]
 800355a:	f7ff fda3 	bl	80030a4 <HAL_UART_RxCpltCallback>
 800355e:	2300      	movs	r3, #0
 8003560:	e002      	b.n	8003568 <UART_Receive_IT+0x16e>
 8003562:	2300      	movs	r3, #0
 8003564:	e000      	b.n	8003568 <UART_Receive_IT+0x16e>
 8003566:	2302      	movs	r3, #2
 8003568:	4618      	mov	r0, r3
 800356a:	3730      	adds	r7, #48	; 0x30
 800356c:	46bd      	mov	sp, r7
 800356e:	bd80      	pop	{r7, pc}

08003570 <UART_SetConfig>:
 8003570:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003574:	b0c0      	sub	sp, #256	; 0x100
 8003576:	af00      	add	r7, sp, #0
 8003578:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800357c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	691b      	ldr	r3, [r3, #16]
 8003584:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8003588:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800358c:	68d9      	ldr	r1, [r3, #12]
 800358e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003592:	681a      	ldr	r2, [r3, #0]
 8003594:	ea40 0301 	orr.w	r3, r0, r1
 8003598:	6113      	str	r3, [r2, #16]
 800359a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800359e:	689a      	ldr	r2, [r3, #8]
 80035a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035a4:	691b      	ldr	r3, [r3, #16]
 80035a6:	431a      	orrs	r2, r3
 80035a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035ac:	695b      	ldr	r3, [r3, #20]
 80035ae:	431a      	orrs	r2, r3
 80035b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035b4:	69db      	ldr	r3, [r3, #28]
 80035b6:	4313      	orrs	r3, r2
 80035b8:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80035bc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	68db      	ldr	r3, [r3, #12]
 80035c4:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 80035c8:	f021 010c 	bic.w	r1, r1, #12
 80035cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035d0:	681a      	ldr	r2, [r3, #0]
 80035d2:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80035d6:	430b      	orrs	r3, r1
 80035d8:	60d3      	str	r3, [r2, #12]
 80035da:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	695b      	ldr	r3, [r3, #20]
 80035e2:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 80035e6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035ea:	6999      	ldr	r1, [r3, #24]
 80035ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035f0:	681a      	ldr	r2, [r3, #0]
 80035f2:	ea40 0301 	orr.w	r3, r0, r1
 80035f6:	6153      	str	r3, [r2, #20]
 80035f8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80035fc:	681a      	ldr	r2, [r3, #0]
 80035fe:	4b8f      	ldr	r3, [pc, #572]	; (800383c <UART_SetConfig+0x2cc>)
 8003600:	429a      	cmp	r2, r3
 8003602:	d005      	beq.n	8003610 <UART_SetConfig+0xa0>
 8003604:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003608:	681a      	ldr	r2, [r3, #0]
 800360a:	4b8d      	ldr	r3, [pc, #564]	; (8003840 <UART_SetConfig+0x2d0>)
 800360c:	429a      	cmp	r2, r3
 800360e:	d104      	bne.n	800361a <UART_SetConfig+0xaa>
 8003610:	f7ff f958 	bl	80028c4 <HAL_RCC_GetPCLK2Freq>
 8003614:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8003618:	e003      	b.n	8003622 <UART_SetConfig+0xb2>
 800361a:	f7ff f93f 	bl	800289c <HAL_RCC_GetPCLK1Freq>
 800361e:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8003622:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003626:	69db      	ldr	r3, [r3, #28]
 8003628:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800362c:	f040 810c 	bne.w	8003848 <UART_SetConfig+0x2d8>
 8003630:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003634:	2200      	movs	r2, #0
 8003636:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800363a:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800363e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8003642:	4622      	mov	r2, r4
 8003644:	462b      	mov	r3, r5
 8003646:	1891      	adds	r1, r2, r2
 8003648:	65b9      	str	r1, [r7, #88]	; 0x58
 800364a:	415b      	adcs	r3, r3
 800364c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800364e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8003652:	4621      	mov	r1, r4
 8003654:	eb12 0801 	adds.w	r8, r2, r1
 8003658:	4629      	mov	r1, r5
 800365a:	eb43 0901 	adc.w	r9, r3, r1
 800365e:	f04f 0200 	mov.w	r2, #0
 8003662:	f04f 0300 	mov.w	r3, #0
 8003666:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800366a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800366e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003672:	4690      	mov	r8, r2
 8003674:	4699      	mov	r9, r3
 8003676:	4623      	mov	r3, r4
 8003678:	eb18 0303 	adds.w	r3, r8, r3
 800367c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003680:	462b      	mov	r3, r5
 8003682:	eb49 0303 	adc.w	r3, r9, r3
 8003686:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800368a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800368e:	685b      	ldr	r3, [r3, #4]
 8003690:	2200      	movs	r2, #0
 8003692:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003696:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800369a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800369e:	460b      	mov	r3, r1
 80036a0:	18db      	adds	r3, r3, r3
 80036a2:	653b      	str	r3, [r7, #80]	; 0x50
 80036a4:	4613      	mov	r3, r2
 80036a6:	eb42 0303 	adc.w	r3, r2, r3
 80036aa:	657b      	str	r3, [r7, #84]	; 0x54
 80036ac:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80036b0:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 80036b4:	f7fc fde4 	bl	8000280 <__aeabi_uldivmod>
 80036b8:	4602      	mov	r2, r0
 80036ba:	460b      	mov	r3, r1
 80036bc:	4b61      	ldr	r3, [pc, #388]	; (8003844 <UART_SetConfig+0x2d4>)
 80036be:	fba3 2302 	umull	r2, r3, r3, r2
 80036c2:	095b      	lsrs	r3, r3, #5
 80036c4:	011c      	lsls	r4, r3, #4
 80036c6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80036ca:	2200      	movs	r2, #0
 80036cc:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80036d0:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80036d4:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 80036d8:	4642      	mov	r2, r8
 80036da:	464b      	mov	r3, r9
 80036dc:	1891      	adds	r1, r2, r2
 80036de:	64b9      	str	r1, [r7, #72]	; 0x48
 80036e0:	415b      	adcs	r3, r3
 80036e2:	64fb      	str	r3, [r7, #76]	; 0x4c
 80036e4:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80036e8:	4641      	mov	r1, r8
 80036ea:	eb12 0a01 	adds.w	sl, r2, r1
 80036ee:	4649      	mov	r1, r9
 80036f0:	eb43 0b01 	adc.w	fp, r3, r1
 80036f4:	f04f 0200 	mov.w	r2, #0
 80036f8:	f04f 0300 	mov.w	r3, #0
 80036fc:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8003700:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003704:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003708:	4692      	mov	sl, r2
 800370a:	469b      	mov	fp, r3
 800370c:	4643      	mov	r3, r8
 800370e:	eb1a 0303 	adds.w	r3, sl, r3
 8003712:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8003716:	464b      	mov	r3, r9
 8003718:	eb4b 0303 	adc.w	r3, fp, r3
 800371c:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8003720:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003724:	685b      	ldr	r3, [r3, #4]
 8003726:	2200      	movs	r2, #0
 8003728:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800372c:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8003730:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8003734:	460b      	mov	r3, r1
 8003736:	18db      	adds	r3, r3, r3
 8003738:	643b      	str	r3, [r7, #64]	; 0x40
 800373a:	4613      	mov	r3, r2
 800373c:	eb42 0303 	adc.w	r3, r2, r3
 8003740:	647b      	str	r3, [r7, #68]	; 0x44
 8003742:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8003746:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800374a:	f7fc fd99 	bl	8000280 <__aeabi_uldivmod>
 800374e:	4602      	mov	r2, r0
 8003750:	460b      	mov	r3, r1
 8003752:	4611      	mov	r1, r2
 8003754:	4b3b      	ldr	r3, [pc, #236]	; (8003844 <UART_SetConfig+0x2d4>)
 8003756:	fba3 2301 	umull	r2, r3, r3, r1
 800375a:	095b      	lsrs	r3, r3, #5
 800375c:	2264      	movs	r2, #100	; 0x64
 800375e:	fb02 f303 	mul.w	r3, r2, r3
 8003762:	1acb      	subs	r3, r1, r3
 8003764:	00db      	lsls	r3, r3, #3
 8003766:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800376a:	4b36      	ldr	r3, [pc, #216]	; (8003844 <UART_SetConfig+0x2d4>)
 800376c:	fba3 2302 	umull	r2, r3, r3, r2
 8003770:	095b      	lsrs	r3, r3, #5
 8003772:	005b      	lsls	r3, r3, #1
 8003774:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8003778:	441c      	add	r4, r3
 800377a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800377e:	2200      	movs	r2, #0
 8003780:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003784:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8003788:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800378c:	4642      	mov	r2, r8
 800378e:	464b      	mov	r3, r9
 8003790:	1891      	adds	r1, r2, r2
 8003792:	63b9      	str	r1, [r7, #56]	; 0x38
 8003794:	415b      	adcs	r3, r3
 8003796:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003798:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800379c:	4641      	mov	r1, r8
 800379e:	1851      	adds	r1, r2, r1
 80037a0:	6339      	str	r1, [r7, #48]	; 0x30
 80037a2:	4649      	mov	r1, r9
 80037a4:	414b      	adcs	r3, r1
 80037a6:	637b      	str	r3, [r7, #52]	; 0x34
 80037a8:	f04f 0200 	mov.w	r2, #0
 80037ac:	f04f 0300 	mov.w	r3, #0
 80037b0:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 80037b4:	4659      	mov	r1, fp
 80037b6:	00cb      	lsls	r3, r1, #3
 80037b8:	4651      	mov	r1, sl
 80037ba:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80037be:	4651      	mov	r1, sl
 80037c0:	00ca      	lsls	r2, r1, #3
 80037c2:	4610      	mov	r0, r2
 80037c4:	4619      	mov	r1, r3
 80037c6:	4603      	mov	r3, r0
 80037c8:	4642      	mov	r2, r8
 80037ca:	189b      	adds	r3, r3, r2
 80037cc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80037d0:	464b      	mov	r3, r9
 80037d2:	460a      	mov	r2, r1
 80037d4:	eb42 0303 	adc.w	r3, r2, r3
 80037d8:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80037dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80037e0:	685b      	ldr	r3, [r3, #4]
 80037e2:	2200      	movs	r2, #0
 80037e4:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80037e8:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 80037ec:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 80037f0:	460b      	mov	r3, r1
 80037f2:	18db      	adds	r3, r3, r3
 80037f4:	62bb      	str	r3, [r7, #40]	; 0x28
 80037f6:	4613      	mov	r3, r2
 80037f8:	eb42 0303 	adc.w	r3, r2, r3
 80037fc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037fe:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003802:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8003806:	f7fc fd3b 	bl	8000280 <__aeabi_uldivmod>
 800380a:	4602      	mov	r2, r0
 800380c:	460b      	mov	r3, r1
 800380e:	4b0d      	ldr	r3, [pc, #52]	; (8003844 <UART_SetConfig+0x2d4>)
 8003810:	fba3 1302 	umull	r1, r3, r3, r2
 8003814:	095b      	lsrs	r3, r3, #5
 8003816:	2164      	movs	r1, #100	; 0x64
 8003818:	fb01 f303 	mul.w	r3, r1, r3
 800381c:	1ad3      	subs	r3, r2, r3
 800381e:	00db      	lsls	r3, r3, #3
 8003820:	3332      	adds	r3, #50	; 0x32
 8003822:	4a08      	ldr	r2, [pc, #32]	; (8003844 <UART_SetConfig+0x2d4>)
 8003824:	fba2 2303 	umull	r2, r3, r2, r3
 8003828:	095b      	lsrs	r3, r3, #5
 800382a:	f003 0207 	and.w	r2, r3, #7
 800382e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	4422      	add	r2, r4
 8003836:	609a      	str	r2, [r3, #8]
 8003838:	e106      	b.n	8003a48 <UART_SetConfig+0x4d8>
 800383a:	bf00      	nop
 800383c:	40011000 	.word	0x40011000
 8003840:	40011400 	.word	0x40011400
 8003844:	51eb851f 	.word	0x51eb851f
 8003848:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800384c:	2200      	movs	r2, #0
 800384e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8003852:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8003856:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800385a:	4642      	mov	r2, r8
 800385c:	464b      	mov	r3, r9
 800385e:	1891      	adds	r1, r2, r2
 8003860:	6239      	str	r1, [r7, #32]
 8003862:	415b      	adcs	r3, r3
 8003864:	627b      	str	r3, [r7, #36]	; 0x24
 8003866:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800386a:	4641      	mov	r1, r8
 800386c:	1854      	adds	r4, r2, r1
 800386e:	4649      	mov	r1, r9
 8003870:	eb43 0501 	adc.w	r5, r3, r1
 8003874:	f04f 0200 	mov.w	r2, #0
 8003878:	f04f 0300 	mov.w	r3, #0
 800387c:	00eb      	lsls	r3, r5, #3
 800387e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003882:	00e2      	lsls	r2, r4, #3
 8003884:	4614      	mov	r4, r2
 8003886:	461d      	mov	r5, r3
 8003888:	4643      	mov	r3, r8
 800388a:	18e3      	adds	r3, r4, r3
 800388c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8003890:	464b      	mov	r3, r9
 8003892:	eb45 0303 	adc.w	r3, r5, r3
 8003896:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800389a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800389e:	685b      	ldr	r3, [r3, #4]
 80038a0:	2200      	movs	r2, #0
 80038a2:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80038a6:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80038aa:	f04f 0200 	mov.w	r2, #0
 80038ae:	f04f 0300 	mov.w	r3, #0
 80038b2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 80038b6:	4629      	mov	r1, r5
 80038b8:	008b      	lsls	r3, r1, #2
 80038ba:	4621      	mov	r1, r4
 80038bc:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80038c0:	4621      	mov	r1, r4
 80038c2:	008a      	lsls	r2, r1, #2
 80038c4:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 80038c8:	f7fc fcda 	bl	8000280 <__aeabi_uldivmod>
 80038cc:	4602      	mov	r2, r0
 80038ce:	460b      	mov	r3, r1
 80038d0:	4b60      	ldr	r3, [pc, #384]	; (8003a54 <UART_SetConfig+0x4e4>)
 80038d2:	fba3 2302 	umull	r2, r3, r3, r2
 80038d6:	095b      	lsrs	r3, r3, #5
 80038d8:	011c      	lsls	r4, r3, #4
 80038da:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80038de:	2200      	movs	r2, #0
 80038e0:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80038e4:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80038e8:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 80038ec:	4642      	mov	r2, r8
 80038ee:	464b      	mov	r3, r9
 80038f0:	1891      	adds	r1, r2, r2
 80038f2:	61b9      	str	r1, [r7, #24]
 80038f4:	415b      	adcs	r3, r3
 80038f6:	61fb      	str	r3, [r7, #28]
 80038f8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80038fc:	4641      	mov	r1, r8
 80038fe:	1851      	adds	r1, r2, r1
 8003900:	6139      	str	r1, [r7, #16]
 8003902:	4649      	mov	r1, r9
 8003904:	414b      	adcs	r3, r1
 8003906:	617b      	str	r3, [r7, #20]
 8003908:	f04f 0200 	mov.w	r2, #0
 800390c:	f04f 0300 	mov.w	r3, #0
 8003910:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003914:	4659      	mov	r1, fp
 8003916:	00cb      	lsls	r3, r1, #3
 8003918:	4651      	mov	r1, sl
 800391a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800391e:	4651      	mov	r1, sl
 8003920:	00ca      	lsls	r2, r1, #3
 8003922:	4610      	mov	r0, r2
 8003924:	4619      	mov	r1, r3
 8003926:	4603      	mov	r3, r0
 8003928:	4642      	mov	r2, r8
 800392a:	189b      	adds	r3, r3, r2
 800392c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8003930:	464b      	mov	r3, r9
 8003932:	460a      	mov	r2, r1
 8003934:	eb42 0303 	adc.w	r3, r2, r3
 8003938:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800393c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003940:	685b      	ldr	r3, [r3, #4]
 8003942:	2200      	movs	r2, #0
 8003944:	67bb      	str	r3, [r7, #120]	; 0x78
 8003946:	67fa      	str	r2, [r7, #124]	; 0x7c
 8003948:	f04f 0200 	mov.w	r2, #0
 800394c:	f04f 0300 	mov.w	r3, #0
 8003950:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8003954:	4649      	mov	r1, r9
 8003956:	008b      	lsls	r3, r1, #2
 8003958:	4641      	mov	r1, r8
 800395a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800395e:	4641      	mov	r1, r8
 8003960:	008a      	lsls	r2, r1, #2
 8003962:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8003966:	f7fc fc8b 	bl	8000280 <__aeabi_uldivmod>
 800396a:	4602      	mov	r2, r0
 800396c:	460b      	mov	r3, r1
 800396e:	4611      	mov	r1, r2
 8003970:	4b38      	ldr	r3, [pc, #224]	; (8003a54 <UART_SetConfig+0x4e4>)
 8003972:	fba3 2301 	umull	r2, r3, r3, r1
 8003976:	095b      	lsrs	r3, r3, #5
 8003978:	2264      	movs	r2, #100	; 0x64
 800397a:	fb02 f303 	mul.w	r3, r2, r3
 800397e:	1acb      	subs	r3, r1, r3
 8003980:	011b      	lsls	r3, r3, #4
 8003982:	3332      	adds	r3, #50	; 0x32
 8003984:	4a33      	ldr	r2, [pc, #204]	; (8003a54 <UART_SetConfig+0x4e4>)
 8003986:	fba2 2303 	umull	r2, r3, r2, r3
 800398a:	095b      	lsrs	r3, r3, #5
 800398c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003990:	441c      	add	r4, r3
 8003992:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003996:	2200      	movs	r2, #0
 8003998:	673b      	str	r3, [r7, #112]	; 0x70
 800399a:	677a      	str	r2, [r7, #116]	; 0x74
 800399c:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 80039a0:	4642      	mov	r2, r8
 80039a2:	464b      	mov	r3, r9
 80039a4:	1891      	adds	r1, r2, r2
 80039a6:	60b9      	str	r1, [r7, #8]
 80039a8:	415b      	adcs	r3, r3
 80039aa:	60fb      	str	r3, [r7, #12]
 80039ac:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80039b0:	4641      	mov	r1, r8
 80039b2:	1851      	adds	r1, r2, r1
 80039b4:	6039      	str	r1, [r7, #0]
 80039b6:	4649      	mov	r1, r9
 80039b8:	414b      	adcs	r3, r1
 80039ba:	607b      	str	r3, [r7, #4]
 80039bc:	f04f 0200 	mov.w	r2, #0
 80039c0:	f04f 0300 	mov.w	r3, #0
 80039c4:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80039c8:	4659      	mov	r1, fp
 80039ca:	00cb      	lsls	r3, r1, #3
 80039cc:	4651      	mov	r1, sl
 80039ce:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80039d2:	4651      	mov	r1, sl
 80039d4:	00ca      	lsls	r2, r1, #3
 80039d6:	4610      	mov	r0, r2
 80039d8:	4619      	mov	r1, r3
 80039da:	4603      	mov	r3, r0
 80039dc:	4642      	mov	r2, r8
 80039de:	189b      	adds	r3, r3, r2
 80039e0:	66bb      	str	r3, [r7, #104]	; 0x68
 80039e2:	464b      	mov	r3, r9
 80039e4:	460a      	mov	r2, r1
 80039e6:	eb42 0303 	adc.w	r3, r2, r3
 80039ea:	66fb      	str	r3, [r7, #108]	; 0x6c
 80039ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80039f0:	685b      	ldr	r3, [r3, #4]
 80039f2:	2200      	movs	r2, #0
 80039f4:	663b      	str	r3, [r7, #96]	; 0x60
 80039f6:	667a      	str	r2, [r7, #100]	; 0x64
 80039f8:	f04f 0200 	mov.w	r2, #0
 80039fc:	f04f 0300 	mov.w	r3, #0
 8003a00:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8003a04:	4649      	mov	r1, r9
 8003a06:	008b      	lsls	r3, r1, #2
 8003a08:	4641      	mov	r1, r8
 8003a0a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003a0e:	4641      	mov	r1, r8
 8003a10:	008a      	lsls	r2, r1, #2
 8003a12:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8003a16:	f7fc fc33 	bl	8000280 <__aeabi_uldivmod>
 8003a1a:	4602      	mov	r2, r0
 8003a1c:	460b      	mov	r3, r1
 8003a1e:	4b0d      	ldr	r3, [pc, #52]	; (8003a54 <UART_SetConfig+0x4e4>)
 8003a20:	fba3 1302 	umull	r1, r3, r3, r2
 8003a24:	095b      	lsrs	r3, r3, #5
 8003a26:	2164      	movs	r1, #100	; 0x64
 8003a28:	fb01 f303 	mul.w	r3, r1, r3
 8003a2c:	1ad3      	subs	r3, r2, r3
 8003a2e:	011b      	lsls	r3, r3, #4
 8003a30:	3332      	adds	r3, #50	; 0x32
 8003a32:	4a08      	ldr	r2, [pc, #32]	; (8003a54 <UART_SetConfig+0x4e4>)
 8003a34:	fba2 2303 	umull	r2, r3, r2, r3
 8003a38:	095b      	lsrs	r3, r3, #5
 8003a3a:	f003 020f 	and.w	r2, r3, #15
 8003a3e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	4422      	add	r2, r4
 8003a46:	609a      	str	r2, [r3, #8]
 8003a48:	bf00      	nop
 8003a4a:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8003a4e:	46bd      	mov	sp, r7
 8003a50:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003a54:	51eb851f 	.word	0x51eb851f

08003a58 <__NVIC_SetPriority>:
 8003a58:	b480      	push	{r7}
 8003a5a:	b083      	sub	sp, #12
 8003a5c:	af00      	add	r7, sp, #0
 8003a5e:	4603      	mov	r3, r0
 8003a60:	6039      	str	r1, [r7, #0]
 8003a62:	71fb      	strb	r3, [r7, #7]
 8003a64:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	db0a      	blt.n	8003a82 <__NVIC_SetPriority+0x2a>
 8003a6c:	683b      	ldr	r3, [r7, #0]
 8003a6e:	b2da      	uxtb	r2, r3
 8003a70:	490c      	ldr	r1, [pc, #48]	; (8003aa4 <__NVIC_SetPriority+0x4c>)
 8003a72:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003a76:	0112      	lsls	r2, r2, #4
 8003a78:	b2d2      	uxtb	r2, r2
 8003a7a:	440b      	add	r3, r1
 8003a7c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003a80:	e00a      	b.n	8003a98 <__NVIC_SetPriority+0x40>
 8003a82:	683b      	ldr	r3, [r7, #0]
 8003a84:	b2da      	uxtb	r2, r3
 8003a86:	4908      	ldr	r1, [pc, #32]	; (8003aa8 <__NVIC_SetPriority+0x50>)
 8003a88:	79fb      	ldrb	r3, [r7, #7]
 8003a8a:	f003 030f 	and.w	r3, r3, #15
 8003a8e:	3b04      	subs	r3, #4
 8003a90:	0112      	lsls	r2, r2, #4
 8003a92:	b2d2      	uxtb	r2, r2
 8003a94:	440b      	add	r3, r1
 8003a96:	761a      	strb	r2, [r3, #24]
 8003a98:	bf00      	nop
 8003a9a:	370c      	adds	r7, #12
 8003a9c:	46bd      	mov	sp, r7
 8003a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa2:	4770      	bx	lr
 8003aa4:	e000e100 	.word	0xe000e100
 8003aa8:	e000ed00 	.word	0xe000ed00

08003aac <SVC_Setup>:
 8003aac:	b580      	push	{r7, lr}
 8003aae:	af00      	add	r7, sp, #0
 8003ab0:	2100      	movs	r1, #0
 8003ab2:	f06f 0004 	mvn.w	r0, #4
 8003ab6:	f7ff ffcf 	bl	8003a58 <__NVIC_SetPriority>
 8003aba:	bf00      	nop
 8003abc:	bd80      	pop	{r7, pc}
	...

08003ac0 <osKernelInitialize>:
 8003ac0:	b480      	push	{r7}
 8003ac2:	b083      	sub	sp, #12
 8003ac4:	af00      	add	r7, sp, #0
 8003ac6:	f3ef 8305 	mrs	r3, IPSR
 8003aca:	603b      	str	r3, [r7, #0]
 8003acc:	683b      	ldr	r3, [r7, #0]
 8003ace:	2b00      	cmp	r3, #0
 8003ad0:	d003      	beq.n	8003ada <osKernelInitialize+0x1a>
 8003ad2:	f06f 0305 	mvn.w	r3, #5
 8003ad6:	607b      	str	r3, [r7, #4]
 8003ad8:	e00c      	b.n	8003af4 <osKernelInitialize+0x34>
 8003ada:	4b0a      	ldr	r3, [pc, #40]	; (8003b04 <osKernelInitialize+0x44>)
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d105      	bne.n	8003aee <osKernelInitialize+0x2e>
 8003ae2:	4b08      	ldr	r3, [pc, #32]	; (8003b04 <osKernelInitialize+0x44>)
 8003ae4:	2201      	movs	r2, #1
 8003ae6:	601a      	str	r2, [r3, #0]
 8003ae8:	2300      	movs	r3, #0
 8003aea:	607b      	str	r3, [r7, #4]
 8003aec:	e002      	b.n	8003af4 <osKernelInitialize+0x34>
 8003aee:	f04f 33ff 	mov.w	r3, #4294967295
 8003af2:	607b      	str	r3, [r7, #4]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	4618      	mov	r0, r3
 8003af8:	370c      	adds	r7, #12
 8003afa:	46bd      	mov	sp, r7
 8003afc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b00:	4770      	bx	lr
 8003b02:	bf00      	nop
 8003b04:	200003a4 	.word	0x200003a4

08003b08 <osKernelStart>:
 8003b08:	b580      	push	{r7, lr}
 8003b0a:	b082      	sub	sp, #8
 8003b0c:	af00      	add	r7, sp, #0
 8003b0e:	f3ef 8305 	mrs	r3, IPSR
 8003b12:	603b      	str	r3, [r7, #0]
 8003b14:	683b      	ldr	r3, [r7, #0]
 8003b16:	2b00      	cmp	r3, #0
 8003b18:	d003      	beq.n	8003b22 <osKernelStart+0x1a>
 8003b1a:	f06f 0305 	mvn.w	r3, #5
 8003b1e:	607b      	str	r3, [r7, #4]
 8003b20:	e010      	b.n	8003b44 <osKernelStart+0x3c>
 8003b22:	4b0b      	ldr	r3, [pc, #44]	; (8003b50 <osKernelStart+0x48>)
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	2b01      	cmp	r3, #1
 8003b28:	d109      	bne.n	8003b3e <osKernelStart+0x36>
 8003b2a:	f7ff ffbf 	bl	8003aac <SVC_Setup>
 8003b2e:	4b08      	ldr	r3, [pc, #32]	; (8003b50 <osKernelStart+0x48>)
 8003b30:	2202      	movs	r2, #2
 8003b32:	601a      	str	r2, [r3, #0]
 8003b34:	f001 f946 	bl	8004dc4 <vTaskStartScheduler>
 8003b38:	2300      	movs	r3, #0
 8003b3a:	607b      	str	r3, [r7, #4]
 8003b3c:	e002      	b.n	8003b44 <osKernelStart+0x3c>
 8003b3e:	f04f 33ff 	mov.w	r3, #4294967295
 8003b42:	607b      	str	r3, [r7, #4]
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	4618      	mov	r0, r3
 8003b48:	3708      	adds	r7, #8
 8003b4a:	46bd      	mov	sp, r7
 8003b4c:	bd80      	pop	{r7, pc}
 8003b4e:	bf00      	nop
 8003b50:	200003a4 	.word	0x200003a4

08003b54 <osThreadNew>:
 8003b54:	b580      	push	{r7, lr}
 8003b56:	b08e      	sub	sp, #56	; 0x38
 8003b58:	af04      	add	r7, sp, #16
 8003b5a:	60f8      	str	r0, [r7, #12]
 8003b5c:	60b9      	str	r1, [r7, #8]
 8003b5e:	607a      	str	r2, [r7, #4]
 8003b60:	2300      	movs	r3, #0
 8003b62:	613b      	str	r3, [r7, #16]
 8003b64:	f3ef 8305 	mrs	r3, IPSR
 8003b68:	617b      	str	r3, [r7, #20]
 8003b6a:	697b      	ldr	r3, [r7, #20]
 8003b6c:	2b00      	cmp	r3, #0
 8003b6e:	d17e      	bne.n	8003c6e <osThreadNew+0x11a>
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d07b      	beq.n	8003c6e <osThreadNew+0x11a>
 8003b76:	2380      	movs	r3, #128	; 0x80
 8003b78:	623b      	str	r3, [r7, #32]
 8003b7a:	2318      	movs	r3, #24
 8003b7c:	61fb      	str	r3, [r7, #28]
 8003b7e:	2300      	movs	r3, #0
 8003b80:	627b      	str	r3, [r7, #36]	; 0x24
 8003b82:	f04f 33ff 	mov.w	r3, #4294967295
 8003b86:	61bb      	str	r3, [r7, #24]
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d045      	beq.n	8003c1a <osThreadNew+0xc6>
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	2b00      	cmp	r3, #0
 8003b94:	d002      	beq.n	8003b9c <osThreadNew+0x48>
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	627b      	str	r3, [r7, #36]	; 0x24
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	699b      	ldr	r3, [r3, #24]
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	d002      	beq.n	8003baa <osThreadNew+0x56>
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	699b      	ldr	r3, [r3, #24]
 8003ba8:	61fb      	str	r3, [r7, #28]
 8003baa:	69fb      	ldr	r3, [r7, #28]
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d008      	beq.n	8003bc2 <osThreadNew+0x6e>
 8003bb0:	69fb      	ldr	r3, [r7, #28]
 8003bb2:	2b38      	cmp	r3, #56	; 0x38
 8003bb4:	d805      	bhi.n	8003bc2 <osThreadNew+0x6e>
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	685b      	ldr	r3, [r3, #4]
 8003bba:	f003 0301 	and.w	r3, r3, #1
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d001      	beq.n	8003bc6 <osThreadNew+0x72>
 8003bc2:	2300      	movs	r3, #0
 8003bc4:	e054      	b.n	8003c70 <osThreadNew+0x11c>
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	695b      	ldr	r3, [r3, #20]
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d003      	beq.n	8003bd6 <osThreadNew+0x82>
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	695b      	ldr	r3, [r3, #20]
 8003bd2:	089b      	lsrs	r3, r3, #2
 8003bd4:	623b      	str	r3, [r7, #32]
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	689b      	ldr	r3, [r3, #8]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d00e      	beq.n	8003bfc <osThreadNew+0xa8>
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	68db      	ldr	r3, [r3, #12]
 8003be2:	2ba7      	cmp	r3, #167	; 0xa7
 8003be4:	d90a      	bls.n	8003bfc <osThreadNew+0xa8>
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	691b      	ldr	r3, [r3, #16]
 8003bea:	2b00      	cmp	r3, #0
 8003bec:	d006      	beq.n	8003bfc <osThreadNew+0xa8>
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	695b      	ldr	r3, [r3, #20]
 8003bf2:	2b00      	cmp	r3, #0
 8003bf4:	d002      	beq.n	8003bfc <osThreadNew+0xa8>
 8003bf6:	2301      	movs	r3, #1
 8003bf8:	61bb      	str	r3, [r7, #24]
 8003bfa:	e010      	b.n	8003c1e <osThreadNew+0xca>
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	689b      	ldr	r3, [r3, #8]
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d10c      	bne.n	8003c1e <osThreadNew+0xca>
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	68db      	ldr	r3, [r3, #12]
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d108      	bne.n	8003c1e <osThreadNew+0xca>
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	691b      	ldr	r3, [r3, #16]
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d104      	bne.n	8003c1e <osThreadNew+0xca>
 8003c14:	2300      	movs	r3, #0
 8003c16:	61bb      	str	r3, [r7, #24]
 8003c18:	e001      	b.n	8003c1e <osThreadNew+0xca>
 8003c1a:	2300      	movs	r3, #0
 8003c1c:	61bb      	str	r3, [r7, #24]
 8003c1e:	69bb      	ldr	r3, [r7, #24]
 8003c20:	2b01      	cmp	r3, #1
 8003c22:	d110      	bne.n	8003c46 <osThreadNew+0xf2>
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	691b      	ldr	r3, [r3, #16]
 8003c28:	687a      	ldr	r2, [r7, #4]
 8003c2a:	6892      	ldr	r2, [r2, #8]
 8003c2c:	9202      	str	r2, [sp, #8]
 8003c2e:	9301      	str	r3, [sp, #4]
 8003c30:	69fb      	ldr	r3, [r7, #28]
 8003c32:	9300      	str	r3, [sp, #0]
 8003c34:	68bb      	ldr	r3, [r7, #8]
 8003c36:	6a3a      	ldr	r2, [r7, #32]
 8003c38:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8003c3a:	68f8      	ldr	r0, [r7, #12]
 8003c3c:	f000 fed6 	bl	80049ec <xTaskCreateStatic>
 8003c40:	4603      	mov	r3, r0
 8003c42:	613b      	str	r3, [r7, #16]
 8003c44:	e013      	b.n	8003c6e <osThreadNew+0x11a>
 8003c46:	69bb      	ldr	r3, [r7, #24]
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	d110      	bne.n	8003c6e <osThreadNew+0x11a>
 8003c4c:	6a3b      	ldr	r3, [r7, #32]
 8003c4e:	b29a      	uxth	r2, r3
 8003c50:	f107 0310 	add.w	r3, r7, #16
 8003c54:	9301      	str	r3, [sp, #4]
 8003c56:	69fb      	ldr	r3, [r7, #28]
 8003c58:	9300      	str	r3, [sp, #0]
 8003c5a:	68bb      	ldr	r3, [r7, #8]
 8003c5c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8003c5e:	68f8      	ldr	r0, [r7, #12]
 8003c60:	f000 ff21 	bl	8004aa6 <xTaskCreate>
 8003c64:	4603      	mov	r3, r0
 8003c66:	2b01      	cmp	r3, #1
 8003c68:	d001      	beq.n	8003c6e <osThreadNew+0x11a>
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	613b      	str	r3, [r7, #16]
 8003c6e:	693b      	ldr	r3, [r7, #16]
 8003c70:	4618      	mov	r0, r3
 8003c72:	3728      	adds	r7, #40	; 0x28
 8003c74:	46bd      	mov	sp, r7
 8003c76:	bd80      	pop	{r7, pc}

08003c78 <osDelay>:
 8003c78:	b580      	push	{r7, lr}
 8003c7a:	b084      	sub	sp, #16
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	6078      	str	r0, [r7, #4]
 8003c80:	f3ef 8305 	mrs	r3, IPSR
 8003c84:	60bb      	str	r3, [r7, #8]
 8003c86:	68bb      	ldr	r3, [r7, #8]
 8003c88:	2b00      	cmp	r3, #0
 8003c8a:	d003      	beq.n	8003c94 <osDelay+0x1c>
 8003c8c:	f06f 0305 	mvn.w	r3, #5
 8003c90:	60fb      	str	r3, [r7, #12]
 8003c92:	e007      	b.n	8003ca4 <osDelay+0x2c>
 8003c94:	2300      	movs	r3, #0
 8003c96:	60fb      	str	r3, [r7, #12]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d002      	beq.n	8003ca4 <osDelay+0x2c>
 8003c9e:	6878      	ldr	r0, [r7, #4]
 8003ca0:	f001 f85c 	bl	8004d5c <vTaskDelay>
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	3710      	adds	r7, #16
 8003caa:	46bd      	mov	sp, r7
 8003cac:	bd80      	pop	{r7, pc}

08003cae <osMessageQueueNew>:
 8003cae:	b580      	push	{r7, lr}
 8003cb0:	b08a      	sub	sp, #40	; 0x28
 8003cb2:	af02      	add	r7, sp, #8
 8003cb4:	60f8      	str	r0, [r7, #12]
 8003cb6:	60b9      	str	r1, [r7, #8]
 8003cb8:	607a      	str	r2, [r7, #4]
 8003cba:	2300      	movs	r3, #0
 8003cbc:	61fb      	str	r3, [r7, #28]
 8003cbe:	f3ef 8305 	mrs	r3, IPSR
 8003cc2:	613b      	str	r3, [r7, #16]
 8003cc4:	693b      	ldr	r3, [r7, #16]
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	d15f      	bne.n	8003d8a <osMessageQueueNew+0xdc>
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	d05c      	beq.n	8003d8a <osMessageQueueNew+0xdc>
 8003cd0:	68bb      	ldr	r3, [r7, #8]
 8003cd2:	2b00      	cmp	r3, #0
 8003cd4:	d059      	beq.n	8003d8a <osMessageQueueNew+0xdc>
 8003cd6:	f04f 33ff 	mov.w	r3, #4294967295
 8003cda:	61bb      	str	r3, [r7, #24]
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d029      	beq.n	8003d36 <osMessageQueueNew+0x88>
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	689b      	ldr	r3, [r3, #8]
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d012      	beq.n	8003d10 <osMessageQueueNew+0x62>
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	68db      	ldr	r3, [r3, #12]
 8003cee:	2b4f      	cmp	r3, #79	; 0x4f
 8003cf0:	d90e      	bls.n	8003d10 <osMessageQueueNew+0x62>
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	691b      	ldr	r3, [r3, #16]
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d00a      	beq.n	8003d10 <osMessageQueueNew+0x62>
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	695a      	ldr	r2, [r3, #20]
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	68b9      	ldr	r1, [r7, #8]
 8003d02:	fb01 f303 	mul.w	r3, r1, r3
 8003d06:	429a      	cmp	r2, r3
 8003d08:	d302      	bcc.n	8003d10 <osMessageQueueNew+0x62>
 8003d0a:	2301      	movs	r3, #1
 8003d0c:	61bb      	str	r3, [r7, #24]
 8003d0e:	e014      	b.n	8003d3a <osMessageQueueNew+0x8c>
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	689b      	ldr	r3, [r3, #8]
 8003d14:	2b00      	cmp	r3, #0
 8003d16:	d110      	bne.n	8003d3a <osMessageQueueNew+0x8c>
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	68db      	ldr	r3, [r3, #12]
 8003d1c:	2b00      	cmp	r3, #0
 8003d1e:	d10c      	bne.n	8003d3a <osMessageQueueNew+0x8c>
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	691b      	ldr	r3, [r3, #16]
 8003d24:	2b00      	cmp	r3, #0
 8003d26:	d108      	bne.n	8003d3a <osMessageQueueNew+0x8c>
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	695b      	ldr	r3, [r3, #20]
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d104      	bne.n	8003d3a <osMessageQueueNew+0x8c>
 8003d30:	2300      	movs	r3, #0
 8003d32:	61bb      	str	r3, [r7, #24]
 8003d34:	e001      	b.n	8003d3a <osMessageQueueNew+0x8c>
 8003d36:	2300      	movs	r3, #0
 8003d38:	61bb      	str	r3, [r7, #24]
 8003d3a:	69bb      	ldr	r3, [r7, #24]
 8003d3c:	2b01      	cmp	r3, #1
 8003d3e:	d10b      	bne.n	8003d58 <osMessageQueueNew+0xaa>
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	691a      	ldr	r2, [r3, #16]
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	689b      	ldr	r3, [r3, #8]
 8003d48:	2100      	movs	r1, #0
 8003d4a:	9100      	str	r1, [sp, #0]
 8003d4c:	68b9      	ldr	r1, [r7, #8]
 8003d4e:	68f8      	ldr	r0, [r7, #12]
 8003d50:	f000 f970 	bl	8004034 <xQueueGenericCreateStatic>
 8003d54:	61f8      	str	r0, [r7, #28]
 8003d56:	e008      	b.n	8003d6a <osMessageQueueNew+0xbc>
 8003d58:	69bb      	ldr	r3, [r7, #24]
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	d105      	bne.n	8003d6a <osMessageQueueNew+0xbc>
 8003d5e:	2200      	movs	r2, #0
 8003d60:	68b9      	ldr	r1, [r7, #8]
 8003d62:	68f8      	ldr	r0, [r7, #12]
 8003d64:	f000 f9de 	bl	8004124 <xQueueGenericCreate>
 8003d68:	61f8      	str	r0, [r7, #28]
 8003d6a:	69fb      	ldr	r3, [r7, #28]
 8003d6c:	2b00      	cmp	r3, #0
 8003d6e:	d00c      	beq.n	8003d8a <osMessageQueueNew+0xdc>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	d003      	beq.n	8003d7e <osMessageQueueNew+0xd0>
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	617b      	str	r3, [r7, #20]
 8003d7c:	e001      	b.n	8003d82 <osMessageQueueNew+0xd4>
 8003d7e:	2300      	movs	r3, #0
 8003d80:	617b      	str	r3, [r7, #20]
 8003d82:	6979      	ldr	r1, [r7, #20]
 8003d84:	69f8      	ldr	r0, [r7, #28]
 8003d86:	f000 fdd3 	bl	8004930 <vQueueAddToRegistry>
 8003d8a:	69fb      	ldr	r3, [r7, #28]
 8003d8c:	4618      	mov	r0, r3
 8003d8e:	3720      	adds	r7, #32
 8003d90:	46bd      	mov	sp, r7
 8003d92:	bd80      	pop	{r7, pc}

08003d94 <vApplicationGetIdleTaskMemory>:
 8003d94:	b480      	push	{r7}
 8003d96:	b085      	sub	sp, #20
 8003d98:	af00      	add	r7, sp, #0
 8003d9a:	60f8      	str	r0, [r7, #12]
 8003d9c:	60b9      	str	r1, [r7, #8]
 8003d9e:	607a      	str	r2, [r7, #4]
 8003da0:	68fb      	ldr	r3, [r7, #12]
 8003da2:	4a07      	ldr	r2, [pc, #28]	; (8003dc0 <vApplicationGetIdleTaskMemory+0x2c>)
 8003da4:	601a      	str	r2, [r3, #0]
 8003da6:	68bb      	ldr	r3, [r7, #8]
 8003da8:	4a06      	ldr	r2, [pc, #24]	; (8003dc4 <vApplicationGetIdleTaskMemory+0x30>)
 8003daa:	601a      	str	r2, [r3, #0]
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	2280      	movs	r2, #128	; 0x80
 8003db0:	601a      	str	r2, [r3, #0]
 8003db2:	bf00      	nop
 8003db4:	3714      	adds	r7, #20
 8003db6:	46bd      	mov	sp, r7
 8003db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dbc:	4770      	bx	lr
 8003dbe:	bf00      	nop
 8003dc0:	200003a8 	.word	0x200003a8
 8003dc4:	20000450 	.word	0x20000450

08003dc8 <vApplicationGetTimerTaskMemory>:
 8003dc8:	b480      	push	{r7}
 8003dca:	b085      	sub	sp, #20
 8003dcc:	af00      	add	r7, sp, #0
 8003dce:	60f8      	str	r0, [r7, #12]
 8003dd0:	60b9      	str	r1, [r7, #8]
 8003dd2:	607a      	str	r2, [r7, #4]
 8003dd4:	68fb      	ldr	r3, [r7, #12]
 8003dd6:	4a07      	ldr	r2, [pc, #28]	; (8003df4 <vApplicationGetTimerTaskMemory+0x2c>)
 8003dd8:	601a      	str	r2, [r3, #0]
 8003dda:	68bb      	ldr	r3, [r7, #8]
 8003ddc:	4a06      	ldr	r2, [pc, #24]	; (8003df8 <vApplicationGetTimerTaskMemory+0x30>)
 8003dde:	601a      	str	r2, [r3, #0]
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003de6:	601a      	str	r2, [r3, #0]
 8003de8:	bf00      	nop
 8003dea:	3714      	adds	r7, #20
 8003dec:	46bd      	mov	sp, r7
 8003dee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003df2:	4770      	bx	lr
 8003df4:	20000650 	.word	0x20000650
 8003df8:	200006f8 	.word	0x200006f8

08003dfc <vListInitialise>:
 8003dfc:	b480      	push	{r7}
 8003dfe:	b083      	sub	sp, #12
 8003e00:	af00      	add	r7, sp, #0
 8003e02:	6078      	str	r0, [r7, #4]
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	f103 0208 	add.w	r2, r3, #8
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	605a      	str	r2, [r3, #4]
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	f04f 32ff 	mov.w	r2, #4294967295
 8003e14:	609a      	str	r2, [r3, #8]
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	f103 0208 	add.w	r2, r3, #8
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	60da      	str	r2, [r3, #12]
 8003e20:	687b      	ldr	r3, [r7, #4]
 8003e22:	f103 0208 	add.w	r2, r3, #8
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	611a      	str	r2, [r3, #16]
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	601a      	str	r2, [r3, #0]
 8003e30:	bf00      	nop
 8003e32:	370c      	adds	r7, #12
 8003e34:	46bd      	mov	sp, r7
 8003e36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e3a:	4770      	bx	lr

08003e3c <vListInitialiseItem>:
 8003e3c:	b480      	push	{r7}
 8003e3e:	b083      	sub	sp, #12
 8003e40:	af00      	add	r7, sp, #0
 8003e42:	6078      	str	r0, [r7, #4]
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	2200      	movs	r2, #0
 8003e48:	611a      	str	r2, [r3, #16]
 8003e4a:	bf00      	nop
 8003e4c:	370c      	adds	r7, #12
 8003e4e:	46bd      	mov	sp, r7
 8003e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e54:	4770      	bx	lr

08003e56 <vListInsertEnd>:
 8003e56:	b480      	push	{r7}
 8003e58:	b085      	sub	sp, #20
 8003e5a:	af00      	add	r7, sp, #0
 8003e5c:	6078      	str	r0, [r7, #4]
 8003e5e:	6039      	str	r1, [r7, #0]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	685b      	ldr	r3, [r3, #4]
 8003e64:	60fb      	str	r3, [r7, #12]
 8003e66:	683b      	ldr	r3, [r7, #0]
 8003e68:	68fa      	ldr	r2, [r7, #12]
 8003e6a:	605a      	str	r2, [r3, #4]
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	689a      	ldr	r2, [r3, #8]
 8003e70:	683b      	ldr	r3, [r7, #0]
 8003e72:	609a      	str	r2, [r3, #8]
 8003e74:	68fb      	ldr	r3, [r7, #12]
 8003e76:	689b      	ldr	r3, [r3, #8]
 8003e78:	683a      	ldr	r2, [r7, #0]
 8003e7a:	605a      	str	r2, [r3, #4]
 8003e7c:	68fb      	ldr	r3, [r7, #12]
 8003e7e:	683a      	ldr	r2, [r7, #0]
 8003e80:	609a      	str	r2, [r3, #8]
 8003e82:	683b      	ldr	r3, [r7, #0]
 8003e84:	687a      	ldr	r2, [r7, #4]
 8003e86:	611a      	str	r2, [r3, #16]
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	1c5a      	adds	r2, r3, #1
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	601a      	str	r2, [r3, #0]
 8003e92:	bf00      	nop
 8003e94:	3714      	adds	r7, #20
 8003e96:	46bd      	mov	sp, r7
 8003e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e9c:	4770      	bx	lr

08003e9e <vListInsert>:
 8003e9e:	b480      	push	{r7}
 8003ea0:	b085      	sub	sp, #20
 8003ea2:	af00      	add	r7, sp, #0
 8003ea4:	6078      	str	r0, [r7, #4]
 8003ea6:	6039      	str	r1, [r7, #0]
 8003ea8:	683b      	ldr	r3, [r7, #0]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	60bb      	str	r3, [r7, #8]
 8003eae:	68bb      	ldr	r3, [r7, #8]
 8003eb0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003eb4:	d103      	bne.n	8003ebe <vListInsert+0x20>
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	691b      	ldr	r3, [r3, #16]
 8003eba:	60fb      	str	r3, [r7, #12]
 8003ebc:	e00c      	b.n	8003ed8 <vListInsert+0x3a>
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	3308      	adds	r3, #8
 8003ec2:	60fb      	str	r3, [r7, #12]
 8003ec4:	e002      	b.n	8003ecc <vListInsert+0x2e>
 8003ec6:	68fb      	ldr	r3, [r7, #12]
 8003ec8:	685b      	ldr	r3, [r3, #4]
 8003eca:	60fb      	str	r3, [r7, #12]
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	685b      	ldr	r3, [r3, #4]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	68ba      	ldr	r2, [r7, #8]
 8003ed4:	429a      	cmp	r2, r3
 8003ed6:	d2f6      	bcs.n	8003ec6 <vListInsert+0x28>
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	685a      	ldr	r2, [r3, #4]
 8003edc:	683b      	ldr	r3, [r7, #0]
 8003ede:	605a      	str	r2, [r3, #4]
 8003ee0:	683b      	ldr	r3, [r7, #0]
 8003ee2:	685b      	ldr	r3, [r3, #4]
 8003ee4:	683a      	ldr	r2, [r7, #0]
 8003ee6:	609a      	str	r2, [r3, #8]
 8003ee8:	683b      	ldr	r3, [r7, #0]
 8003eea:	68fa      	ldr	r2, [r7, #12]
 8003eec:	609a      	str	r2, [r3, #8]
 8003eee:	68fb      	ldr	r3, [r7, #12]
 8003ef0:	683a      	ldr	r2, [r7, #0]
 8003ef2:	605a      	str	r2, [r3, #4]
 8003ef4:	683b      	ldr	r3, [r7, #0]
 8003ef6:	687a      	ldr	r2, [r7, #4]
 8003ef8:	611a      	str	r2, [r3, #16]
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	1c5a      	adds	r2, r3, #1
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	601a      	str	r2, [r3, #0]
 8003f04:	bf00      	nop
 8003f06:	3714      	adds	r7, #20
 8003f08:	46bd      	mov	sp, r7
 8003f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f0e:	4770      	bx	lr

08003f10 <uxListRemove>:
 8003f10:	b480      	push	{r7}
 8003f12:	b085      	sub	sp, #20
 8003f14:	af00      	add	r7, sp, #0
 8003f16:	6078      	str	r0, [r7, #4]
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	691b      	ldr	r3, [r3, #16]
 8003f1c:	60fb      	str	r3, [r7, #12]
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	685b      	ldr	r3, [r3, #4]
 8003f22:	687a      	ldr	r2, [r7, #4]
 8003f24:	6892      	ldr	r2, [r2, #8]
 8003f26:	609a      	str	r2, [r3, #8]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	689b      	ldr	r3, [r3, #8]
 8003f2c:	687a      	ldr	r2, [r7, #4]
 8003f2e:	6852      	ldr	r2, [r2, #4]
 8003f30:	605a      	str	r2, [r3, #4]
 8003f32:	68fb      	ldr	r3, [r7, #12]
 8003f34:	685b      	ldr	r3, [r3, #4]
 8003f36:	687a      	ldr	r2, [r7, #4]
 8003f38:	429a      	cmp	r2, r3
 8003f3a:	d103      	bne.n	8003f44 <uxListRemove+0x34>
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	689a      	ldr	r2, [r3, #8]
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	605a      	str	r2, [r3, #4]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	2200      	movs	r2, #0
 8003f48:	611a      	str	r2, [r3, #16]
 8003f4a:	68fb      	ldr	r3, [r7, #12]
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	1e5a      	subs	r2, r3, #1
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	601a      	str	r2, [r3, #0]
 8003f54:	68fb      	ldr	r3, [r7, #12]
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	4618      	mov	r0, r3
 8003f5a:	3714      	adds	r7, #20
 8003f5c:	46bd      	mov	sp, r7
 8003f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f62:	4770      	bx	lr

08003f64 <xQueueGenericReset>:
 8003f64:	b580      	push	{r7, lr}
 8003f66:	b084      	sub	sp, #16
 8003f68:	af00      	add	r7, sp, #0
 8003f6a:	6078      	str	r0, [r7, #4]
 8003f6c:	6039      	str	r1, [r7, #0]
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	60fb      	str	r3, [r7, #12]
 8003f72:	68fb      	ldr	r3, [r7, #12]
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	d10a      	bne.n	8003f8e <xQueueGenericReset+0x2a>
 8003f78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f7c:	f383 8811 	msr	BASEPRI, r3
 8003f80:	f3bf 8f6f 	isb	sy
 8003f84:	f3bf 8f4f 	dsb	sy
 8003f88:	60bb      	str	r3, [r7, #8]
 8003f8a:	bf00      	nop
 8003f8c:	e7fe      	b.n	8003f8c <xQueueGenericReset+0x28>
 8003f8e:	f002 f8d1 	bl	8006134 <vPortEnterCritical>
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	681a      	ldr	r2, [r3, #0]
 8003f96:	68fb      	ldr	r3, [r7, #12]
 8003f98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003f9a:	68f9      	ldr	r1, [r7, #12]
 8003f9c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8003f9e:	fb01 f303 	mul.w	r3, r1, r3
 8003fa2:	441a      	add	r2, r3
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	609a      	str	r2, [r3, #8]
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	2200      	movs	r2, #0
 8003fac:	639a      	str	r2, [r3, #56]	; 0x38
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681a      	ldr	r2, [r3, #0]
 8003fb2:	68fb      	ldr	r3, [r7, #12]
 8003fb4:	605a      	str	r2, [r3, #4]
 8003fb6:	68fb      	ldr	r3, [r7, #12]
 8003fb8:	681a      	ldr	r2, [r3, #0]
 8003fba:	68fb      	ldr	r3, [r7, #12]
 8003fbc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003fbe:	3b01      	subs	r3, #1
 8003fc0:	68f9      	ldr	r1, [r7, #12]
 8003fc2:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8003fc4:	fb01 f303 	mul.w	r3, r1, r3
 8003fc8:	441a      	add	r2, r3
 8003fca:	68fb      	ldr	r3, [r7, #12]
 8003fcc:	60da      	str	r2, [r3, #12]
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	22ff      	movs	r2, #255	; 0xff
 8003fd2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003fd6:	68fb      	ldr	r3, [r7, #12]
 8003fd8:	22ff      	movs	r2, #255	; 0xff
 8003fda:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003fde:	683b      	ldr	r3, [r7, #0]
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d114      	bne.n	800400e <xQueueGenericReset+0xaa>
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	691b      	ldr	r3, [r3, #16]
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d01a      	beq.n	8004022 <xQueueGenericReset+0xbe>
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	3310      	adds	r3, #16
 8003ff0:	4618      	mov	r0, r3
 8003ff2:	f001 f981 	bl	80052f8 <xTaskRemoveFromEventList>
 8003ff6:	4603      	mov	r3, r0
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d012      	beq.n	8004022 <xQueueGenericReset+0xbe>
 8003ffc:	4b0c      	ldr	r3, [pc, #48]	; (8004030 <xQueueGenericReset+0xcc>)
 8003ffe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004002:	601a      	str	r2, [r3, #0]
 8004004:	f3bf 8f4f 	dsb	sy
 8004008:	f3bf 8f6f 	isb	sy
 800400c:	e009      	b.n	8004022 <xQueueGenericReset+0xbe>
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	3310      	adds	r3, #16
 8004012:	4618      	mov	r0, r3
 8004014:	f7ff fef2 	bl	8003dfc <vListInitialise>
 8004018:	68fb      	ldr	r3, [r7, #12]
 800401a:	3324      	adds	r3, #36	; 0x24
 800401c:	4618      	mov	r0, r3
 800401e:	f7ff feed 	bl	8003dfc <vListInitialise>
 8004022:	f002 f8b7 	bl	8006194 <vPortExitCritical>
 8004026:	2301      	movs	r3, #1
 8004028:	4618      	mov	r0, r3
 800402a:	3710      	adds	r7, #16
 800402c:	46bd      	mov	sp, r7
 800402e:	bd80      	pop	{r7, pc}
 8004030:	e000ed04 	.word	0xe000ed04

08004034 <xQueueGenericCreateStatic>:
 8004034:	b580      	push	{r7, lr}
 8004036:	b08e      	sub	sp, #56	; 0x38
 8004038:	af02      	add	r7, sp, #8
 800403a:	60f8      	str	r0, [r7, #12]
 800403c:	60b9      	str	r1, [r7, #8]
 800403e:	607a      	str	r2, [r7, #4]
 8004040:	603b      	str	r3, [r7, #0]
 8004042:	68fb      	ldr	r3, [r7, #12]
 8004044:	2b00      	cmp	r3, #0
 8004046:	d10a      	bne.n	800405e <xQueueGenericCreateStatic+0x2a>
 8004048:	f04f 0350 	mov.w	r3, #80	; 0x50
 800404c:	f383 8811 	msr	BASEPRI, r3
 8004050:	f3bf 8f6f 	isb	sy
 8004054:	f3bf 8f4f 	dsb	sy
 8004058:	62bb      	str	r3, [r7, #40]	; 0x28
 800405a:	bf00      	nop
 800405c:	e7fe      	b.n	800405c <xQueueGenericCreateStatic+0x28>
 800405e:	683b      	ldr	r3, [r7, #0]
 8004060:	2b00      	cmp	r3, #0
 8004062:	d10a      	bne.n	800407a <xQueueGenericCreateStatic+0x46>
 8004064:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004068:	f383 8811 	msr	BASEPRI, r3
 800406c:	f3bf 8f6f 	isb	sy
 8004070:	f3bf 8f4f 	dsb	sy
 8004074:	627b      	str	r3, [r7, #36]	; 0x24
 8004076:	bf00      	nop
 8004078:	e7fe      	b.n	8004078 <xQueueGenericCreateStatic+0x44>
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	2b00      	cmp	r3, #0
 800407e:	d002      	beq.n	8004086 <xQueueGenericCreateStatic+0x52>
 8004080:	68bb      	ldr	r3, [r7, #8]
 8004082:	2b00      	cmp	r3, #0
 8004084:	d001      	beq.n	800408a <xQueueGenericCreateStatic+0x56>
 8004086:	2301      	movs	r3, #1
 8004088:	e000      	b.n	800408c <xQueueGenericCreateStatic+0x58>
 800408a:	2300      	movs	r3, #0
 800408c:	2b00      	cmp	r3, #0
 800408e:	d10a      	bne.n	80040a6 <xQueueGenericCreateStatic+0x72>
 8004090:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004094:	f383 8811 	msr	BASEPRI, r3
 8004098:	f3bf 8f6f 	isb	sy
 800409c:	f3bf 8f4f 	dsb	sy
 80040a0:	623b      	str	r3, [r7, #32]
 80040a2:	bf00      	nop
 80040a4:	e7fe      	b.n	80040a4 <xQueueGenericCreateStatic+0x70>
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	2b00      	cmp	r3, #0
 80040aa:	d102      	bne.n	80040b2 <xQueueGenericCreateStatic+0x7e>
 80040ac:	68bb      	ldr	r3, [r7, #8]
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	d101      	bne.n	80040b6 <xQueueGenericCreateStatic+0x82>
 80040b2:	2301      	movs	r3, #1
 80040b4:	e000      	b.n	80040b8 <xQueueGenericCreateStatic+0x84>
 80040b6:	2300      	movs	r3, #0
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d10a      	bne.n	80040d2 <xQueueGenericCreateStatic+0x9e>
 80040bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040c0:	f383 8811 	msr	BASEPRI, r3
 80040c4:	f3bf 8f6f 	isb	sy
 80040c8:	f3bf 8f4f 	dsb	sy
 80040cc:	61fb      	str	r3, [r7, #28]
 80040ce:	bf00      	nop
 80040d0:	e7fe      	b.n	80040d0 <xQueueGenericCreateStatic+0x9c>
 80040d2:	2350      	movs	r3, #80	; 0x50
 80040d4:	617b      	str	r3, [r7, #20]
 80040d6:	697b      	ldr	r3, [r7, #20]
 80040d8:	2b50      	cmp	r3, #80	; 0x50
 80040da:	d00a      	beq.n	80040f2 <xQueueGenericCreateStatic+0xbe>
 80040dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040e0:	f383 8811 	msr	BASEPRI, r3
 80040e4:	f3bf 8f6f 	isb	sy
 80040e8:	f3bf 8f4f 	dsb	sy
 80040ec:	61bb      	str	r3, [r7, #24]
 80040ee:	bf00      	nop
 80040f0:	e7fe      	b.n	80040f0 <xQueueGenericCreateStatic+0xbc>
 80040f2:	697b      	ldr	r3, [r7, #20]
 80040f4:	683b      	ldr	r3, [r7, #0]
 80040f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80040f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	d00d      	beq.n	800411a <xQueueGenericCreateStatic+0xe6>
 80040fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004100:	2201      	movs	r2, #1
 8004102:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004106:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 800410a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800410c:	9300      	str	r3, [sp, #0]
 800410e:	4613      	mov	r3, r2
 8004110:	687a      	ldr	r2, [r7, #4]
 8004112:	68b9      	ldr	r1, [r7, #8]
 8004114:	68f8      	ldr	r0, [r7, #12]
 8004116:	f000 f83f 	bl	8004198 <prvInitialiseNewQueue>
 800411a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800411c:	4618      	mov	r0, r3
 800411e:	3730      	adds	r7, #48	; 0x30
 8004120:	46bd      	mov	sp, r7
 8004122:	bd80      	pop	{r7, pc}

08004124 <xQueueGenericCreate>:
 8004124:	b580      	push	{r7, lr}
 8004126:	b08a      	sub	sp, #40	; 0x28
 8004128:	af02      	add	r7, sp, #8
 800412a:	60f8      	str	r0, [r7, #12]
 800412c:	60b9      	str	r1, [r7, #8]
 800412e:	4613      	mov	r3, r2
 8004130:	71fb      	strb	r3, [r7, #7]
 8004132:	68fb      	ldr	r3, [r7, #12]
 8004134:	2b00      	cmp	r3, #0
 8004136:	d10a      	bne.n	800414e <xQueueGenericCreate+0x2a>
 8004138:	f04f 0350 	mov.w	r3, #80	; 0x50
 800413c:	f383 8811 	msr	BASEPRI, r3
 8004140:	f3bf 8f6f 	isb	sy
 8004144:	f3bf 8f4f 	dsb	sy
 8004148:	613b      	str	r3, [r7, #16]
 800414a:	bf00      	nop
 800414c:	e7fe      	b.n	800414c <xQueueGenericCreate+0x28>
 800414e:	68fb      	ldr	r3, [r7, #12]
 8004150:	68ba      	ldr	r2, [r7, #8]
 8004152:	fb02 f303 	mul.w	r3, r2, r3
 8004156:	61fb      	str	r3, [r7, #28]
 8004158:	69fb      	ldr	r3, [r7, #28]
 800415a:	3350      	adds	r3, #80	; 0x50
 800415c:	4618      	mov	r0, r3
 800415e:	f002 f90b 	bl	8006378 <pvPortMalloc>
 8004162:	61b8      	str	r0, [r7, #24]
 8004164:	69bb      	ldr	r3, [r7, #24]
 8004166:	2b00      	cmp	r3, #0
 8004168:	d011      	beq.n	800418e <xQueueGenericCreate+0x6a>
 800416a:	69bb      	ldr	r3, [r7, #24]
 800416c:	617b      	str	r3, [r7, #20]
 800416e:	697b      	ldr	r3, [r7, #20]
 8004170:	3350      	adds	r3, #80	; 0x50
 8004172:	617b      	str	r3, [r7, #20]
 8004174:	69bb      	ldr	r3, [r7, #24]
 8004176:	2200      	movs	r2, #0
 8004178:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800417c:	79fa      	ldrb	r2, [r7, #7]
 800417e:	69bb      	ldr	r3, [r7, #24]
 8004180:	9300      	str	r3, [sp, #0]
 8004182:	4613      	mov	r3, r2
 8004184:	697a      	ldr	r2, [r7, #20]
 8004186:	68b9      	ldr	r1, [r7, #8]
 8004188:	68f8      	ldr	r0, [r7, #12]
 800418a:	f000 f805 	bl	8004198 <prvInitialiseNewQueue>
 800418e:	69bb      	ldr	r3, [r7, #24]
 8004190:	4618      	mov	r0, r3
 8004192:	3720      	adds	r7, #32
 8004194:	46bd      	mov	sp, r7
 8004196:	bd80      	pop	{r7, pc}

08004198 <prvInitialiseNewQueue>:
 8004198:	b580      	push	{r7, lr}
 800419a:	b084      	sub	sp, #16
 800419c:	af00      	add	r7, sp, #0
 800419e:	60f8      	str	r0, [r7, #12]
 80041a0:	60b9      	str	r1, [r7, #8]
 80041a2:	607a      	str	r2, [r7, #4]
 80041a4:	70fb      	strb	r3, [r7, #3]
 80041a6:	68bb      	ldr	r3, [r7, #8]
 80041a8:	2b00      	cmp	r3, #0
 80041aa:	d103      	bne.n	80041b4 <prvInitialiseNewQueue+0x1c>
 80041ac:	69bb      	ldr	r3, [r7, #24]
 80041ae:	69ba      	ldr	r2, [r7, #24]
 80041b0:	601a      	str	r2, [r3, #0]
 80041b2:	e002      	b.n	80041ba <prvInitialiseNewQueue+0x22>
 80041b4:	69bb      	ldr	r3, [r7, #24]
 80041b6:	687a      	ldr	r2, [r7, #4]
 80041b8:	601a      	str	r2, [r3, #0]
 80041ba:	69bb      	ldr	r3, [r7, #24]
 80041bc:	68fa      	ldr	r2, [r7, #12]
 80041be:	63da      	str	r2, [r3, #60]	; 0x3c
 80041c0:	69bb      	ldr	r3, [r7, #24]
 80041c2:	68ba      	ldr	r2, [r7, #8]
 80041c4:	641a      	str	r2, [r3, #64]	; 0x40
 80041c6:	2101      	movs	r1, #1
 80041c8:	69b8      	ldr	r0, [r7, #24]
 80041ca:	f7ff fecb 	bl	8003f64 <xQueueGenericReset>
 80041ce:	69bb      	ldr	r3, [r7, #24]
 80041d0:	78fa      	ldrb	r2, [r7, #3]
 80041d2:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 80041d6:	bf00      	nop
 80041d8:	3710      	adds	r7, #16
 80041da:	46bd      	mov	sp, r7
 80041dc:	bd80      	pop	{r7, pc}
	...

080041e0 <xQueueGenericSend>:
 80041e0:	b580      	push	{r7, lr}
 80041e2:	b08e      	sub	sp, #56	; 0x38
 80041e4:	af00      	add	r7, sp, #0
 80041e6:	60f8      	str	r0, [r7, #12]
 80041e8:	60b9      	str	r1, [r7, #8]
 80041ea:	607a      	str	r2, [r7, #4]
 80041ec:	603b      	str	r3, [r7, #0]
 80041ee:	2300      	movs	r3, #0
 80041f0:	637b      	str	r3, [r7, #52]	; 0x34
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	633b      	str	r3, [r7, #48]	; 0x30
 80041f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80041f8:	2b00      	cmp	r3, #0
 80041fa:	d10a      	bne.n	8004212 <xQueueGenericSend+0x32>
 80041fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004200:	f383 8811 	msr	BASEPRI, r3
 8004204:	f3bf 8f6f 	isb	sy
 8004208:	f3bf 8f4f 	dsb	sy
 800420c:	62bb      	str	r3, [r7, #40]	; 0x28
 800420e:	bf00      	nop
 8004210:	e7fe      	b.n	8004210 <xQueueGenericSend+0x30>
 8004212:	68bb      	ldr	r3, [r7, #8]
 8004214:	2b00      	cmp	r3, #0
 8004216:	d103      	bne.n	8004220 <xQueueGenericSend+0x40>
 8004218:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800421a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800421c:	2b00      	cmp	r3, #0
 800421e:	d101      	bne.n	8004224 <xQueueGenericSend+0x44>
 8004220:	2301      	movs	r3, #1
 8004222:	e000      	b.n	8004226 <xQueueGenericSend+0x46>
 8004224:	2300      	movs	r3, #0
 8004226:	2b00      	cmp	r3, #0
 8004228:	d10a      	bne.n	8004240 <xQueueGenericSend+0x60>
 800422a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800422e:	f383 8811 	msr	BASEPRI, r3
 8004232:	f3bf 8f6f 	isb	sy
 8004236:	f3bf 8f4f 	dsb	sy
 800423a:	627b      	str	r3, [r7, #36]	; 0x24
 800423c:	bf00      	nop
 800423e:	e7fe      	b.n	800423e <xQueueGenericSend+0x5e>
 8004240:	683b      	ldr	r3, [r7, #0]
 8004242:	2b02      	cmp	r3, #2
 8004244:	d103      	bne.n	800424e <xQueueGenericSend+0x6e>
 8004246:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004248:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800424a:	2b01      	cmp	r3, #1
 800424c:	d101      	bne.n	8004252 <xQueueGenericSend+0x72>
 800424e:	2301      	movs	r3, #1
 8004250:	e000      	b.n	8004254 <xQueueGenericSend+0x74>
 8004252:	2300      	movs	r3, #0
 8004254:	2b00      	cmp	r3, #0
 8004256:	d10a      	bne.n	800426e <xQueueGenericSend+0x8e>
 8004258:	f04f 0350 	mov.w	r3, #80	; 0x50
 800425c:	f383 8811 	msr	BASEPRI, r3
 8004260:	f3bf 8f6f 	isb	sy
 8004264:	f3bf 8f4f 	dsb	sy
 8004268:	623b      	str	r3, [r7, #32]
 800426a:	bf00      	nop
 800426c:	e7fe      	b.n	800426c <xQueueGenericSend+0x8c>
 800426e:	f001 fa05 	bl	800567c <xTaskGetSchedulerState>
 8004272:	4603      	mov	r3, r0
 8004274:	2b00      	cmp	r3, #0
 8004276:	d102      	bne.n	800427e <xQueueGenericSend+0x9e>
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	2b00      	cmp	r3, #0
 800427c:	d101      	bne.n	8004282 <xQueueGenericSend+0xa2>
 800427e:	2301      	movs	r3, #1
 8004280:	e000      	b.n	8004284 <xQueueGenericSend+0xa4>
 8004282:	2300      	movs	r3, #0
 8004284:	2b00      	cmp	r3, #0
 8004286:	d10a      	bne.n	800429e <xQueueGenericSend+0xbe>
 8004288:	f04f 0350 	mov.w	r3, #80	; 0x50
 800428c:	f383 8811 	msr	BASEPRI, r3
 8004290:	f3bf 8f6f 	isb	sy
 8004294:	f3bf 8f4f 	dsb	sy
 8004298:	61fb      	str	r3, [r7, #28]
 800429a:	bf00      	nop
 800429c:	e7fe      	b.n	800429c <xQueueGenericSend+0xbc>
 800429e:	f001 ff49 	bl	8006134 <vPortEnterCritical>
 80042a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80042a4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80042a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80042a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80042aa:	429a      	cmp	r2, r3
 80042ac:	d302      	bcc.n	80042b4 <xQueueGenericSend+0xd4>
 80042ae:	683b      	ldr	r3, [r7, #0]
 80042b0:	2b02      	cmp	r3, #2
 80042b2:	d129      	bne.n	8004308 <xQueueGenericSend+0x128>
 80042b4:	683a      	ldr	r2, [r7, #0]
 80042b6:	68b9      	ldr	r1, [r7, #8]
 80042b8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80042ba:	f000 fa29 	bl	8004710 <prvCopyDataToQueue>
 80042be:	62f8      	str	r0, [r7, #44]	; 0x2c
 80042c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80042c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d010      	beq.n	80042ea <xQueueGenericSend+0x10a>
 80042c8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80042ca:	3324      	adds	r3, #36	; 0x24
 80042cc:	4618      	mov	r0, r3
 80042ce:	f001 f813 	bl	80052f8 <xTaskRemoveFromEventList>
 80042d2:	4603      	mov	r3, r0
 80042d4:	2b00      	cmp	r3, #0
 80042d6:	d013      	beq.n	8004300 <xQueueGenericSend+0x120>
 80042d8:	4b3f      	ldr	r3, [pc, #252]	; (80043d8 <xQueueGenericSend+0x1f8>)
 80042da:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80042de:	601a      	str	r2, [r3, #0]
 80042e0:	f3bf 8f4f 	dsb	sy
 80042e4:	f3bf 8f6f 	isb	sy
 80042e8:	e00a      	b.n	8004300 <xQueueGenericSend+0x120>
 80042ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d007      	beq.n	8004300 <xQueueGenericSend+0x120>
 80042f0:	4b39      	ldr	r3, [pc, #228]	; (80043d8 <xQueueGenericSend+0x1f8>)
 80042f2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80042f6:	601a      	str	r2, [r3, #0]
 80042f8:	f3bf 8f4f 	dsb	sy
 80042fc:	f3bf 8f6f 	isb	sy
 8004300:	f001 ff48 	bl	8006194 <vPortExitCritical>
 8004304:	2301      	movs	r3, #1
 8004306:	e063      	b.n	80043d0 <xQueueGenericSend+0x1f0>
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	2b00      	cmp	r3, #0
 800430c:	d103      	bne.n	8004316 <xQueueGenericSend+0x136>
 800430e:	f001 ff41 	bl	8006194 <vPortExitCritical>
 8004312:	2300      	movs	r3, #0
 8004314:	e05c      	b.n	80043d0 <xQueueGenericSend+0x1f0>
 8004316:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004318:	2b00      	cmp	r3, #0
 800431a:	d106      	bne.n	800432a <xQueueGenericSend+0x14a>
 800431c:	f107 0314 	add.w	r3, r7, #20
 8004320:	4618      	mov	r0, r3
 8004322:	f001 f84d 	bl	80053c0 <vTaskInternalSetTimeOutState>
 8004326:	2301      	movs	r3, #1
 8004328:	637b      	str	r3, [r7, #52]	; 0x34
 800432a:	f001 ff33 	bl	8006194 <vPortExitCritical>
 800432e:	f000 fdb9 	bl	8004ea4 <vTaskSuspendAll>
 8004332:	f001 feff 	bl	8006134 <vPortEnterCritical>
 8004336:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004338:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800433c:	b25b      	sxtb	r3, r3
 800433e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004342:	d103      	bne.n	800434c <xQueueGenericSend+0x16c>
 8004344:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004346:	2200      	movs	r2, #0
 8004348:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800434c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800434e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004352:	b25b      	sxtb	r3, r3
 8004354:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004358:	d103      	bne.n	8004362 <xQueueGenericSend+0x182>
 800435a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800435c:	2200      	movs	r2, #0
 800435e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004362:	f001 ff17 	bl	8006194 <vPortExitCritical>
 8004366:	1d3a      	adds	r2, r7, #4
 8004368:	f107 0314 	add.w	r3, r7, #20
 800436c:	4611      	mov	r1, r2
 800436e:	4618      	mov	r0, r3
 8004370:	f001 f83c 	bl	80053ec <xTaskCheckForTimeOut>
 8004374:	4603      	mov	r3, r0
 8004376:	2b00      	cmp	r3, #0
 8004378:	d124      	bne.n	80043c4 <xQueueGenericSend+0x1e4>
 800437a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800437c:	f000 fac0 	bl	8004900 <prvIsQueueFull>
 8004380:	4603      	mov	r3, r0
 8004382:	2b00      	cmp	r3, #0
 8004384:	d018      	beq.n	80043b8 <xQueueGenericSend+0x1d8>
 8004386:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004388:	3310      	adds	r3, #16
 800438a:	687a      	ldr	r2, [r7, #4]
 800438c:	4611      	mov	r1, r2
 800438e:	4618      	mov	r0, r3
 8004390:	f000 ff62 	bl	8005258 <vTaskPlaceOnEventList>
 8004394:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004396:	f000 fa4b 	bl	8004830 <prvUnlockQueue>
 800439a:	f000 fd91 	bl	8004ec0 <xTaskResumeAll>
 800439e:	4603      	mov	r3, r0
 80043a0:	2b00      	cmp	r3, #0
 80043a2:	f47f af7c 	bne.w	800429e <xQueueGenericSend+0xbe>
 80043a6:	4b0c      	ldr	r3, [pc, #48]	; (80043d8 <xQueueGenericSend+0x1f8>)
 80043a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80043ac:	601a      	str	r2, [r3, #0]
 80043ae:	f3bf 8f4f 	dsb	sy
 80043b2:	f3bf 8f6f 	isb	sy
 80043b6:	e772      	b.n	800429e <xQueueGenericSend+0xbe>
 80043b8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80043ba:	f000 fa39 	bl	8004830 <prvUnlockQueue>
 80043be:	f000 fd7f 	bl	8004ec0 <xTaskResumeAll>
 80043c2:	e76c      	b.n	800429e <xQueueGenericSend+0xbe>
 80043c4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80043c6:	f000 fa33 	bl	8004830 <prvUnlockQueue>
 80043ca:	f000 fd79 	bl	8004ec0 <xTaskResumeAll>
 80043ce:	2300      	movs	r3, #0
 80043d0:	4618      	mov	r0, r3
 80043d2:	3738      	adds	r7, #56	; 0x38
 80043d4:	46bd      	mov	sp, r7
 80043d6:	bd80      	pop	{r7, pc}
 80043d8:	e000ed04 	.word	0xe000ed04

080043dc <xQueueGenericSendFromISR>:
 80043dc:	b580      	push	{r7, lr}
 80043de:	b090      	sub	sp, #64	; 0x40
 80043e0:	af00      	add	r7, sp, #0
 80043e2:	60f8      	str	r0, [r7, #12]
 80043e4:	60b9      	str	r1, [r7, #8]
 80043e6:	607a      	str	r2, [r7, #4]
 80043e8:	603b      	str	r3, [r7, #0]
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	63bb      	str	r3, [r7, #56]	; 0x38
 80043ee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d10a      	bne.n	800440a <xQueueGenericSendFromISR+0x2e>
 80043f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80043f8:	f383 8811 	msr	BASEPRI, r3
 80043fc:	f3bf 8f6f 	isb	sy
 8004400:	f3bf 8f4f 	dsb	sy
 8004404:	62bb      	str	r3, [r7, #40]	; 0x28
 8004406:	bf00      	nop
 8004408:	e7fe      	b.n	8004408 <xQueueGenericSendFromISR+0x2c>
 800440a:	68bb      	ldr	r3, [r7, #8]
 800440c:	2b00      	cmp	r3, #0
 800440e:	d103      	bne.n	8004418 <xQueueGenericSendFromISR+0x3c>
 8004410:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004412:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004414:	2b00      	cmp	r3, #0
 8004416:	d101      	bne.n	800441c <xQueueGenericSendFromISR+0x40>
 8004418:	2301      	movs	r3, #1
 800441a:	e000      	b.n	800441e <xQueueGenericSendFromISR+0x42>
 800441c:	2300      	movs	r3, #0
 800441e:	2b00      	cmp	r3, #0
 8004420:	d10a      	bne.n	8004438 <xQueueGenericSendFromISR+0x5c>
 8004422:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004426:	f383 8811 	msr	BASEPRI, r3
 800442a:	f3bf 8f6f 	isb	sy
 800442e:	f3bf 8f4f 	dsb	sy
 8004432:	627b      	str	r3, [r7, #36]	; 0x24
 8004434:	bf00      	nop
 8004436:	e7fe      	b.n	8004436 <xQueueGenericSendFromISR+0x5a>
 8004438:	683b      	ldr	r3, [r7, #0]
 800443a:	2b02      	cmp	r3, #2
 800443c:	d103      	bne.n	8004446 <xQueueGenericSendFromISR+0x6a>
 800443e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004440:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004442:	2b01      	cmp	r3, #1
 8004444:	d101      	bne.n	800444a <xQueueGenericSendFromISR+0x6e>
 8004446:	2301      	movs	r3, #1
 8004448:	e000      	b.n	800444c <xQueueGenericSendFromISR+0x70>
 800444a:	2300      	movs	r3, #0
 800444c:	2b00      	cmp	r3, #0
 800444e:	d10a      	bne.n	8004466 <xQueueGenericSendFromISR+0x8a>
 8004450:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004454:	f383 8811 	msr	BASEPRI, r3
 8004458:	f3bf 8f6f 	isb	sy
 800445c:	f3bf 8f4f 	dsb	sy
 8004460:	623b      	str	r3, [r7, #32]
 8004462:	bf00      	nop
 8004464:	e7fe      	b.n	8004464 <xQueueGenericSendFromISR+0x88>
 8004466:	f001 ff47 	bl	80062f8 <vPortValidateInterruptPriority>
 800446a:	f3ef 8211 	mrs	r2, BASEPRI
 800446e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004472:	f383 8811 	msr	BASEPRI, r3
 8004476:	f3bf 8f6f 	isb	sy
 800447a:	f3bf 8f4f 	dsb	sy
 800447e:	61fa      	str	r2, [r7, #28]
 8004480:	61bb      	str	r3, [r7, #24]
 8004482:	69fb      	ldr	r3, [r7, #28]
 8004484:	637b      	str	r3, [r7, #52]	; 0x34
 8004486:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004488:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800448a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800448c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800448e:	429a      	cmp	r2, r3
 8004490:	d302      	bcc.n	8004498 <xQueueGenericSendFromISR+0xbc>
 8004492:	683b      	ldr	r3, [r7, #0]
 8004494:	2b02      	cmp	r3, #2
 8004496:	d12f      	bne.n	80044f8 <xQueueGenericSendFromISR+0x11c>
 8004498:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800449a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800449e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80044a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80044a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80044a6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80044a8:	683a      	ldr	r2, [r7, #0]
 80044aa:	68b9      	ldr	r1, [r7, #8]
 80044ac:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80044ae:	f000 f92f 	bl	8004710 <prvCopyDataToQueue>
 80044b2:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 80044b6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80044ba:	d112      	bne.n	80044e2 <xQueueGenericSendFromISR+0x106>
 80044bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80044be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044c0:	2b00      	cmp	r3, #0
 80044c2:	d016      	beq.n	80044f2 <xQueueGenericSendFromISR+0x116>
 80044c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80044c6:	3324      	adds	r3, #36	; 0x24
 80044c8:	4618      	mov	r0, r3
 80044ca:	f000 ff15 	bl	80052f8 <xTaskRemoveFromEventList>
 80044ce:	4603      	mov	r3, r0
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	d00e      	beq.n	80044f2 <xQueueGenericSendFromISR+0x116>
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d00b      	beq.n	80044f2 <xQueueGenericSendFromISR+0x116>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	2201      	movs	r2, #1
 80044de:	601a      	str	r2, [r3, #0]
 80044e0:	e007      	b.n	80044f2 <xQueueGenericSendFromISR+0x116>
 80044e2:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80044e6:	3301      	adds	r3, #1
 80044e8:	b2db      	uxtb	r3, r3
 80044ea:	b25a      	sxtb	r2, r3
 80044ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80044ee:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80044f2:	2301      	movs	r3, #1
 80044f4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80044f6:	e001      	b.n	80044fc <xQueueGenericSendFromISR+0x120>
 80044f8:	2300      	movs	r3, #0
 80044fa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80044fc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80044fe:	617b      	str	r3, [r7, #20]
 8004500:	697b      	ldr	r3, [r7, #20]
 8004502:	f383 8811 	msr	BASEPRI, r3
 8004506:	bf00      	nop
 8004508:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800450a:	4618      	mov	r0, r3
 800450c:	3740      	adds	r7, #64	; 0x40
 800450e:	46bd      	mov	sp, r7
 8004510:	bd80      	pop	{r7, pc}
	...

08004514 <xQueueReceive>:
 8004514:	b580      	push	{r7, lr}
 8004516:	b08c      	sub	sp, #48	; 0x30
 8004518:	af00      	add	r7, sp, #0
 800451a:	60f8      	str	r0, [r7, #12]
 800451c:	60b9      	str	r1, [r7, #8]
 800451e:	607a      	str	r2, [r7, #4]
 8004520:	2300      	movs	r3, #0
 8004522:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004524:	68fb      	ldr	r3, [r7, #12]
 8004526:	62bb      	str	r3, [r7, #40]	; 0x28
 8004528:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800452a:	2b00      	cmp	r3, #0
 800452c:	d10a      	bne.n	8004544 <xQueueReceive+0x30>
 800452e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004532:	f383 8811 	msr	BASEPRI, r3
 8004536:	f3bf 8f6f 	isb	sy
 800453a:	f3bf 8f4f 	dsb	sy
 800453e:	623b      	str	r3, [r7, #32]
 8004540:	bf00      	nop
 8004542:	e7fe      	b.n	8004542 <xQueueReceive+0x2e>
 8004544:	68bb      	ldr	r3, [r7, #8]
 8004546:	2b00      	cmp	r3, #0
 8004548:	d103      	bne.n	8004552 <xQueueReceive+0x3e>
 800454a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800454c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800454e:	2b00      	cmp	r3, #0
 8004550:	d101      	bne.n	8004556 <xQueueReceive+0x42>
 8004552:	2301      	movs	r3, #1
 8004554:	e000      	b.n	8004558 <xQueueReceive+0x44>
 8004556:	2300      	movs	r3, #0
 8004558:	2b00      	cmp	r3, #0
 800455a:	d10a      	bne.n	8004572 <xQueueReceive+0x5e>
 800455c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004560:	f383 8811 	msr	BASEPRI, r3
 8004564:	f3bf 8f6f 	isb	sy
 8004568:	f3bf 8f4f 	dsb	sy
 800456c:	61fb      	str	r3, [r7, #28]
 800456e:	bf00      	nop
 8004570:	e7fe      	b.n	8004570 <xQueueReceive+0x5c>
 8004572:	f001 f883 	bl	800567c <xTaskGetSchedulerState>
 8004576:	4603      	mov	r3, r0
 8004578:	2b00      	cmp	r3, #0
 800457a:	d102      	bne.n	8004582 <xQueueReceive+0x6e>
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	2b00      	cmp	r3, #0
 8004580:	d101      	bne.n	8004586 <xQueueReceive+0x72>
 8004582:	2301      	movs	r3, #1
 8004584:	e000      	b.n	8004588 <xQueueReceive+0x74>
 8004586:	2300      	movs	r3, #0
 8004588:	2b00      	cmp	r3, #0
 800458a:	d10a      	bne.n	80045a2 <xQueueReceive+0x8e>
 800458c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004590:	f383 8811 	msr	BASEPRI, r3
 8004594:	f3bf 8f6f 	isb	sy
 8004598:	f3bf 8f4f 	dsb	sy
 800459c:	61bb      	str	r3, [r7, #24]
 800459e:	bf00      	nop
 80045a0:	e7fe      	b.n	80045a0 <xQueueReceive+0x8c>
 80045a2:	f001 fdc7 	bl	8006134 <vPortEnterCritical>
 80045a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80045a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80045aa:	627b      	str	r3, [r7, #36]	; 0x24
 80045ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	d01f      	beq.n	80045f2 <xQueueReceive+0xde>
 80045b2:	68b9      	ldr	r1, [r7, #8]
 80045b4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80045b6:	f000 f915 	bl	80047e4 <prvCopyDataFromQueue>
 80045ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80045bc:	1e5a      	subs	r2, r3, #1
 80045be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80045c0:	639a      	str	r2, [r3, #56]	; 0x38
 80045c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80045c4:	691b      	ldr	r3, [r3, #16]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d00f      	beq.n	80045ea <xQueueReceive+0xd6>
 80045ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80045cc:	3310      	adds	r3, #16
 80045ce:	4618      	mov	r0, r3
 80045d0:	f000 fe92 	bl	80052f8 <xTaskRemoveFromEventList>
 80045d4:	4603      	mov	r3, r0
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d007      	beq.n	80045ea <xQueueReceive+0xd6>
 80045da:	4b3d      	ldr	r3, [pc, #244]	; (80046d0 <xQueueReceive+0x1bc>)
 80045dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80045e0:	601a      	str	r2, [r3, #0]
 80045e2:	f3bf 8f4f 	dsb	sy
 80045e6:	f3bf 8f6f 	isb	sy
 80045ea:	f001 fdd3 	bl	8006194 <vPortExitCritical>
 80045ee:	2301      	movs	r3, #1
 80045f0:	e069      	b.n	80046c6 <xQueueReceive+0x1b2>
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d103      	bne.n	8004600 <xQueueReceive+0xec>
 80045f8:	f001 fdcc 	bl	8006194 <vPortExitCritical>
 80045fc:	2300      	movs	r3, #0
 80045fe:	e062      	b.n	80046c6 <xQueueReceive+0x1b2>
 8004600:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004602:	2b00      	cmp	r3, #0
 8004604:	d106      	bne.n	8004614 <xQueueReceive+0x100>
 8004606:	f107 0310 	add.w	r3, r7, #16
 800460a:	4618      	mov	r0, r3
 800460c:	f000 fed8 	bl	80053c0 <vTaskInternalSetTimeOutState>
 8004610:	2301      	movs	r3, #1
 8004612:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004614:	f001 fdbe 	bl	8006194 <vPortExitCritical>
 8004618:	f000 fc44 	bl	8004ea4 <vTaskSuspendAll>
 800461c:	f001 fd8a 	bl	8006134 <vPortEnterCritical>
 8004620:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004622:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004626:	b25b      	sxtb	r3, r3
 8004628:	f1b3 3fff 	cmp.w	r3, #4294967295
 800462c:	d103      	bne.n	8004636 <xQueueReceive+0x122>
 800462e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004630:	2200      	movs	r2, #0
 8004632:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004636:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004638:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800463c:	b25b      	sxtb	r3, r3
 800463e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004642:	d103      	bne.n	800464c <xQueueReceive+0x138>
 8004644:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004646:	2200      	movs	r2, #0
 8004648:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800464c:	f001 fda2 	bl	8006194 <vPortExitCritical>
 8004650:	1d3a      	adds	r2, r7, #4
 8004652:	f107 0310 	add.w	r3, r7, #16
 8004656:	4611      	mov	r1, r2
 8004658:	4618      	mov	r0, r3
 800465a:	f000 fec7 	bl	80053ec <xTaskCheckForTimeOut>
 800465e:	4603      	mov	r3, r0
 8004660:	2b00      	cmp	r3, #0
 8004662:	d123      	bne.n	80046ac <xQueueReceive+0x198>
 8004664:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004666:	f000 f935 	bl	80048d4 <prvIsQueueEmpty>
 800466a:	4603      	mov	r3, r0
 800466c:	2b00      	cmp	r3, #0
 800466e:	d017      	beq.n	80046a0 <xQueueReceive+0x18c>
 8004670:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004672:	3324      	adds	r3, #36	; 0x24
 8004674:	687a      	ldr	r2, [r7, #4]
 8004676:	4611      	mov	r1, r2
 8004678:	4618      	mov	r0, r3
 800467a:	f000 fded 	bl	8005258 <vTaskPlaceOnEventList>
 800467e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004680:	f000 f8d6 	bl	8004830 <prvUnlockQueue>
 8004684:	f000 fc1c 	bl	8004ec0 <xTaskResumeAll>
 8004688:	4603      	mov	r3, r0
 800468a:	2b00      	cmp	r3, #0
 800468c:	d189      	bne.n	80045a2 <xQueueReceive+0x8e>
 800468e:	4b10      	ldr	r3, [pc, #64]	; (80046d0 <xQueueReceive+0x1bc>)
 8004690:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004694:	601a      	str	r2, [r3, #0]
 8004696:	f3bf 8f4f 	dsb	sy
 800469a:	f3bf 8f6f 	isb	sy
 800469e:	e780      	b.n	80045a2 <xQueueReceive+0x8e>
 80046a0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80046a2:	f000 f8c5 	bl	8004830 <prvUnlockQueue>
 80046a6:	f000 fc0b 	bl	8004ec0 <xTaskResumeAll>
 80046aa:	e77a      	b.n	80045a2 <xQueueReceive+0x8e>
 80046ac:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80046ae:	f000 f8bf 	bl	8004830 <prvUnlockQueue>
 80046b2:	f000 fc05 	bl	8004ec0 <xTaskResumeAll>
 80046b6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80046b8:	f000 f90c 	bl	80048d4 <prvIsQueueEmpty>
 80046bc:	4603      	mov	r3, r0
 80046be:	2b00      	cmp	r3, #0
 80046c0:	f43f af6f 	beq.w	80045a2 <xQueueReceive+0x8e>
 80046c4:	2300      	movs	r3, #0
 80046c6:	4618      	mov	r0, r3
 80046c8:	3730      	adds	r7, #48	; 0x30
 80046ca:	46bd      	mov	sp, r7
 80046cc:	bd80      	pop	{r7, pc}
 80046ce:	bf00      	nop
 80046d0:	e000ed04 	.word	0xe000ed04

080046d4 <uxQueueMessagesWaiting>:
 80046d4:	b580      	push	{r7, lr}
 80046d6:	b084      	sub	sp, #16
 80046d8:	af00      	add	r7, sp, #0
 80046da:	6078      	str	r0, [r7, #4]
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d10a      	bne.n	80046f8 <uxQueueMessagesWaiting+0x24>
 80046e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80046e6:	f383 8811 	msr	BASEPRI, r3
 80046ea:	f3bf 8f6f 	isb	sy
 80046ee:	f3bf 8f4f 	dsb	sy
 80046f2:	60bb      	str	r3, [r7, #8]
 80046f4:	bf00      	nop
 80046f6:	e7fe      	b.n	80046f6 <uxQueueMessagesWaiting+0x22>
 80046f8:	f001 fd1c 	bl	8006134 <vPortEnterCritical>
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004700:	60fb      	str	r3, [r7, #12]
 8004702:	f001 fd47 	bl	8006194 <vPortExitCritical>
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	4618      	mov	r0, r3
 800470a:	3710      	adds	r7, #16
 800470c:	46bd      	mov	sp, r7
 800470e:	bd80      	pop	{r7, pc}

08004710 <prvCopyDataToQueue>:
 8004710:	b580      	push	{r7, lr}
 8004712:	b086      	sub	sp, #24
 8004714:	af00      	add	r7, sp, #0
 8004716:	60f8      	str	r0, [r7, #12]
 8004718:	60b9      	str	r1, [r7, #8]
 800471a:	607a      	str	r2, [r7, #4]
 800471c:	2300      	movs	r3, #0
 800471e:	617b      	str	r3, [r7, #20]
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004724:	613b      	str	r3, [r7, #16]
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800472a:	2b00      	cmp	r3, #0
 800472c:	d10d      	bne.n	800474a <prvCopyDataToQueue+0x3a>
 800472e:	68fb      	ldr	r3, [r7, #12]
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	2b00      	cmp	r3, #0
 8004734:	d14d      	bne.n	80047d2 <prvCopyDataToQueue+0xc2>
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	689b      	ldr	r3, [r3, #8]
 800473a:	4618      	mov	r0, r3
 800473c:	f000 ffbc 	bl	80056b8 <xTaskPriorityDisinherit>
 8004740:	6178      	str	r0, [r7, #20]
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	2200      	movs	r2, #0
 8004746:	609a      	str	r2, [r3, #8]
 8004748:	e043      	b.n	80047d2 <prvCopyDataToQueue+0xc2>
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	2b00      	cmp	r3, #0
 800474e:	d119      	bne.n	8004784 <prvCopyDataToQueue+0x74>
 8004750:	68fb      	ldr	r3, [r7, #12]
 8004752:	6858      	ldr	r0, [r3, #4]
 8004754:	68fb      	ldr	r3, [r7, #12]
 8004756:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004758:	461a      	mov	r2, r3
 800475a:	68b9      	ldr	r1, [r7, #8]
 800475c:	f002 fb90 	bl	8006e80 <memcpy>
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	685a      	ldr	r2, [r3, #4]
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004768:	441a      	add	r2, r3
 800476a:	68fb      	ldr	r3, [r7, #12]
 800476c:	605a      	str	r2, [r3, #4]
 800476e:	68fb      	ldr	r3, [r7, #12]
 8004770:	685a      	ldr	r2, [r3, #4]
 8004772:	68fb      	ldr	r3, [r7, #12]
 8004774:	689b      	ldr	r3, [r3, #8]
 8004776:	429a      	cmp	r2, r3
 8004778:	d32b      	bcc.n	80047d2 <prvCopyDataToQueue+0xc2>
 800477a:	68fb      	ldr	r3, [r7, #12]
 800477c:	681a      	ldr	r2, [r3, #0]
 800477e:	68fb      	ldr	r3, [r7, #12]
 8004780:	605a      	str	r2, [r3, #4]
 8004782:	e026      	b.n	80047d2 <prvCopyDataToQueue+0xc2>
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	68d8      	ldr	r0, [r3, #12]
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800478c:	461a      	mov	r2, r3
 800478e:	68b9      	ldr	r1, [r7, #8]
 8004790:	f002 fb76 	bl	8006e80 <memcpy>
 8004794:	68fb      	ldr	r3, [r7, #12]
 8004796:	68da      	ldr	r2, [r3, #12]
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800479c:	425b      	negs	r3, r3
 800479e:	441a      	add	r2, r3
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	60da      	str	r2, [r3, #12]
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	68da      	ldr	r2, [r3, #12]
 80047a8:	68fb      	ldr	r3, [r7, #12]
 80047aa:	681b      	ldr	r3, [r3, #0]
 80047ac:	429a      	cmp	r2, r3
 80047ae:	d207      	bcs.n	80047c0 <prvCopyDataToQueue+0xb0>
 80047b0:	68fb      	ldr	r3, [r7, #12]
 80047b2:	689a      	ldr	r2, [r3, #8]
 80047b4:	68fb      	ldr	r3, [r7, #12]
 80047b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047b8:	425b      	negs	r3, r3
 80047ba:	441a      	add	r2, r3
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	60da      	str	r2, [r3, #12]
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	2b02      	cmp	r3, #2
 80047c4:	d105      	bne.n	80047d2 <prvCopyDataToQueue+0xc2>
 80047c6:	693b      	ldr	r3, [r7, #16]
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	d002      	beq.n	80047d2 <prvCopyDataToQueue+0xc2>
 80047cc:	693b      	ldr	r3, [r7, #16]
 80047ce:	3b01      	subs	r3, #1
 80047d0:	613b      	str	r3, [r7, #16]
 80047d2:	693b      	ldr	r3, [r7, #16]
 80047d4:	1c5a      	adds	r2, r3, #1
 80047d6:	68fb      	ldr	r3, [r7, #12]
 80047d8:	639a      	str	r2, [r3, #56]	; 0x38
 80047da:	697b      	ldr	r3, [r7, #20]
 80047dc:	4618      	mov	r0, r3
 80047de:	3718      	adds	r7, #24
 80047e0:	46bd      	mov	sp, r7
 80047e2:	bd80      	pop	{r7, pc}

080047e4 <prvCopyDataFromQueue>:
 80047e4:	b580      	push	{r7, lr}
 80047e6:	b082      	sub	sp, #8
 80047e8:	af00      	add	r7, sp, #0
 80047ea:	6078      	str	r0, [r7, #4]
 80047ec:	6039      	str	r1, [r7, #0]
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d018      	beq.n	8004828 <prvCopyDataFromQueue+0x44>
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	68da      	ldr	r2, [r3, #12]
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047fe:	441a      	add	r2, r3
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	60da      	str	r2, [r3, #12]
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	68da      	ldr	r2, [r3, #12]
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	689b      	ldr	r3, [r3, #8]
 800480c:	429a      	cmp	r2, r3
 800480e:	d303      	bcc.n	8004818 <prvCopyDataFromQueue+0x34>
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	681a      	ldr	r2, [r3, #0]
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	60da      	str	r2, [r3, #12]
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	68d9      	ldr	r1, [r3, #12]
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004820:	461a      	mov	r2, r3
 8004822:	6838      	ldr	r0, [r7, #0]
 8004824:	f002 fb2c 	bl	8006e80 <memcpy>
 8004828:	bf00      	nop
 800482a:	3708      	adds	r7, #8
 800482c:	46bd      	mov	sp, r7
 800482e:	bd80      	pop	{r7, pc}

08004830 <prvUnlockQueue>:
 8004830:	b580      	push	{r7, lr}
 8004832:	b084      	sub	sp, #16
 8004834:	af00      	add	r7, sp, #0
 8004836:	6078      	str	r0, [r7, #4]
 8004838:	f001 fc7c 	bl	8006134 <vPortEnterCritical>
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004842:	73fb      	strb	r3, [r7, #15]
 8004844:	e011      	b.n	800486a <prvUnlockQueue+0x3a>
 8004846:	687b      	ldr	r3, [r7, #4]
 8004848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800484a:	2b00      	cmp	r3, #0
 800484c:	d012      	beq.n	8004874 <prvUnlockQueue+0x44>
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	3324      	adds	r3, #36	; 0x24
 8004852:	4618      	mov	r0, r3
 8004854:	f000 fd50 	bl	80052f8 <xTaskRemoveFromEventList>
 8004858:	4603      	mov	r3, r0
 800485a:	2b00      	cmp	r3, #0
 800485c:	d001      	beq.n	8004862 <prvUnlockQueue+0x32>
 800485e:	f000 fe27 	bl	80054b0 <vTaskMissedYield>
 8004862:	7bfb      	ldrb	r3, [r7, #15]
 8004864:	3b01      	subs	r3, #1
 8004866:	b2db      	uxtb	r3, r3
 8004868:	73fb      	strb	r3, [r7, #15]
 800486a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800486e:	2b00      	cmp	r3, #0
 8004870:	dce9      	bgt.n	8004846 <prvUnlockQueue+0x16>
 8004872:	e000      	b.n	8004876 <prvUnlockQueue+0x46>
 8004874:	bf00      	nop
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	22ff      	movs	r2, #255	; 0xff
 800487a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800487e:	f001 fc89 	bl	8006194 <vPortExitCritical>
 8004882:	f001 fc57 	bl	8006134 <vPortEnterCritical>
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800488c:	73bb      	strb	r3, [r7, #14]
 800488e:	e011      	b.n	80048b4 <prvUnlockQueue+0x84>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	691b      	ldr	r3, [r3, #16]
 8004894:	2b00      	cmp	r3, #0
 8004896:	d012      	beq.n	80048be <prvUnlockQueue+0x8e>
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	3310      	adds	r3, #16
 800489c:	4618      	mov	r0, r3
 800489e:	f000 fd2b 	bl	80052f8 <xTaskRemoveFromEventList>
 80048a2:	4603      	mov	r3, r0
 80048a4:	2b00      	cmp	r3, #0
 80048a6:	d001      	beq.n	80048ac <prvUnlockQueue+0x7c>
 80048a8:	f000 fe02 	bl	80054b0 <vTaskMissedYield>
 80048ac:	7bbb      	ldrb	r3, [r7, #14]
 80048ae:	3b01      	subs	r3, #1
 80048b0:	b2db      	uxtb	r3, r3
 80048b2:	73bb      	strb	r3, [r7, #14]
 80048b4:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	dce9      	bgt.n	8004890 <prvUnlockQueue+0x60>
 80048bc:	e000      	b.n	80048c0 <prvUnlockQueue+0x90>
 80048be:	bf00      	nop
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	22ff      	movs	r2, #255	; 0xff
 80048c4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80048c8:	f001 fc64 	bl	8006194 <vPortExitCritical>
 80048cc:	bf00      	nop
 80048ce:	3710      	adds	r7, #16
 80048d0:	46bd      	mov	sp, r7
 80048d2:	bd80      	pop	{r7, pc}

080048d4 <prvIsQueueEmpty>:
 80048d4:	b580      	push	{r7, lr}
 80048d6:	b084      	sub	sp, #16
 80048d8:	af00      	add	r7, sp, #0
 80048da:	6078      	str	r0, [r7, #4]
 80048dc:	f001 fc2a 	bl	8006134 <vPortEnterCritical>
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80048e4:	2b00      	cmp	r3, #0
 80048e6:	d102      	bne.n	80048ee <prvIsQueueEmpty+0x1a>
 80048e8:	2301      	movs	r3, #1
 80048ea:	60fb      	str	r3, [r7, #12]
 80048ec:	e001      	b.n	80048f2 <prvIsQueueEmpty+0x1e>
 80048ee:	2300      	movs	r3, #0
 80048f0:	60fb      	str	r3, [r7, #12]
 80048f2:	f001 fc4f 	bl	8006194 <vPortExitCritical>
 80048f6:	68fb      	ldr	r3, [r7, #12]
 80048f8:	4618      	mov	r0, r3
 80048fa:	3710      	adds	r7, #16
 80048fc:	46bd      	mov	sp, r7
 80048fe:	bd80      	pop	{r7, pc}

08004900 <prvIsQueueFull>:
 8004900:	b580      	push	{r7, lr}
 8004902:	b084      	sub	sp, #16
 8004904:	af00      	add	r7, sp, #0
 8004906:	6078      	str	r0, [r7, #4]
 8004908:	f001 fc14 	bl	8006134 <vPortEnterCritical>
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004914:	429a      	cmp	r2, r3
 8004916:	d102      	bne.n	800491e <prvIsQueueFull+0x1e>
 8004918:	2301      	movs	r3, #1
 800491a:	60fb      	str	r3, [r7, #12]
 800491c:	e001      	b.n	8004922 <prvIsQueueFull+0x22>
 800491e:	2300      	movs	r3, #0
 8004920:	60fb      	str	r3, [r7, #12]
 8004922:	f001 fc37 	bl	8006194 <vPortExitCritical>
 8004926:	68fb      	ldr	r3, [r7, #12]
 8004928:	4618      	mov	r0, r3
 800492a:	3710      	adds	r7, #16
 800492c:	46bd      	mov	sp, r7
 800492e:	bd80      	pop	{r7, pc}

08004930 <vQueueAddToRegistry>:
 8004930:	b480      	push	{r7}
 8004932:	b085      	sub	sp, #20
 8004934:	af00      	add	r7, sp, #0
 8004936:	6078      	str	r0, [r7, #4]
 8004938:	6039      	str	r1, [r7, #0]
 800493a:	2300      	movs	r3, #0
 800493c:	60fb      	str	r3, [r7, #12]
 800493e:	e014      	b.n	800496a <vQueueAddToRegistry+0x3a>
 8004940:	4a0f      	ldr	r2, [pc, #60]	; (8004980 <vQueueAddToRegistry+0x50>)
 8004942:	68fb      	ldr	r3, [r7, #12]
 8004944:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8004948:	2b00      	cmp	r3, #0
 800494a:	d10b      	bne.n	8004964 <vQueueAddToRegistry+0x34>
 800494c:	490c      	ldr	r1, [pc, #48]	; (8004980 <vQueueAddToRegistry+0x50>)
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	683a      	ldr	r2, [r7, #0]
 8004952:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8004956:	4a0a      	ldr	r2, [pc, #40]	; (8004980 <vQueueAddToRegistry+0x50>)
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	00db      	lsls	r3, r3, #3
 800495c:	4413      	add	r3, r2
 800495e:	687a      	ldr	r2, [r7, #4]
 8004960:	605a      	str	r2, [r3, #4]
 8004962:	e006      	b.n	8004972 <vQueueAddToRegistry+0x42>
 8004964:	68fb      	ldr	r3, [r7, #12]
 8004966:	3301      	adds	r3, #1
 8004968:	60fb      	str	r3, [r7, #12]
 800496a:	68fb      	ldr	r3, [r7, #12]
 800496c:	2b07      	cmp	r3, #7
 800496e:	d9e7      	bls.n	8004940 <vQueueAddToRegistry+0x10>
 8004970:	bf00      	nop
 8004972:	bf00      	nop
 8004974:	3714      	adds	r7, #20
 8004976:	46bd      	mov	sp, r7
 8004978:	f85d 7b04 	ldr.w	r7, [sp], #4
 800497c:	4770      	bx	lr
 800497e:	bf00      	nop
 8004980:	20000af8 	.word	0x20000af8

08004984 <vQueueWaitForMessageRestricted>:
 8004984:	b580      	push	{r7, lr}
 8004986:	b086      	sub	sp, #24
 8004988:	af00      	add	r7, sp, #0
 800498a:	60f8      	str	r0, [r7, #12]
 800498c:	60b9      	str	r1, [r7, #8]
 800498e:	607a      	str	r2, [r7, #4]
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	617b      	str	r3, [r7, #20]
 8004994:	f001 fbce 	bl	8006134 <vPortEnterCritical>
 8004998:	697b      	ldr	r3, [r7, #20]
 800499a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800499e:	b25b      	sxtb	r3, r3
 80049a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049a4:	d103      	bne.n	80049ae <vQueueWaitForMessageRestricted+0x2a>
 80049a6:	697b      	ldr	r3, [r7, #20]
 80049a8:	2200      	movs	r2, #0
 80049aa:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80049ae:	697b      	ldr	r3, [r7, #20]
 80049b0:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80049b4:	b25b      	sxtb	r3, r3
 80049b6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049ba:	d103      	bne.n	80049c4 <vQueueWaitForMessageRestricted+0x40>
 80049bc:	697b      	ldr	r3, [r7, #20]
 80049be:	2200      	movs	r2, #0
 80049c0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80049c4:	f001 fbe6 	bl	8006194 <vPortExitCritical>
 80049c8:	697b      	ldr	r3, [r7, #20]
 80049ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80049cc:	2b00      	cmp	r3, #0
 80049ce:	d106      	bne.n	80049de <vQueueWaitForMessageRestricted+0x5a>
 80049d0:	697b      	ldr	r3, [r7, #20]
 80049d2:	3324      	adds	r3, #36	; 0x24
 80049d4:	687a      	ldr	r2, [r7, #4]
 80049d6:	68b9      	ldr	r1, [r7, #8]
 80049d8:	4618      	mov	r0, r3
 80049da:	f000 fc61 	bl	80052a0 <vTaskPlaceOnEventListRestricted>
 80049de:	6978      	ldr	r0, [r7, #20]
 80049e0:	f7ff ff26 	bl	8004830 <prvUnlockQueue>
 80049e4:	bf00      	nop
 80049e6:	3718      	adds	r7, #24
 80049e8:	46bd      	mov	sp, r7
 80049ea:	bd80      	pop	{r7, pc}

080049ec <xTaskCreateStatic>:
 80049ec:	b580      	push	{r7, lr}
 80049ee:	b08e      	sub	sp, #56	; 0x38
 80049f0:	af04      	add	r7, sp, #16
 80049f2:	60f8      	str	r0, [r7, #12]
 80049f4:	60b9      	str	r1, [r7, #8]
 80049f6:	607a      	str	r2, [r7, #4]
 80049f8:	603b      	str	r3, [r7, #0]
 80049fa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d10a      	bne.n	8004a16 <xTaskCreateStatic+0x2a>
 8004a00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a04:	f383 8811 	msr	BASEPRI, r3
 8004a08:	f3bf 8f6f 	isb	sy
 8004a0c:	f3bf 8f4f 	dsb	sy
 8004a10:	623b      	str	r3, [r7, #32]
 8004a12:	bf00      	nop
 8004a14:	e7fe      	b.n	8004a14 <xTaskCreateStatic+0x28>
 8004a16:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d10a      	bne.n	8004a32 <xTaskCreateStatic+0x46>
 8004a1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a20:	f383 8811 	msr	BASEPRI, r3
 8004a24:	f3bf 8f6f 	isb	sy
 8004a28:	f3bf 8f4f 	dsb	sy
 8004a2c:	61fb      	str	r3, [r7, #28]
 8004a2e:	bf00      	nop
 8004a30:	e7fe      	b.n	8004a30 <xTaskCreateStatic+0x44>
 8004a32:	23a8      	movs	r3, #168	; 0xa8
 8004a34:	613b      	str	r3, [r7, #16]
 8004a36:	693b      	ldr	r3, [r7, #16]
 8004a38:	2ba8      	cmp	r3, #168	; 0xa8
 8004a3a:	d00a      	beq.n	8004a52 <xTaskCreateStatic+0x66>
 8004a3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a40:	f383 8811 	msr	BASEPRI, r3
 8004a44:	f3bf 8f6f 	isb	sy
 8004a48:	f3bf 8f4f 	dsb	sy
 8004a4c:	61bb      	str	r3, [r7, #24]
 8004a4e:	bf00      	nop
 8004a50:	e7fe      	b.n	8004a50 <xTaskCreateStatic+0x64>
 8004a52:	693b      	ldr	r3, [r7, #16]
 8004a54:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	d01e      	beq.n	8004a98 <xTaskCreateStatic+0xac>
 8004a5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d01b      	beq.n	8004a98 <xTaskCreateStatic+0xac>
 8004a60:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004a62:	627b      	str	r3, [r7, #36]	; 0x24
 8004a64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004a66:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8004a68:	631a      	str	r2, [r3, #48]	; 0x30
 8004a6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004a6c:	2202      	movs	r2, #2
 8004a6e:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 8004a72:	2300      	movs	r3, #0
 8004a74:	9303      	str	r3, [sp, #12]
 8004a76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004a78:	9302      	str	r3, [sp, #8]
 8004a7a:	f107 0314 	add.w	r3, r7, #20
 8004a7e:	9301      	str	r3, [sp, #4]
 8004a80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a82:	9300      	str	r3, [sp, #0]
 8004a84:	683b      	ldr	r3, [r7, #0]
 8004a86:	687a      	ldr	r2, [r7, #4]
 8004a88:	68b9      	ldr	r1, [r7, #8]
 8004a8a:	68f8      	ldr	r0, [r7, #12]
 8004a8c:	f000 f850 	bl	8004b30 <prvInitialiseNewTask>
 8004a90:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004a92:	f000 f8f3 	bl	8004c7c <prvAddNewTaskToReadyList>
 8004a96:	e001      	b.n	8004a9c <xTaskCreateStatic+0xb0>
 8004a98:	2300      	movs	r3, #0
 8004a9a:	617b      	str	r3, [r7, #20]
 8004a9c:	697b      	ldr	r3, [r7, #20]
 8004a9e:	4618      	mov	r0, r3
 8004aa0:	3728      	adds	r7, #40	; 0x28
 8004aa2:	46bd      	mov	sp, r7
 8004aa4:	bd80      	pop	{r7, pc}

08004aa6 <xTaskCreate>:
 8004aa6:	b580      	push	{r7, lr}
 8004aa8:	b08c      	sub	sp, #48	; 0x30
 8004aaa:	af04      	add	r7, sp, #16
 8004aac:	60f8      	str	r0, [r7, #12]
 8004aae:	60b9      	str	r1, [r7, #8]
 8004ab0:	603b      	str	r3, [r7, #0]
 8004ab2:	4613      	mov	r3, r2
 8004ab4:	80fb      	strh	r3, [r7, #6]
 8004ab6:	88fb      	ldrh	r3, [r7, #6]
 8004ab8:	009b      	lsls	r3, r3, #2
 8004aba:	4618      	mov	r0, r3
 8004abc:	f001 fc5c 	bl	8006378 <pvPortMalloc>
 8004ac0:	6178      	str	r0, [r7, #20]
 8004ac2:	697b      	ldr	r3, [r7, #20]
 8004ac4:	2b00      	cmp	r3, #0
 8004ac6:	d00e      	beq.n	8004ae6 <xTaskCreate+0x40>
 8004ac8:	20a8      	movs	r0, #168	; 0xa8
 8004aca:	f001 fc55 	bl	8006378 <pvPortMalloc>
 8004ace:	61f8      	str	r0, [r7, #28]
 8004ad0:	69fb      	ldr	r3, [r7, #28]
 8004ad2:	2b00      	cmp	r3, #0
 8004ad4:	d003      	beq.n	8004ade <xTaskCreate+0x38>
 8004ad6:	69fb      	ldr	r3, [r7, #28]
 8004ad8:	697a      	ldr	r2, [r7, #20]
 8004ada:	631a      	str	r2, [r3, #48]	; 0x30
 8004adc:	e005      	b.n	8004aea <xTaskCreate+0x44>
 8004ade:	6978      	ldr	r0, [r7, #20]
 8004ae0:	f001 fd16 	bl	8006510 <vPortFree>
 8004ae4:	e001      	b.n	8004aea <xTaskCreate+0x44>
 8004ae6:	2300      	movs	r3, #0
 8004ae8:	61fb      	str	r3, [r7, #28]
 8004aea:	69fb      	ldr	r3, [r7, #28]
 8004aec:	2b00      	cmp	r3, #0
 8004aee:	d017      	beq.n	8004b20 <xTaskCreate+0x7a>
 8004af0:	69fb      	ldr	r3, [r7, #28]
 8004af2:	2200      	movs	r2, #0
 8004af4:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 8004af8:	88fa      	ldrh	r2, [r7, #6]
 8004afa:	2300      	movs	r3, #0
 8004afc:	9303      	str	r3, [sp, #12]
 8004afe:	69fb      	ldr	r3, [r7, #28]
 8004b00:	9302      	str	r3, [sp, #8]
 8004b02:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b04:	9301      	str	r3, [sp, #4]
 8004b06:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b08:	9300      	str	r3, [sp, #0]
 8004b0a:	683b      	ldr	r3, [r7, #0]
 8004b0c:	68b9      	ldr	r1, [r7, #8]
 8004b0e:	68f8      	ldr	r0, [r7, #12]
 8004b10:	f000 f80e 	bl	8004b30 <prvInitialiseNewTask>
 8004b14:	69f8      	ldr	r0, [r7, #28]
 8004b16:	f000 f8b1 	bl	8004c7c <prvAddNewTaskToReadyList>
 8004b1a:	2301      	movs	r3, #1
 8004b1c:	61bb      	str	r3, [r7, #24]
 8004b1e:	e002      	b.n	8004b26 <xTaskCreate+0x80>
 8004b20:	f04f 33ff 	mov.w	r3, #4294967295
 8004b24:	61bb      	str	r3, [r7, #24]
 8004b26:	69bb      	ldr	r3, [r7, #24]
 8004b28:	4618      	mov	r0, r3
 8004b2a:	3720      	adds	r7, #32
 8004b2c:	46bd      	mov	sp, r7
 8004b2e:	bd80      	pop	{r7, pc}

08004b30 <prvInitialiseNewTask>:
 8004b30:	b580      	push	{r7, lr}
 8004b32:	b088      	sub	sp, #32
 8004b34:	af00      	add	r7, sp, #0
 8004b36:	60f8      	str	r0, [r7, #12]
 8004b38:	60b9      	str	r1, [r7, #8]
 8004b3a:	607a      	str	r2, [r7, #4]
 8004b3c:	603b      	str	r3, [r7, #0]
 8004b3e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004b40:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	009b      	lsls	r3, r3, #2
 8004b46:	461a      	mov	r2, r3
 8004b48:	21a5      	movs	r1, #165	; 0xa5
 8004b4a:	f002 f8bb 	bl	8006cc4 <memset>
 8004b4e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004b50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8004b58:	3b01      	subs	r3, #1
 8004b5a:	009b      	lsls	r3, r3, #2
 8004b5c:	4413      	add	r3, r2
 8004b5e:	61bb      	str	r3, [r7, #24]
 8004b60:	69bb      	ldr	r3, [r7, #24]
 8004b62:	f023 0307 	bic.w	r3, r3, #7
 8004b66:	61bb      	str	r3, [r7, #24]
 8004b68:	69bb      	ldr	r3, [r7, #24]
 8004b6a:	f003 0307 	and.w	r3, r3, #7
 8004b6e:	2b00      	cmp	r3, #0
 8004b70:	d00a      	beq.n	8004b88 <prvInitialiseNewTask+0x58>
 8004b72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b76:	f383 8811 	msr	BASEPRI, r3
 8004b7a:	f3bf 8f6f 	isb	sy
 8004b7e:	f3bf 8f4f 	dsb	sy
 8004b82:	617b      	str	r3, [r7, #20]
 8004b84:	bf00      	nop
 8004b86:	e7fe      	b.n	8004b86 <prvInitialiseNewTask+0x56>
 8004b88:	68bb      	ldr	r3, [r7, #8]
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d01f      	beq.n	8004bce <prvInitialiseNewTask+0x9e>
 8004b8e:	2300      	movs	r3, #0
 8004b90:	61fb      	str	r3, [r7, #28]
 8004b92:	e012      	b.n	8004bba <prvInitialiseNewTask+0x8a>
 8004b94:	68ba      	ldr	r2, [r7, #8]
 8004b96:	69fb      	ldr	r3, [r7, #28]
 8004b98:	4413      	add	r3, r2
 8004b9a:	7819      	ldrb	r1, [r3, #0]
 8004b9c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004b9e:	69fb      	ldr	r3, [r7, #28]
 8004ba0:	4413      	add	r3, r2
 8004ba2:	3334      	adds	r3, #52	; 0x34
 8004ba4:	460a      	mov	r2, r1
 8004ba6:	701a      	strb	r2, [r3, #0]
 8004ba8:	68ba      	ldr	r2, [r7, #8]
 8004baa:	69fb      	ldr	r3, [r7, #28]
 8004bac:	4413      	add	r3, r2
 8004bae:	781b      	ldrb	r3, [r3, #0]
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	d006      	beq.n	8004bc2 <prvInitialiseNewTask+0x92>
 8004bb4:	69fb      	ldr	r3, [r7, #28]
 8004bb6:	3301      	adds	r3, #1
 8004bb8:	61fb      	str	r3, [r7, #28]
 8004bba:	69fb      	ldr	r3, [r7, #28]
 8004bbc:	2b0f      	cmp	r3, #15
 8004bbe:	d9e9      	bls.n	8004b94 <prvInitialiseNewTask+0x64>
 8004bc0:	e000      	b.n	8004bc4 <prvInitialiseNewTask+0x94>
 8004bc2:	bf00      	nop
 8004bc4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bc6:	2200      	movs	r2, #0
 8004bc8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004bcc:	e003      	b.n	8004bd6 <prvInitialiseNewTask+0xa6>
 8004bce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bd0:	2200      	movs	r2, #0
 8004bd2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004bd6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004bd8:	2b37      	cmp	r3, #55	; 0x37
 8004bda:	d901      	bls.n	8004be0 <prvInitialiseNewTask+0xb0>
 8004bdc:	2337      	movs	r3, #55	; 0x37
 8004bde:	62bb      	str	r3, [r7, #40]	; 0x28
 8004be0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004be2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004be4:	62da      	str	r2, [r3, #44]	; 0x2c
 8004be6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004be8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004bea:	64da      	str	r2, [r3, #76]	; 0x4c
 8004bec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bee:	2200      	movs	r2, #0
 8004bf0:	651a      	str	r2, [r3, #80]	; 0x50
 8004bf2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bf4:	3304      	adds	r3, #4
 8004bf6:	4618      	mov	r0, r3
 8004bf8:	f7ff f920 	bl	8003e3c <vListInitialiseItem>
 8004bfc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bfe:	3318      	adds	r3, #24
 8004c00:	4618      	mov	r0, r3
 8004c02:	f7ff f91b 	bl	8003e3c <vListInitialiseItem>
 8004c06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c08:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004c0a:	611a      	str	r2, [r3, #16]
 8004c0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c0e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8004c12:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c14:	619a      	str	r2, [r3, #24]
 8004c16:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c18:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004c1a:	625a      	str	r2, [r3, #36]	; 0x24
 8004c1c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c1e:	2200      	movs	r2, #0
 8004c20:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
 8004c24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c26:	2200      	movs	r2, #0
 8004c28:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4
 8004c2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c2e:	3354      	adds	r3, #84	; 0x54
 8004c30:	224c      	movs	r2, #76	; 0x4c
 8004c32:	2100      	movs	r1, #0
 8004c34:	4618      	mov	r0, r3
 8004c36:	f002 f845 	bl	8006cc4 <memset>
 8004c3a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c3c:	4a0c      	ldr	r2, [pc, #48]	; (8004c70 <prvInitialiseNewTask+0x140>)
 8004c3e:	659a      	str	r2, [r3, #88]	; 0x58
 8004c40:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c42:	4a0c      	ldr	r2, [pc, #48]	; (8004c74 <prvInitialiseNewTask+0x144>)
 8004c44:	65da      	str	r2, [r3, #92]	; 0x5c
 8004c46:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c48:	4a0b      	ldr	r2, [pc, #44]	; (8004c78 <prvInitialiseNewTask+0x148>)
 8004c4a:	661a      	str	r2, [r3, #96]	; 0x60
 8004c4c:	683a      	ldr	r2, [r7, #0]
 8004c4e:	68f9      	ldr	r1, [r7, #12]
 8004c50:	69b8      	ldr	r0, [r7, #24]
 8004c52:	f001 f941 	bl	8005ed8 <pxPortInitialiseStack>
 8004c56:	4602      	mov	r2, r0
 8004c58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c5a:	601a      	str	r2, [r3, #0]
 8004c5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d002      	beq.n	8004c68 <prvInitialiseNewTask+0x138>
 8004c62:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c64:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004c66:	601a      	str	r2, [r3, #0]
 8004c68:	bf00      	nop
 8004c6a:	3720      	adds	r7, #32
 8004c6c:	46bd      	mov	sp, r7
 8004c6e:	bd80      	pop	{r7, pc}
 8004c70:	20004d98 	.word	0x20004d98
 8004c74:	20004e00 	.word	0x20004e00
 8004c78:	20004e68 	.word	0x20004e68

08004c7c <prvAddNewTaskToReadyList>:
 8004c7c:	b580      	push	{r7, lr}
 8004c7e:	b082      	sub	sp, #8
 8004c80:	af00      	add	r7, sp, #0
 8004c82:	6078      	str	r0, [r7, #4]
 8004c84:	f001 fa56 	bl	8006134 <vPortEnterCritical>
 8004c88:	4b2d      	ldr	r3, [pc, #180]	; (8004d40 <prvAddNewTaskToReadyList+0xc4>)
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	3301      	adds	r3, #1
 8004c8e:	4a2c      	ldr	r2, [pc, #176]	; (8004d40 <prvAddNewTaskToReadyList+0xc4>)
 8004c90:	6013      	str	r3, [r2, #0]
 8004c92:	4b2c      	ldr	r3, [pc, #176]	; (8004d44 <prvAddNewTaskToReadyList+0xc8>)
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	d109      	bne.n	8004cae <prvAddNewTaskToReadyList+0x32>
 8004c9a:	4a2a      	ldr	r2, [pc, #168]	; (8004d44 <prvAddNewTaskToReadyList+0xc8>)
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	6013      	str	r3, [r2, #0]
 8004ca0:	4b27      	ldr	r3, [pc, #156]	; (8004d40 <prvAddNewTaskToReadyList+0xc4>)
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	2b01      	cmp	r3, #1
 8004ca6:	d110      	bne.n	8004cca <prvAddNewTaskToReadyList+0x4e>
 8004ca8:	f000 fc26 	bl	80054f8 <prvInitialiseTaskLists>
 8004cac:	e00d      	b.n	8004cca <prvAddNewTaskToReadyList+0x4e>
 8004cae:	4b26      	ldr	r3, [pc, #152]	; (8004d48 <prvAddNewTaskToReadyList+0xcc>)
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	2b00      	cmp	r3, #0
 8004cb4:	d109      	bne.n	8004cca <prvAddNewTaskToReadyList+0x4e>
 8004cb6:	4b23      	ldr	r3, [pc, #140]	; (8004d44 <prvAddNewTaskToReadyList+0xc8>)
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004cc0:	429a      	cmp	r2, r3
 8004cc2:	d802      	bhi.n	8004cca <prvAddNewTaskToReadyList+0x4e>
 8004cc4:	4a1f      	ldr	r2, [pc, #124]	; (8004d44 <prvAddNewTaskToReadyList+0xc8>)
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	6013      	str	r3, [r2, #0]
 8004cca:	4b20      	ldr	r3, [pc, #128]	; (8004d4c <prvAddNewTaskToReadyList+0xd0>)
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	3301      	adds	r3, #1
 8004cd0:	4a1e      	ldr	r2, [pc, #120]	; (8004d4c <prvAddNewTaskToReadyList+0xd0>)
 8004cd2:	6013      	str	r3, [r2, #0]
 8004cd4:	4b1d      	ldr	r3, [pc, #116]	; (8004d4c <prvAddNewTaskToReadyList+0xd0>)
 8004cd6:	681a      	ldr	r2, [r3, #0]
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	645a      	str	r2, [r3, #68]	; 0x44
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004ce0:	4b1b      	ldr	r3, [pc, #108]	; (8004d50 <prvAddNewTaskToReadyList+0xd4>)
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	429a      	cmp	r2, r3
 8004ce6:	d903      	bls.n	8004cf0 <prvAddNewTaskToReadyList+0x74>
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004cec:	4a18      	ldr	r2, [pc, #96]	; (8004d50 <prvAddNewTaskToReadyList+0xd4>)
 8004cee:	6013      	str	r3, [r2, #0]
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004cf4:	4613      	mov	r3, r2
 8004cf6:	009b      	lsls	r3, r3, #2
 8004cf8:	4413      	add	r3, r2
 8004cfa:	009b      	lsls	r3, r3, #2
 8004cfc:	4a15      	ldr	r2, [pc, #84]	; (8004d54 <prvAddNewTaskToReadyList+0xd8>)
 8004cfe:	441a      	add	r2, r3
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	3304      	adds	r3, #4
 8004d04:	4619      	mov	r1, r3
 8004d06:	4610      	mov	r0, r2
 8004d08:	f7ff f8a5 	bl	8003e56 <vListInsertEnd>
 8004d0c:	f001 fa42 	bl	8006194 <vPortExitCritical>
 8004d10:	4b0d      	ldr	r3, [pc, #52]	; (8004d48 <prvAddNewTaskToReadyList+0xcc>)
 8004d12:	681b      	ldr	r3, [r3, #0]
 8004d14:	2b00      	cmp	r3, #0
 8004d16:	d00e      	beq.n	8004d36 <prvAddNewTaskToReadyList+0xba>
 8004d18:	4b0a      	ldr	r3, [pc, #40]	; (8004d44 <prvAddNewTaskToReadyList+0xc8>)
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004d22:	429a      	cmp	r2, r3
 8004d24:	d207      	bcs.n	8004d36 <prvAddNewTaskToReadyList+0xba>
 8004d26:	4b0c      	ldr	r3, [pc, #48]	; (8004d58 <prvAddNewTaskToReadyList+0xdc>)
 8004d28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004d2c:	601a      	str	r2, [r3, #0]
 8004d2e:	f3bf 8f4f 	dsb	sy
 8004d32:	f3bf 8f6f 	isb	sy
 8004d36:	bf00      	nop
 8004d38:	3708      	adds	r7, #8
 8004d3a:	46bd      	mov	sp, r7
 8004d3c:	bd80      	pop	{r7, pc}
 8004d3e:	bf00      	nop
 8004d40:	2000100c 	.word	0x2000100c
 8004d44:	20000b38 	.word	0x20000b38
 8004d48:	20001018 	.word	0x20001018
 8004d4c:	20001028 	.word	0x20001028
 8004d50:	20001014 	.word	0x20001014
 8004d54:	20000b3c 	.word	0x20000b3c
 8004d58:	e000ed04 	.word	0xe000ed04

08004d5c <vTaskDelay>:
 8004d5c:	b580      	push	{r7, lr}
 8004d5e:	b084      	sub	sp, #16
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	6078      	str	r0, [r7, #4]
 8004d64:	2300      	movs	r3, #0
 8004d66:	60fb      	str	r3, [r7, #12]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	2b00      	cmp	r3, #0
 8004d6c:	d017      	beq.n	8004d9e <vTaskDelay+0x42>
 8004d6e:	4b13      	ldr	r3, [pc, #76]	; (8004dbc <vTaskDelay+0x60>)
 8004d70:	681b      	ldr	r3, [r3, #0]
 8004d72:	2b00      	cmp	r3, #0
 8004d74:	d00a      	beq.n	8004d8c <vTaskDelay+0x30>
 8004d76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004d7a:	f383 8811 	msr	BASEPRI, r3
 8004d7e:	f3bf 8f6f 	isb	sy
 8004d82:	f3bf 8f4f 	dsb	sy
 8004d86:	60bb      	str	r3, [r7, #8]
 8004d88:	bf00      	nop
 8004d8a:	e7fe      	b.n	8004d8a <vTaskDelay+0x2e>
 8004d8c:	f000 f88a 	bl	8004ea4 <vTaskSuspendAll>
 8004d90:	2100      	movs	r1, #0
 8004d92:	6878      	ldr	r0, [r7, #4]
 8004d94:	f000 fcfe 	bl	8005794 <prvAddCurrentTaskToDelayedList>
 8004d98:	f000 f892 	bl	8004ec0 <xTaskResumeAll>
 8004d9c:	60f8      	str	r0, [r7, #12]
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	2b00      	cmp	r3, #0
 8004da2:	d107      	bne.n	8004db4 <vTaskDelay+0x58>
 8004da4:	4b06      	ldr	r3, [pc, #24]	; (8004dc0 <vTaskDelay+0x64>)
 8004da6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004daa:	601a      	str	r2, [r3, #0]
 8004dac:	f3bf 8f4f 	dsb	sy
 8004db0:	f3bf 8f6f 	isb	sy
 8004db4:	bf00      	nop
 8004db6:	3710      	adds	r7, #16
 8004db8:	46bd      	mov	sp, r7
 8004dba:	bd80      	pop	{r7, pc}
 8004dbc:	20001034 	.word	0x20001034
 8004dc0:	e000ed04 	.word	0xe000ed04

08004dc4 <vTaskStartScheduler>:
 8004dc4:	b580      	push	{r7, lr}
 8004dc6:	b08a      	sub	sp, #40	; 0x28
 8004dc8:	af04      	add	r7, sp, #16
 8004dca:	2300      	movs	r3, #0
 8004dcc:	60bb      	str	r3, [r7, #8]
 8004dce:	2300      	movs	r3, #0
 8004dd0:	607b      	str	r3, [r7, #4]
 8004dd2:	463a      	mov	r2, r7
 8004dd4:	1d39      	adds	r1, r7, #4
 8004dd6:	f107 0308 	add.w	r3, r7, #8
 8004dda:	4618      	mov	r0, r3
 8004ddc:	f7fe ffda 	bl	8003d94 <vApplicationGetIdleTaskMemory>
 8004de0:	6839      	ldr	r1, [r7, #0]
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	68ba      	ldr	r2, [r7, #8]
 8004de6:	9202      	str	r2, [sp, #8]
 8004de8:	9301      	str	r3, [sp, #4]
 8004dea:	2300      	movs	r3, #0
 8004dec:	9300      	str	r3, [sp, #0]
 8004dee:	2300      	movs	r3, #0
 8004df0:	460a      	mov	r2, r1
 8004df2:	4924      	ldr	r1, [pc, #144]	; (8004e84 <vTaskStartScheduler+0xc0>)
 8004df4:	4824      	ldr	r0, [pc, #144]	; (8004e88 <vTaskStartScheduler+0xc4>)
 8004df6:	f7ff fdf9 	bl	80049ec <xTaskCreateStatic>
 8004dfa:	4603      	mov	r3, r0
 8004dfc:	4a23      	ldr	r2, [pc, #140]	; (8004e8c <vTaskStartScheduler+0xc8>)
 8004dfe:	6013      	str	r3, [r2, #0]
 8004e00:	4b22      	ldr	r3, [pc, #136]	; (8004e8c <vTaskStartScheduler+0xc8>)
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	2b00      	cmp	r3, #0
 8004e06:	d002      	beq.n	8004e0e <vTaskStartScheduler+0x4a>
 8004e08:	2301      	movs	r3, #1
 8004e0a:	617b      	str	r3, [r7, #20]
 8004e0c:	e001      	b.n	8004e12 <vTaskStartScheduler+0x4e>
 8004e0e:	2300      	movs	r3, #0
 8004e10:	617b      	str	r3, [r7, #20]
 8004e12:	697b      	ldr	r3, [r7, #20]
 8004e14:	2b01      	cmp	r3, #1
 8004e16:	d102      	bne.n	8004e1e <vTaskStartScheduler+0x5a>
 8004e18:	f000 fd10 	bl	800583c <xTimerCreateTimerTask>
 8004e1c:	6178      	str	r0, [r7, #20]
 8004e1e:	697b      	ldr	r3, [r7, #20]
 8004e20:	2b01      	cmp	r3, #1
 8004e22:	d11b      	bne.n	8004e5c <vTaskStartScheduler+0x98>
 8004e24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004e28:	f383 8811 	msr	BASEPRI, r3
 8004e2c:	f3bf 8f6f 	isb	sy
 8004e30:	f3bf 8f4f 	dsb	sy
 8004e34:	613b      	str	r3, [r7, #16]
 8004e36:	bf00      	nop
 8004e38:	4b15      	ldr	r3, [pc, #84]	; (8004e90 <vTaskStartScheduler+0xcc>)
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	3354      	adds	r3, #84	; 0x54
 8004e3e:	4a15      	ldr	r2, [pc, #84]	; (8004e94 <vTaskStartScheduler+0xd0>)
 8004e40:	6013      	str	r3, [r2, #0]
 8004e42:	4b15      	ldr	r3, [pc, #84]	; (8004e98 <vTaskStartScheduler+0xd4>)
 8004e44:	f04f 32ff 	mov.w	r2, #4294967295
 8004e48:	601a      	str	r2, [r3, #0]
 8004e4a:	4b14      	ldr	r3, [pc, #80]	; (8004e9c <vTaskStartScheduler+0xd8>)
 8004e4c:	2201      	movs	r2, #1
 8004e4e:	601a      	str	r2, [r3, #0]
 8004e50:	4b13      	ldr	r3, [pc, #76]	; (8004ea0 <vTaskStartScheduler+0xdc>)
 8004e52:	2200      	movs	r2, #0
 8004e54:	601a      	str	r2, [r3, #0]
 8004e56:	f001 f8cb 	bl	8005ff0 <xPortStartScheduler>
 8004e5a:	e00e      	b.n	8004e7a <vTaskStartScheduler+0xb6>
 8004e5c:	697b      	ldr	r3, [r7, #20]
 8004e5e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e62:	d10a      	bne.n	8004e7a <vTaskStartScheduler+0xb6>
 8004e64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004e68:	f383 8811 	msr	BASEPRI, r3
 8004e6c:	f3bf 8f6f 	isb	sy
 8004e70:	f3bf 8f4f 	dsb	sy
 8004e74:	60fb      	str	r3, [r7, #12]
 8004e76:	bf00      	nop
 8004e78:	e7fe      	b.n	8004e78 <vTaskStartScheduler+0xb4>
 8004e7a:	bf00      	nop
 8004e7c:	3718      	adds	r7, #24
 8004e7e:	46bd      	mov	sp, r7
 8004e80:	bd80      	pop	{r7, pc}
 8004e82:	bf00      	nop
 8004e84:	080075ec 	.word	0x080075ec
 8004e88:	080054c9 	.word	0x080054c9
 8004e8c:	20001030 	.word	0x20001030
 8004e90:	20000b38 	.word	0x20000b38
 8004e94:	2000005c 	.word	0x2000005c
 8004e98:	2000102c 	.word	0x2000102c
 8004e9c:	20001018 	.word	0x20001018
 8004ea0:	20001010 	.word	0x20001010

08004ea4 <vTaskSuspendAll>:
 8004ea4:	b480      	push	{r7}
 8004ea6:	af00      	add	r7, sp, #0
 8004ea8:	4b04      	ldr	r3, [pc, #16]	; (8004ebc <vTaskSuspendAll+0x18>)
 8004eaa:	681b      	ldr	r3, [r3, #0]
 8004eac:	3301      	adds	r3, #1
 8004eae:	4a03      	ldr	r2, [pc, #12]	; (8004ebc <vTaskSuspendAll+0x18>)
 8004eb0:	6013      	str	r3, [r2, #0]
 8004eb2:	bf00      	nop
 8004eb4:	46bd      	mov	sp, r7
 8004eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eba:	4770      	bx	lr
 8004ebc:	20001034 	.word	0x20001034

08004ec0 <xTaskResumeAll>:
 8004ec0:	b580      	push	{r7, lr}
 8004ec2:	b084      	sub	sp, #16
 8004ec4:	af00      	add	r7, sp, #0
 8004ec6:	2300      	movs	r3, #0
 8004ec8:	60fb      	str	r3, [r7, #12]
 8004eca:	2300      	movs	r3, #0
 8004ecc:	60bb      	str	r3, [r7, #8]
 8004ece:	4b42      	ldr	r3, [pc, #264]	; (8004fd8 <xTaskResumeAll+0x118>)
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	2b00      	cmp	r3, #0
 8004ed4:	d10a      	bne.n	8004eec <xTaskResumeAll+0x2c>
 8004ed6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004eda:	f383 8811 	msr	BASEPRI, r3
 8004ede:	f3bf 8f6f 	isb	sy
 8004ee2:	f3bf 8f4f 	dsb	sy
 8004ee6:	603b      	str	r3, [r7, #0]
 8004ee8:	bf00      	nop
 8004eea:	e7fe      	b.n	8004eea <xTaskResumeAll+0x2a>
 8004eec:	f001 f922 	bl	8006134 <vPortEnterCritical>
 8004ef0:	4b39      	ldr	r3, [pc, #228]	; (8004fd8 <xTaskResumeAll+0x118>)
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	3b01      	subs	r3, #1
 8004ef6:	4a38      	ldr	r2, [pc, #224]	; (8004fd8 <xTaskResumeAll+0x118>)
 8004ef8:	6013      	str	r3, [r2, #0]
 8004efa:	4b37      	ldr	r3, [pc, #220]	; (8004fd8 <xTaskResumeAll+0x118>)
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	2b00      	cmp	r3, #0
 8004f00:	d162      	bne.n	8004fc8 <xTaskResumeAll+0x108>
 8004f02:	4b36      	ldr	r3, [pc, #216]	; (8004fdc <xTaskResumeAll+0x11c>)
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d05e      	beq.n	8004fc8 <xTaskResumeAll+0x108>
 8004f0a:	e02f      	b.n	8004f6c <xTaskResumeAll+0xac>
 8004f0c:	4b34      	ldr	r3, [pc, #208]	; (8004fe0 <xTaskResumeAll+0x120>)
 8004f0e:	68db      	ldr	r3, [r3, #12]
 8004f10:	68db      	ldr	r3, [r3, #12]
 8004f12:	60fb      	str	r3, [r7, #12]
 8004f14:	68fb      	ldr	r3, [r7, #12]
 8004f16:	3318      	adds	r3, #24
 8004f18:	4618      	mov	r0, r3
 8004f1a:	f7fe fff9 	bl	8003f10 <uxListRemove>
 8004f1e:	68fb      	ldr	r3, [r7, #12]
 8004f20:	3304      	adds	r3, #4
 8004f22:	4618      	mov	r0, r3
 8004f24:	f7fe fff4 	bl	8003f10 <uxListRemove>
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f2c:	4b2d      	ldr	r3, [pc, #180]	; (8004fe4 <xTaskResumeAll+0x124>)
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	429a      	cmp	r2, r3
 8004f32:	d903      	bls.n	8004f3c <xTaskResumeAll+0x7c>
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f38:	4a2a      	ldr	r2, [pc, #168]	; (8004fe4 <xTaskResumeAll+0x124>)
 8004f3a:	6013      	str	r3, [r2, #0]
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f40:	4613      	mov	r3, r2
 8004f42:	009b      	lsls	r3, r3, #2
 8004f44:	4413      	add	r3, r2
 8004f46:	009b      	lsls	r3, r3, #2
 8004f48:	4a27      	ldr	r2, [pc, #156]	; (8004fe8 <xTaskResumeAll+0x128>)
 8004f4a:	441a      	add	r2, r3
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	3304      	adds	r3, #4
 8004f50:	4619      	mov	r1, r3
 8004f52:	4610      	mov	r0, r2
 8004f54:	f7fe ff7f 	bl	8003e56 <vListInsertEnd>
 8004f58:	68fb      	ldr	r3, [r7, #12]
 8004f5a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f5c:	4b23      	ldr	r3, [pc, #140]	; (8004fec <xTaskResumeAll+0x12c>)
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f62:	429a      	cmp	r2, r3
 8004f64:	d302      	bcc.n	8004f6c <xTaskResumeAll+0xac>
 8004f66:	4b22      	ldr	r3, [pc, #136]	; (8004ff0 <xTaskResumeAll+0x130>)
 8004f68:	2201      	movs	r2, #1
 8004f6a:	601a      	str	r2, [r3, #0]
 8004f6c:	4b1c      	ldr	r3, [pc, #112]	; (8004fe0 <xTaskResumeAll+0x120>)
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	2b00      	cmp	r3, #0
 8004f72:	d1cb      	bne.n	8004f0c <xTaskResumeAll+0x4c>
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d001      	beq.n	8004f7e <xTaskResumeAll+0xbe>
 8004f7a:	f000 fb5f 	bl	800563c <prvResetNextTaskUnblockTime>
 8004f7e:	4b1d      	ldr	r3, [pc, #116]	; (8004ff4 <xTaskResumeAll+0x134>)
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	607b      	str	r3, [r7, #4]
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d010      	beq.n	8004fac <xTaskResumeAll+0xec>
 8004f8a:	f000 f847 	bl	800501c <xTaskIncrementTick>
 8004f8e:	4603      	mov	r3, r0
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d002      	beq.n	8004f9a <xTaskResumeAll+0xda>
 8004f94:	4b16      	ldr	r3, [pc, #88]	; (8004ff0 <xTaskResumeAll+0x130>)
 8004f96:	2201      	movs	r2, #1
 8004f98:	601a      	str	r2, [r3, #0]
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	3b01      	subs	r3, #1
 8004f9e:	607b      	str	r3, [r7, #4]
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	2b00      	cmp	r3, #0
 8004fa4:	d1f1      	bne.n	8004f8a <xTaskResumeAll+0xca>
 8004fa6:	4b13      	ldr	r3, [pc, #76]	; (8004ff4 <xTaskResumeAll+0x134>)
 8004fa8:	2200      	movs	r2, #0
 8004faa:	601a      	str	r2, [r3, #0]
 8004fac:	4b10      	ldr	r3, [pc, #64]	; (8004ff0 <xTaskResumeAll+0x130>)
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	2b00      	cmp	r3, #0
 8004fb2:	d009      	beq.n	8004fc8 <xTaskResumeAll+0x108>
 8004fb4:	2301      	movs	r3, #1
 8004fb6:	60bb      	str	r3, [r7, #8]
 8004fb8:	4b0f      	ldr	r3, [pc, #60]	; (8004ff8 <xTaskResumeAll+0x138>)
 8004fba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004fbe:	601a      	str	r2, [r3, #0]
 8004fc0:	f3bf 8f4f 	dsb	sy
 8004fc4:	f3bf 8f6f 	isb	sy
 8004fc8:	f001 f8e4 	bl	8006194 <vPortExitCritical>
 8004fcc:	68bb      	ldr	r3, [r7, #8]
 8004fce:	4618      	mov	r0, r3
 8004fd0:	3710      	adds	r7, #16
 8004fd2:	46bd      	mov	sp, r7
 8004fd4:	bd80      	pop	{r7, pc}
 8004fd6:	bf00      	nop
 8004fd8:	20001034 	.word	0x20001034
 8004fdc:	2000100c 	.word	0x2000100c
 8004fe0:	20000fcc 	.word	0x20000fcc
 8004fe4:	20001014 	.word	0x20001014
 8004fe8:	20000b3c 	.word	0x20000b3c
 8004fec:	20000b38 	.word	0x20000b38
 8004ff0:	20001020 	.word	0x20001020
 8004ff4:	2000101c 	.word	0x2000101c
 8004ff8:	e000ed04 	.word	0xe000ed04

08004ffc <xTaskGetTickCount>:
 8004ffc:	b480      	push	{r7}
 8004ffe:	b083      	sub	sp, #12
 8005000:	af00      	add	r7, sp, #0
 8005002:	4b05      	ldr	r3, [pc, #20]	; (8005018 <xTaskGetTickCount+0x1c>)
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	607b      	str	r3, [r7, #4]
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	4618      	mov	r0, r3
 800500c:	370c      	adds	r7, #12
 800500e:	46bd      	mov	sp, r7
 8005010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005014:	4770      	bx	lr
 8005016:	bf00      	nop
 8005018:	20001010 	.word	0x20001010

0800501c <xTaskIncrementTick>:
 800501c:	b580      	push	{r7, lr}
 800501e:	b086      	sub	sp, #24
 8005020:	af00      	add	r7, sp, #0
 8005022:	2300      	movs	r3, #0
 8005024:	617b      	str	r3, [r7, #20]
 8005026:	4b4f      	ldr	r3, [pc, #316]	; (8005164 <xTaskIncrementTick+0x148>)
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	2b00      	cmp	r3, #0
 800502c:	f040 808f 	bne.w	800514e <xTaskIncrementTick+0x132>
 8005030:	4b4d      	ldr	r3, [pc, #308]	; (8005168 <xTaskIncrementTick+0x14c>)
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	3301      	adds	r3, #1
 8005036:	613b      	str	r3, [r7, #16]
 8005038:	4a4b      	ldr	r2, [pc, #300]	; (8005168 <xTaskIncrementTick+0x14c>)
 800503a:	693b      	ldr	r3, [r7, #16]
 800503c:	6013      	str	r3, [r2, #0]
 800503e:	693b      	ldr	r3, [r7, #16]
 8005040:	2b00      	cmp	r3, #0
 8005042:	d120      	bne.n	8005086 <xTaskIncrementTick+0x6a>
 8005044:	4b49      	ldr	r3, [pc, #292]	; (800516c <xTaskIncrementTick+0x150>)
 8005046:	681b      	ldr	r3, [r3, #0]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	2b00      	cmp	r3, #0
 800504c:	d00a      	beq.n	8005064 <xTaskIncrementTick+0x48>
 800504e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005052:	f383 8811 	msr	BASEPRI, r3
 8005056:	f3bf 8f6f 	isb	sy
 800505a:	f3bf 8f4f 	dsb	sy
 800505e:	603b      	str	r3, [r7, #0]
 8005060:	bf00      	nop
 8005062:	e7fe      	b.n	8005062 <xTaskIncrementTick+0x46>
 8005064:	4b41      	ldr	r3, [pc, #260]	; (800516c <xTaskIncrementTick+0x150>)
 8005066:	681b      	ldr	r3, [r3, #0]
 8005068:	60fb      	str	r3, [r7, #12]
 800506a:	4b41      	ldr	r3, [pc, #260]	; (8005170 <xTaskIncrementTick+0x154>)
 800506c:	681b      	ldr	r3, [r3, #0]
 800506e:	4a3f      	ldr	r2, [pc, #252]	; (800516c <xTaskIncrementTick+0x150>)
 8005070:	6013      	str	r3, [r2, #0]
 8005072:	4a3f      	ldr	r2, [pc, #252]	; (8005170 <xTaskIncrementTick+0x154>)
 8005074:	68fb      	ldr	r3, [r7, #12]
 8005076:	6013      	str	r3, [r2, #0]
 8005078:	4b3e      	ldr	r3, [pc, #248]	; (8005174 <xTaskIncrementTick+0x158>)
 800507a:	681b      	ldr	r3, [r3, #0]
 800507c:	3301      	adds	r3, #1
 800507e:	4a3d      	ldr	r2, [pc, #244]	; (8005174 <xTaskIncrementTick+0x158>)
 8005080:	6013      	str	r3, [r2, #0]
 8005082:	f000 fadb 	bl	800563c <prvResetNextTaskUnblockTime>
 8005086:	4b3c      	ldr	r3, [pc, #240]	; (8005178 <xTaskIncrementTick+0x15c>)
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	693a      	ldr	r2, [r7, #16]
 800508c:	429a      	cmp	r2, r3
 800508e:	d349      	bcc.n	8005124 <xTaskIncrementTick+0x108>
 8005090:	4b36      	ldr	r3, [pc, #216]	; (800516c <xTaskIncrementTick+0x150>)
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	681b      	ldr	r3, [r3, #0]
 8005096:	2b00      	cmp	r3, #0
 8005098:	d104      	bne.n	80050a4 <xTaskIncrementTick+0x88>
 800509a:	4b37      	ldr	r3, [pc, #220]	; (8005178 <xTaskIncrementTick+0x15c>)
 800509c:	f04f 32ff 	mov.w	r2, #4294967295
 80050a0:	601a      	str	r2, [r3, #0]
 80050a2:	e03f      	b.n	8005124 <xTaskIncrementTick+0x108>
 80050a4:	4b31      	ldr	r3, [pc, #196]	; (800516c <xTaskIncrementTick+0x150>)
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	68db      	ldr	r3, [r3, #12]
 80050aa:	68db      	ldr	r3, [r3, #12]
 80050ac:	60bb      	str	r3, [r7, #8]
 80050ae:	68bb      	ldr	r3, [r7, #8]
 80050b0:	685b      	ldr	r3, [r3, #4]
 80050b2:	607b      	str	r3, [r7, #4]
 80050b4:	693a      	ldr	r2, [r7, #16]
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	429a      	cmp	r2, r3
 80050ba:	d203      	bcs.n	80050c4 <xTaskIncrementTick+0xa8>
 80050bc:	4a2e      	ldr	r2, [pc, #184]	; (8005178 <xTaskIncrementTick+0x15c>)
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	6013      	str	r3, [r2, #0]
 80050c2:	e02f      	b.n	8005124 <xTaskIncrementTick+0x108>
 80050c4:	68bb      	ldr	r3, [r7, #8]
 80050c6:	3304      	adds	r3, #4
 80050c8:	4618      	mov	r0, r3
 80050ca:	f7fe ff21 	bl	8003f10 <uxListRemove>
 80050ce:	68bb      	ldr	r3, [r7, #8]
 80050d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80050d2:	2b00      	cmp	r3, #0
 80050d4:	d004      	beq.n	80050e0 <xTaskIncrementTick+0xc4>
 80050d6:	68bb      	ldr	r3, [r7, #8]
 80050d8:	3318      	adds	r3, #24
 80050da:	4618      	mov	r0, r3
 80050dc:	f7fe ff18 	bl	8003f10 <uxListRemove>
 80050e0:	68bb      	ldr	r3, [r7, #8]
 80050e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80050e4:	4b25      	ldr	r3, [pc, #148]	; (800517c <xTaskIncrementTick+0x160>)
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	429a      	cmp	r2, r3
 80050ea:	d903      	bls.n	80050f4 <xTaskIncrementTick+0xd8>
 80050ec:	68bb      	ldr	r3, [r7, #8]
 80050ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80050f0:	4a22      	ldr	r2, [pc, #136]	; (800517c <xTaskIncrementTick+0x160>)
 80050f2:	6013      	str	r3, [r2, #0]
 80050f4:	68bb      	ldr	r3, [r7, #8]
 80050f6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80050f8:	4613      	mov	r3, r2
 80050fa:	009b      	lsls	r3, r3, #2
 80050fc:	4413      	add	r3, r2
 80050fe:	009b      	lsls	r3, r3, #2
 8005100:	4a1f      	ldr	r2, [pc, #124]	; (8005180 <xTaskIncrementTick+0x164>)
 8005102:	441a      	add	r2, r3
 8005104:	68bb      	ldr	r3, [r7, #8]
 8005106:	3304      	adds	r3, #4
 8005108:	4619      	mov	r1, r3
 800510a:	4610      	mov	r0, r2
 800510c:	f7fe fea3 	bl	8003e56 <vListInsertEnd>
 8005110:	68bb      	ldr	r3, [r7, #8]
 8005112:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005114:	4b1b      	ldr	r3, [pc, #108]	; (8005184 <xTaskIncrementTick+0x168>)
 8005116:	681b      	ldr	r3, [r3, #0]
 8005118:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800511a:	429a      	cmp	r2, r3
 800511c:	d3b8      	bcc.n	8005090 <xTaskIncrementTick+0x74>
 800511e:	2301      	movs	r3, #1
 8005120:	617b      	str	r3, [r7, #20]
 8005122:	e7b5      	b.n	8005090 <xTaskIncrementTick+0x74>
 8005124:	4b17      	ldr	r3, [pc, #92]	; (8005184 <xTaskIncrementTick+0x168>)
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800512a:	4915      	ldr	r1, [pc, #84]	; (8005180 <xTaskIncrementTick+0x164>)
 800512c:	4613      	mov	r3, r2
 800512e:	009b      	lsls	r3, r3, #2
 8005130:	4413      	add	r3, r2
 8005132:	009b      	lsls	r3, r3, #2
 8005134:	440b      	add	r3, r1
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	2b01      	cmp	r3, #1
 800513a:	d901      	bls.n	8005140 <xTaskIncrementTick+0x124>
 800513c:	2301      	movs	r3, #1
 800513e:	617b      	str	r3, [r7, #20]
 8005140:	4b11      	ldr	r3, [pc, #68]	; (8005188 <xTaskIncrementTick+0x16c>)
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	2b00      	cmp	r3, #0
 8005146:	d007      	beq.n	8005158 <xTaskIncrementTick+0x13c>
 8005148:	2301      	movs	r3, #1
 800514a:	617b      	str	r3, [r7, #20]
 800514c:	e004      	b.n	8005158 <xTaskIncrementTick+0x13c>
 800514e:	4b0f      	ldr	r3, [pc, #60]	; (800518c <xTaskIncrementTick+0x170>)
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	3301      	adds	r3, #1
 8005154:	4a0d      	ldr	r2, [pc, #52]	; (800518c <xTaskIncrementTick+0x170>)
 8005156:	6013      	str	r3, [r2, #0]
 8005158:	697b      	ldr	r3, [r7, #20]
 800515a:	4618      	mov	r0, r3
 800515c:	3718      	adds	r7, #24
 800515e:	46bd      	mov	sp, r7
 8005160:	bd80      	pop	{r7, pc}
 8005162:	bf00      	nop
 8005164:	20001034 	.word	0x20001034
 8005168:	20001010 	.word	0x20001010
 800516c:	20000fc4 	.word	0x20000fc4
 8005170:	20000fc8 	.word	0x20000fc8
 8005174:	20001024 	.word	0x20001024
 8005178:	2000102c 	.word	0x2000102c
 800517c:	20001014 	.word	0x20001014
 8005180:	20000b3c 	.word	0x20000b3c
 8005184:	20000b38 	.word	0x20000b38
 8005188:	20001020 	.word	0x20001020
 800518c:	2000101c 	.word	0x2000101c

08005190 <vTaskSwitchContext>:
 8005190:	b480      	push	{r7}
 8005192:	b085      	sub	sp, #20
 8005194:	af00      	add	r7, sp, #0
 8005196:	4b2a      	ldr	r3, [pc, #168]	; (8005240 <vTaskSwitchContext+0xb0>)
 8005198:	681b      	ldr	r3, [r3, #0]
 800519a:	2b00      	cmp	r3, #0
 800519c:	d003      	beq.n	80051a6 <vTaskSwitchContext+0x16>
 800519e:	4b29      	ldr	r3, [pc, #164]	; (8005244 <vTaskSwitchContext+0xb4>)
 80051a0:	2201      	movs	r2, #1
 80051a2:	601a      	str	r2, [r3, #0]
 80051a4:	e046      	b.n	8005234 <vTaskSwitchContext+0xa4>
 80051a6:	4b27      	ldr	r3, [pc, #156]	; (8005244 <vTaskSwitchContext+0xb4>)
 80051a8:	2200      	movs	r2, #0
 80051aa:	601a      	str	r2, [r3, #0]
 80051ac:	4b26      	ldr	r3, [pc, #152]	; (8005248 <vTaskSwitchContext+0xb8>)
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	60fb      	str	r3, [r7, #12]
 80051b2:	e010      	b.n	80051d6 <vTaskSwitchContext+0x46>
 80051b4:	68fb      	ldr	r3, [r7, #12]
 80051b6:	2b00      	cmp	r3, #0
 80051b8:	d10a      	bne.n	80051d0 <vTaskSwitchContext+0x40>
 80051ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80051be:	f383 8811 	msr	BASEPRI, r3
 80051c2:	f3bf 8f6f 	isb	sy
 80051c6:	f3bf 8f4f 	dsb	sy
 80051ca:	607b      	str	r3, [r7, #4]
 80051cc:	bf00      	nop
 80051ce:	e7fe      	b.n	80051ce <vTaskSwitchContext+0x3e>
 80051d0:	68fb      	ldr	r3, [r7, #12]
 80051d2:	3b01      	subs	r3, #1
 80051d4:	60fb      	str	r3, [r7, #12]
 80051d6:	491d      	ldr	r1, [pc, #116]	; (800524c <vTaskSwitchContext+0xbc>)
 80051d8:	68fa      	ldr	r2, [r7, #12]
 80051da:	4613      	mov	r3, r2
 80051dc:	009b      	lsls	r3, r3, #2
 80051de:	4413      	add	r3, r2
 80051e0:	009b      	lsls	r3, r3, #2
 80051e2:	440b      	add	r3, r1
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	2b00      	cmp	r3, #0
 80051e8:	d0e4      	beq.n	80051b4 <vTaskSwitchContext+0x24>
 80051ea:	68fa      	ldr	r2, [r7, #12]
 80051ec:	4613      	mov	r3, r2
 80051ee:	009b      	lsls	r3, r3, #2
 80051f0:	4413      	add	r3, r2
 80051f2:	009b      	lsls	r3, r3, #2
 80051f4:	4a15      	ldr	r2, [pc, #84]	; (800524c <vTaskSwitchContext+0xbc>)
 80051f6:	4413      	add	r3, r2
 80051f8:	60bb      	str	r3, [r7, #8]
 80051fa:	68bb      	ldr	r3, [r7, #8]
 80051fc:	685b      	ldr	r3, [r3, #4]
 80051fe:	685a      	ldr	r2, [r3, #4]
 8005200:	68bb      	ldr	r3, [r7, #8]
 8005202:	605a      	str	r2, [r3, #4]
 8005204:	68bb      	ldr	r3, [r7, #8]
 8005206:	685a      	ldr	r2, [r3, #4]
 8005208:	68bb      	ldr	r3, [r7, #8]
 800520a:	3308      	adds	r3, #8
 800520c:	429a      	cmp	r2, r3
 800520e:	d104      	bne.n	800521a <vTaskSwitchContext+0x8a>
 8005210:	68bb      	ldr	r3, [r7, #8]
 8005212:	685b      	ldr	r3, [r3, #4]
 8005214:	685a      	ldr	r2, [r3, #4]
 8005216:	68bb      	ldr	r3, [r7, #8]
 8005218:	605a      	str	r2, [r3, #4]
 800521a:	68bb      	ldr	r3, [r7, #8]
 800521c:	685b      	ldr	r3, [r3, #4]
 800521e:	68db      	ldr	r3, [r3, #12]
 8005220:	4a0b      	ldr	r2, [pc, #44]	; (8005250 <vTaskSwitchContext+0xc0>)
 8005222:	6013      	str	r3, [r2, #0]
 8005224:	4a08      	ldr	r2, [pc, #32]	; (8005248 <vTaskSwitchContext+0xb8>)
 8005226:	68fb      	ldr	r3, [r7, #12]
 8005228:	6013      	str	r3, [r2, #0]
 800522a:	4b09      	ldr	r3, [pc, #36]	; (8005250 <vTaskSwitchContext+0xc0>)
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	3354      	adds	r3, #84	; 0x54
 8005230:	4a08      	ldr	r2, [pc, #32]	; (8005254 <vTaskSwitchContext+0xc4>)
 8005232:	6013      	str	r3, [r2, #0]
 8005234:	bf00      	nop
 8005236:	3714      	adds	r7, #20
 8005238:	46bd      	mov	sp, r7
 800523a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800523e:	4770      	bx	lr
 8005240:	20001034 	.word	0x20001034
 8005244:	20001020 	.word	0x20001020
 8005248:	20001014 	.word	0x20001014
 800524c:	20000b3c 	.word	0x20000b3c
 8005250:	20000b38 	.word	0x20000b38
 8005254:	2000005c 	.word	0x2000005c

08005258 <vTaskPlaceOnEventList>:
 8005258:	b580      	push	{r7, lr}
 800525a:	b084      	sub	sp, #16
 800525c:	af00      	add	r7, sp, #0
 800525e:	6078      	str	r0, [r7, #4]
 8005260:	6039      	str	r1, [r7, #0]
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	2b00      	cmp	r3, #0
 8005266:	d10a      	bne.n	800527e <vTaskPlaceOnEventList+0x26>
 8005268:	f04f 0350 	mov.w	r3, #80	; 0x50
 800526c:	f383 8811 	msr	BASEPRI, r3
 8005270:	f3bf 8f6f 	isb	sy
 8005274:	f3bf 8f4f 	dsb	sy
 8005278:	60fb      	str	r3, [r7, #12]
 800527a:	bf00      	nop
 800527c:	e7fe      	b.n	800527c <vTaskPlaceOnEventList+0x24>
 800527e:	4b07      	ldr	r3, [pc, #28]	; (800529c <vTaskPlaceOnEventList+0x44>)
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	3318      	adds	r3, #24
 8005284:	4619      	mov	r1, r3
 8005286:	6878      	ldr	r0, [r7, #4]
 8005288:	f7fe fe09 	bl	8003e9e <vListInsert>
 800528c:	2101      	movs	r1, #1
 800528e:	6838      	ldr	r0, [r7, #0]
 8005290:	f000 fa80 	bl	8005794 <prvAddCurrentTaskToDelayedList>
 8005294:	bf00      	nop
 8005296:	3710      	adds	r7, #16
 8005298:	46bd      	mov	sp, r7
 800529a:	bd80      	pop	{r7, pc}
 800529c:	20000b38 	.word	0x20000b38

080052a0 <vTaskPlaceOnEventListRestricted>:
 80052a0:	b580      	push	{r7, lr}
 80052a2:	b086      	sub	sp, #24
 80052a4:	af00      	add	r7, sp, #0
 80052a6:	60f8      	str	r0, [r7, #12]
 80052a8:	60b9      	str	r1, [r7, #8]
 80052aa:	607a      	str	r2, [r7, #4]
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d10a      	bne.n	80052c8 <vTaskPlaceOnEventListRestricted+0x28>
 80052b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80052b6:	f383 8811 	msr	BASEPRI, r3
 80052ba:	f3bf 8f6f 	isb	sy
 80052be:	f3bf 8f4f 	dsb	sy
 80052c2:	617b      	str	r3, [r7, #20]
 80052c4:	bf00      	nop
 80052c6:	e7fe      	b.n	80052c6 <vTaskPlaceOnEventListRestricted+0x26>
 80052c8:	4b0a      	ldr	r3, [pc, #40]	; (80052f4 <vTaskPlaceOnEventListRestricted+0x54>)
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	3318      	adds	r3, #24
 80052ce:	4619      	mov	r1, r3
 80052d0:	68f8      	ldr	r0, [r7, #12]
 80052d2:	f7fe fdc0 	bl	8003e56 <vListInsertEnd>
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	2b00      	cmp	r3, #0
 80052da:	d002      	beq.n	80052e2 <vTaskPlaceOnEventListRestricted+0x42>
 80052dc:	f04f 33ff 	mov.w	r3, #4294967295
 80052e0:	60bb      	str	r3, [r7, #8]
 80052e2:	6879      	ldr	r1, [r7, #4]
 80052e4:	68b8      	ldr	r0, [r7, #8]
 80052e6:	f000 fa55 	bl	8005794 <prvAddCurrentTaskToDelayedList>
 80052ea:	bf00      	nop
 80052ec:	3718      	adds	r7, #24
 80052ee:	46bd      	mov	sp, r7
 80052f0:	bd80      	pop	{r7, pc}
 80052f2:	bf00      	nop
 80052f4:	20000b38 	.word	0x20000b38

080052f8 <xTaskRemoveFromEventList>:
 80052f8:	b580      	push	{r7, lr}
 80052fa:	b086      	sub	sp, #24
 80052fc:	af00      	add	r7, sp, #0
 80052fe:	6078      	str	r0, [r7, #4]
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	68db      	ldr	r3, [r3, #12]
 8005304:	68db      	ldr	r3, [r3, #12]
 8005306:	613b      	str	r3, [r7, #16]
 8005308:	693b      	ldr	r3, [r7, #16]
 800530a:	2b00      	cmp	r3, #0
 800530c:	d10a      	bne.n	8005324 <xTaskRemoveFromEventList+0x2c>
 800530e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005312:	f383 8811 	msr	BASEPRI, r3
 8005316:	f3bf 8f6f 	isb	sy
 800531a:	f3bf 8f4f 	dsb	sy
 800531e:	60fb      	str	r3, [r7, #12]
 8005320:	bf00      	nop
 8005322:	e7fe      	b.n	8005322 <xTaskRemoveFromEventList+0x2a>
 8005324:	693b      	ldr	r3, [r7, #16]
 8005326:	3318      	adds	r3, #24
 8005328:	4618      	mov	r0, r3
 800532a:	f7fe fdf1 	bl	8003f10 <uxListRemove>
 800532e:	4b1e      	ldr	r3, [pc, #120]	; (80053a8 <xTaskRemoveFromEventList+0xb0>)
 8005330:	681b      	ldr	r3, [r3, #0]
 8005332:	2b00      	cmp	r3, #0
 8005334:	d11d      	bne.n	8005372 <xTaskRemoveFromEventList+0x7a>
 8005336:	693b      	ldr	r3, [r7, #16]
 8005338:	3304      	adds	r3, #4
 800533a:	4618      	mov	r0, r3
 800533c:	f7fe fde8 	bl	8003f10 <uxListRemove>
 8005340:	693b      	ldr	r3, [r7, #16]
 8005342:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005344:	4b19      	ldr	r3, [pc, #100]	; (80053ac <xTaskRemoveFromEventList+0xb4>)
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	429a      	cmp	r2, r3
 800534a:	d903      	bls.n	8005354 <xTaskRemoveFromEventList+0x5c>
 800534c:	693b      	ldr	r3, [r7, #16]
 800534e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005350:	4a16      	ldr	r2, [pc, #88]	; (80053ac <xTaskRemoveFromEventList+0xb4>)
 8005352:	6013      	str	r3, [r2, #0]
 8005354:	693b      	ldr	r3, [r7, #16]
 8005356:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005358:	4613      	mov	r3, r2
 800535a:	009b      	lsls	r3, r3, #2
 800535c:	4413      	add	r3, r2
 800535e:	009b      	lsls	r3, r3, #2
 8005360:	4a13      	ldr	r2, [pc, #76]	; (80053b0 <xTaskRemoveFromEventList+0xb8>)
 8005362:	441a      	add	r2, r3
 8005364:	693b      	ldr	r3, [r7, #16]
 8005366:	3304      	adds	r3, #4
 8005368:	4619      	mov	r1, r3
 800536a:	4610      	mov	r0, r2
 800536c:	f7fe fd73 	bl	8003e56 <vListInsertEnd>
 8005370:	e005      	b.n	800537e <xTaskRemoveFromEventList+0x86>
 8005372:	693b      	ldr	r3, [r7, #16]
 8005374:	3318      	adds	r3, #24
 8005376:	4619      	mov	r1, r3
 8005378:	480e      	ldr	r0, [pc, #56]	; (80053b4 <xTaskRemoveFromEventList+0xbc>)
 800537a:	f7fe fd6c 	bl	8003e56 <vListInsertEnd>
 800537e:	693b      	ldr	r3, [r7, #16]
 8005380:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005382:	4b0d      	ldr	r3, [pc, #52]	; (80053b8 <xTaskRemoveFromEventList+0xc0>)
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005388:	429a      	cmp	r2, r3
 800538a:	d905      	bls.n	8005398 <xTaskRemoveFromEventList+0xa0>
 800538c:	2301      	movs	r3, #1
 800538e:	617b      	str	r3, [r7, #20]
 8005390:	4b0a      	ldr	r3, [pc, #40]	; (80053bc <xTaskRemoveFromEventList+0xc4>)
 8005392:	2201      	movs	r2, #1
 8005394:	601a      	str	r2, [r3, #0]
 8005396:	e001      	b.n	800539c <xTaskRemoveFromEventList+0xa4>
 8005398:	2300      	movs	r3, #0
 800539a:	617b      	str	r3, [r7, #20]
 800539c:	697b      	ldr	r3, [r7, #20]
 800539e:	4618      	mov	r0, r3
 80053a0:	3718      	adds	r7, #24
 80053a2:	46bd      	mov	sp, r7
 80053a4:	bd80      	pop	{r7, pc}
 80053a6:	bf00      	nop
 80053a8:	20001034 	.word	0x20001034
 80053ac:	20001014 	.word	0x20001014
 80053b0:	20000b3c 	.word	0x20000b3c
 80053b4:	20000fcc 	.word	0x20000fcc
 80053b8:	20000b38 	.word	0x20000b38
 80053bc:	20001020 	.word	0x20001020

080053c0 <vTaskInternalSetTimeOutState>:
 80053c0:	b480      	push	{r7}
 80053c2:	b083      	sub	sp, #12
 80053c4:	af00      	add	r7, sp, #0
 80053c6:	6078      	str	r0, [r7, #4]
 80053c8:	4b06      	ldr	r3, [pc, #24]	; (80053e4 <vTaskInternalSetTimeOutState+0x24>)
 80053ca:	681a      	ldr	r2, [r3, #0]
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	601a      	str	r2, [r3, #0]
 80053d0:	4b05      	ldr	r3, [pc, #20]	; (80053e8 <vTaskInternalSetTimeOutState+0x28>)
 80053d2:	681a      	ldr	r2, [r3, #0]
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	605a      	str	r2, [r3, #4]
 80053d8:	bf00      	nop
 80053da:	370c      	adds	r7, #12
 80053dc:	46bd      	mov	sp, r7
 80053de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053e2:	4770      	bx	lr
 80053e4:	20001024 	.word	0x20001024
 80053e8:	20001010 	.word	0x20001010

080053ec <xTaskCheckForTimeOut>:
 80053ec:	b580      	push	{r7, lr}
 80053ee:	b088      	sub	sp, #32
 80053f0:	af00      	add	r7, sp, #0
 80053f2:	6078      	str	r0, [r7, #4]
 80053f4:	6039      	str	r1, [r7, #0]
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d10a      	bne.n	8005412 <xTaskCheckForTimeOut+0x26>
 80053fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005400:	f383 8811 	msr	BASEPRI, r3
 8005404:	f3bf 8f6f 	isb	sy
 8005408:	f3bf 8f4f 	dsb	sy
 800540c:	613b      	str	r3, [r7, #16]
 800540e:	bf00      	nop
 8005410:	e7fe      	b.n	8005410 <xTaskCheckForTimeOut+0x24>
 8005412:	683b      	ldr	r3, [r7, #0]
 8005414:	2b00      	cmp	r3, #0
 8005416:	d10a      	bne.n	800542e <xTaskCheckForTimeOut+0x42>
 8005418:	f04f 0350 	mov.w	r3, #80	; 0x50
 800541c:	f383 8811 	msr	BASEPRI, r3
 8005420:	f3bf 8f6f 	isb	sy
 8005424:	f3bf 8f4f 	dsb	sy
 8005428:	60fb      	str	r3, [r7, #12]
 800542a:	bf00      	nop
 800542c:	e7fe      	b.n	800542c <xTaskCheckForTimeOut+0x40>
 800542e:	f000 fe81 	bl	8006134 <vPortEnterCritical>
 8005432:	4b1d      	ldr	r3, [pc, #116]	; (80054a8 <xTaskCheckForTimeOut+0xbc>)
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	61bb      	str	r3, [r7, #24]
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	685b      	ldr	r3, [r3, #4]
 800543c:	69ba      	ldr	r2, [r7, #24]
 800543e:	1ad3      	subs	r3, r2, r3
 8005440:	617b      	str	r3, [r7, #20]
 8005442:	683b      	ldr	r3, [r7, #0]
 8005444:	681b      	ldr	r3, [r3, #0]
 8005446:	f1b3 3fff 	cmp.w	r3, #4294967295
 800544a:	d102      	bne.n	8005452 <xTaskCheckForTimeOut+0x66>
 800544c:	2300      	movs	r3, #0
 800544e:	61fb      	str	r3, [r7, #28]
 8005450:	e023      	b.n	800549a <xTaskCheckForTimeOut+0xae>
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	681a      	ldr	r2, [r3, #0]
 8005456:	4b15      	ldr	r3, [pc, #84]	; (80054ac <xTaskCheckForTimeOut+0xc0>)
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	429a      	cmp	r2, r3
 800545c:	d007      	beq.n	800546e <xTaskCheckForTimeOut+0x82>
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	685b      	ldr	r3, [r3, #4]
 8005462:	69ba      	ldr	r2, [r7, #24]
 8005464:	429a      	cmp	r2, r3
 8005466:	d302      	bcc.n	800546e <xTaskCheckForTimeOut+0x82>
 8005468:	2301      	movs	r3, #1
 800546a:	61fb      	str	r3, [r7, #28]
 800546c:	e015      	b.n	800549a <xTaskCheckForTimeOut+0xae>
 800546e:	683b      	ldr	r3, [r7, #0]
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	697a      	ldr	r2, [r7, #20]
 8005474:	429a      	cmp	r2, r3
 8005476:	d20b      	bcs.n	8005490 <xTaskCheckForTimeOut+0xa4>
 8005478:	683b      	ldr	r3, [r7, #0]
 800547a:	681a      	ldr	r2, [r3, #0]
 800547c:	697b      	ldr	r3, [r7, #20]
 800547e:	1ad2      	subs	r2, r2, r3
 8005480:	683b      	ldr	r3, [r7, #0]
 8005482:	601a      	str	r2, [r3, #0]
 8005484:	6878      	ldr	r0, [r7, #4]
 8005486:	f7ff ff9b 	bl	80053c0 <vTaskInternalSetTimeOutState>
 800548a:	2300      	movs	r3, #0
 800548c:	61fb      	str	r3, [r7, #28]
 800548e:	e004      	b.n	800549a <xTaskCheckForTimeOut+0xae>
 8005490:	683b      	ldr	r3, [r7, #0]
 8005492:	2200      	movs	r2, #0
 8005494:	601a      	str	r2, [r3, #0]
 8005496:	2301      	movs	r3, #1
 8005498:	61fb      	str	r3, [r7, #28]
 800549a:	f000 fe7b 	bl	8006194 <vPortExitCritical>
 800549e:	69fb      	ldr	r3, [r7, #28]
 80054a0:	4618      	mov	r0, r3
 80054a2:	3720      	adds	r7, #32
 80054a4:	46bd      	mov	sp, r7
 80054a6:	bd80      	pop	{r7, pc}
 80054a8:	20001010 	.word	0x20001010
 80054ac:	20001024 	.word	0x20001024

080054b0 <vTaskMissedYield>:
 80054b0:	b480      	push	{r7}
 80054b2:	af00      	add	r7, sp, #0
 80054b4:	4b03      	ldr	r3, [pc, #12]	; (80054c4 <vTaskMissedYield+0x14>)
 80054b6:	2201      	movs	r2, #1
 80054b8:	601a      	str	r2, [r3, #0]
 80054ba:	bf00      	nop
 80054bc:	46bd      	mov	sp, r7
 80054be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054c2:	4770      	bx	lr
 80054c4:	20001020 	.word	0x20001020

080054c8 <prvIdleTask>:
 80054c8:	b580      	push	{r7, lr}
 80054ca:	b082      	sub	sp, #8
 80054cc:	af00      	add	r7, sp, #0
 80054ce:	6078      	str	r0, [r7, #4]
 80054d0:	f000 f852 	bl	8005578 <prvCheckTasksWaitingTermination>
 80054d4:	4b06      	ldr	r3, [pc, #24]	; (80054f0 <prvIdleTask+0x28>)
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	2b01      	cmp	r3, #1
 80054da:	d9f9      	bls.n	80054d0 <prvIdleTask+0x8>
 80054dc:	4b05      	ldr	r3, [pc, #20]	; (80054f4 <prvIdleTask+0x2c>)
 80054de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80054e2:	601a      	str	r2, [r3, #0]
 80054e4:	f3bf 8f4f 	dsb	sy
 80054e8:	f3bf 8f6f 	isb	sy
 80054ec:	e7f0      	b.n	80054d0 <prvIdleTask+0x8>
 80054ee:	bf00      	nop
 80054f0:	20000b3c 	.word	0x20000b3c
 80054f4:	e000ed04 	.word	0xe000ed04

080054f8 <prvInitialiseTaskLists>:
 80054f8:	b580      	push	{r7, lr}
 80054fa:	b082      	sub	sp, #8
 80054fc:	af00      	add	r7, sp, #0
 80054fe:	2300      	movs	r3, #0
 8005500:	607b      	str	r3, [r7, #4]
 8005502:	e00c      	b.n	800551e <prvInitialiseTaskLists+0x26>
 8005504:	687a      	ldr	r2, [r7, #4]
 8005506:	4613      	mov	r3, r2
 8005508:	009b      	lsls	r3, r3, #2
 800550a:	4413      	add	r3, r2
 800550c:	009b      	lsls	r3, r3, #2
 800550e:	4a12      	ldr	r2, [pc, #72]	; (8005558 <prvInitialiseTaskLists+0x60>)
 8005510:	4413      	add	r3, r2
 8005512:	4618      	mov	r0, r3
 8005514:	f7fe fc72 	bl	8003dfc <vListInitialise>
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	3301      	adds	r3, #1
 800551c:	607b      	str	r3, [r7, #4]
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	2b37      	cmp	r3, #55	; 0x37
 8005522:	d9ef      	bls.n	8005504 <prvInitialiseTaskLists+0xc>
 8005524:	480d      	ldr	r0, [pc, #52]	; (800555c <prvInitialiseTaskLists+0x64>)
 8005526:	f7fe fc69 	bl	8003dfc <vListInitialise>
 800552a:	480d      	ldr	r0, [pc, #52]	; (8005560 <prvInitialiseTaskLists+0x68>)
 800552c:	f7fe fc66 	bl	8003dfc <vListInitialise>
 8005530:	480c      	ldr	r0, [pc, #48]	; (8005564 <prvInitialiseTaskLists+0x6c>)
 8005532:	f7fe fc63 	bl	8003dfc <vListInitialise>
 8005536:	480c      	ldr	r0, [pc, #48]	; (8005568 <prvInitialiseTaskLists+0x70>)
 8005538:	f7fe fc60 	bl	8003dfc <vListInitialise>
 800553c:	480b      	ldr	r0, [pc, #44]	; (800556c <prvInitialiseTaskLists+0x74>)
 800553e:	f7fe fc5d 	bl	8003dfc <vListInitialise>
 8005542:	4b0b      	ldr	r3, [pc, #44]	; (8005570 <prvInitialiseTaskLists+0x78>)
 8005544:	4a05      	ldr	r2, [pc, #20]	; (800555c <prvInitialiseTaskLists+0x64>)
 8005546:	601a      	str	r2, [r3, #0]
 8005548:	4b0a      	ldr	r3, [pc, #40]	; (8005574 <prvInitialiseTaskLists+0x7c>)
 800554a:	4a05      	ldr	r2, [pc, #20]	; (8005560 <prvInitialiseTaskLists+0x68>)
 800554c:	601a      	str	r2, [r3, #0]
 800554e:	bf00      	nop
 8005550:	3708      	adds	r7, #8
 8005552:	46bd      	mov	sp, r7
 8005554:	bd80      	pop	{r7, pc}
 8005556:	bf00      	nop
 8005558:	20000b3c 	.word	0x20000b3c
 800555c:	20000f9c 	.word	0x20000f9c
 8005560:	20000fb0 	.word	0x20000fb0
 8005564:	20000fcc 	.word	0x20000fcc
 8005568:	20000fe0 	.word	0x20000fe0
 800556c:	20000ff8 	.word	0x20000ff8
 8005570:	20000fc4 	.word	0x20000fc4
 8005574:	20000fc8 	.word	0x20000fc8

08005578 <prvCheckTasksWaitingTermination>:
 8005578:	b580      	push	{r7, lr}
 800557a:	b082      	sub	sp, #8
 800557c:	af00      	add	r7, sp, #0
 800557e:	e019      	b.n	80055b4 <prvCheckTasksWaitingTermination+0x3c>
 8005580:	f000 fdd8 	bl	8006134 <vPortEnterCritical>
 8005584:	4b10      	ldr	r3, [pc, #64]	; (80055c8 <prvCheckTasksWaitingTermination+0x50>)
 8005586:	68db      	ldr	r3, [r3, #12]
 8005588:	68db      	ldr	r3, [r3, #12]
 800558a:	607b      	str	r3, [r7, #4]
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	3304      	adds	r3, #4
 8005590:	4618      	mov	r0, r3
 8005592:	f7fe fcbd 	bl	8003f10 <uxListRemove>
 8005596:	4b0d      	ldr	r3, [pc, #52]	; (80055cc <prvCheckTasksWaitingTermination+0x54>)
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	3b01      	subs	r3, #1
 800559c:	4a0b      	ldr	r2, [pc, #44]	; (80055cc <prvCheckTasksWaitingTermination+0x54>)
 800559e:	6013      	str	r3, [r2, #0]
 80055a0:	4b0b      	ldr	r3, [pc, #44]	; (80055d0 <prvCheckTasksWaitingTermination+0x58>)
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	3b01      	subs	r3, #1
 80055a6:	4a0a      	ldr	r2, [pc, #40]	; (80055d0 <prvCheckTasksWaitingTermination+0x58>)
 80055a8:	6013      	str	r3, [r2, #0]
 80055aa:	f000 fdf3 	bl	8006194 <vPortExitCritical>
 80055ae:	6878      	ldr	r0, [r7, #4]
 80055b0:	f000 f810 	bl	80055d4 <prvDeleteTCB>
 80055b4:	4b06      	ldr	r3, [pc, #24]	; (80055d0 <prvCheckTasksWaitingTermination+0x58>)
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	2b00      	cmp	r3, #0
 80055ba:	d1e1      	bne.n	8005580 <prvCheckTasksWaitingTermination+0x8>
 80055bc:	bf00      	nop
 80055be:	bf00      	nop
 80055c0:	3708      	adds	r7, #8
 80055c2:	46bd      	mov	sp, r7
 80055c4:	bd80      	pop	{r7, pc}
 80055c6:	bf00      	nop
 80055c8:	20000fe0 	.word	0x20000fe0
 80055cc:	2000100c 	.word	0x2000100c
 80055d0:	20000ff4 	.word	0x20000ff4

080055d4 <prvDeleteTCB>:
 80055d4:	b580      	push	{r7, lr}
 80055d6:	b084      	sub	sp, #16
 80055d8:	af00      	add	r7, sp, #0
 80055da:	6078      	str	r0, [r7, #4]
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	3354      	adds	r3, #84	; 0x54
 80055e0:	4618      	mov	r0, r3
 80055e2:	f001 fba7 	bl	8006d34 <_reclaim_reent>
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	d108      	bne.n	8005602 <prvDeleteTCB+0x2e>
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80055f4:	4618      	mov	r0, r3
 80055f6:	f000 ff8b 	bl	8006510 <vPortFree>
 80055fa:	6878      	ldr	r0, [r7, #4]
 80055fc:	f000 ff88 	bl	8006510 <vPortFree>
 8005600:	e018      	b.n	8005634 <prvDeleteTCB+0x60>
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 8005608:	2b01      	cmp	r3, #1
 800560a:	d103      	bne.n	8005614 <prvDeleteTCB+0x40>
 800560c:	6878      	ldr	r0, [r7, #4]
 800560e:	f000 ff7f 	bl	8006510 <vPortFree>
 8005612:	e00f      	b.n	8005634 <prvDeleteTCB+0x60>
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 800561a:	2b02      	cmp	r3, #2
 800561c:	d00a      	beq.n	8005634 <prvDeleteTCB+0x60>
 800561e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005622:	f383 8811 	msr	BASEPRI, r3
 8005626:	f3bf 8f6f 	isb	sy
 800562a:	f3bf 8f4f 	dsb	sy
 800562e:	60fb      	str	r3, [r7, #12]
 8005630:	bf00      	nop
 8005632:	e7fe      	b.n	8005632 <prvDeleteTCB+0x5e>
 8005634:	bf00      	nop
 8005636:	3710      	adds	r7, #16
 8005638:	46bd      	mov	sp, r7
 800563a:	bd80      	pop	{r7, pc}

0800563c <prvResetNextTaskUnblockTime>:
 800563c:	b480      	push	{r7}
 800563e:	b083      	sub	sp, #12
 8005640:	af00      	add	r7, sp, #0
 8005642:	4b0c      	ldr	r3, [pc, #48]	; (8005674 <prvResetNextTaskUnblockTime+0x38>)
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	2b00      	cmp	r3, #0
 800564a:	d104      	bne.n	8005656 <prvResetNextTaskUnblockTime+0x1a>
 800564c:	4b0a      	ldr	r3, [pc, #40]	; (8005678 <prvResetNextTaskUnblockTime+0x3c>)
 800564e:	f04f 32ff 	mov.w	r2, #4294967295
 8005652:	601a      	str	r2, [r3, #0]
 8005654:	e008      	b.n	8005668 <prvResetNextTaskUnblockTime+0x2c>
 8005656:	4b07      	ldr	r3, [pc, #28]	; (8005674 <prvResetNextTaskUnblockTime+0x38>)
 8005658:	681b      	ldr	r3, [r3, #0]
 800565a:	68db      	ldr	r3, [r3, #12]
 800565c:	68db      	ldr	r3, [r3, #12]
 800565e:	607b      	str	r3, [r7, #4]
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	685b      	ldr	r3, [r3, #4]
 8005664:	4a04      	ldr	r2, [pc, #16]	; (8005678 <prvResetNextTaskUnblockTime+0x3c>)
 8005666:	6013      	str	r3, [r2, #0]
 8005668:	bf00      	nop
 800566a:	370c      	adds	r7, #12
 800566c:	46bd      	mov	sp, r7
 800566e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005672:	4770      	bx	lr
 8005674:	20000fc4 	.word	0x20000fc4
 8005678:	2000102c 	.word	0x2000102c

0800567c <xTaskGetSchedulerState>:
 800567c:	b480      	push	{r7}
 800567e:	b083      	sub	sp, #12
 8005680:	af00      	add	r7, sp, #0
 8005682:	4b0b      	ldr	r3, [pc, #44]	; (80056b0 <xTaskGetSchedulerState+0x34>)
 8005684:	681b      	ldr	r3, [r3, #0]
 8005686:	2b00      	cmp	r3, #0
 8005688:	d102      	bne.n	8005690 <xTaskGetSchedulerState+0x14>
 800568a:	2301      	movs	r3, #1
 800568c:	607b      	str	r3, [r7, #4]
 800568e:	e008      	b.n	80056a2 <xTaskGetSchedulerState+0x26>
 8005690:	4b08      	ldr	r3, [pc, #32]	; (80056b4 <xTaskGetSchedulerState+0x38>)
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	2b00      	cmp	r3, #0
 8005696:	d102      	bne.n	800569e <xTaskGetSchedulerState+0x22>
 8005698:	2302      	movs	r3, #2
 800569a:	607b      	str	r3, [r7, #4]
 800569c:	e001      	b.n	80056a2 <xTaskGetSchedulerState+0x26>
 800569e:	2300      	movs	r3, #0
 80056a0:	607b      	str	r3, [r7, #4]
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	4618      	mov	r0, r3
 80056a6:	370c      	adds	r7, #12
 80056a8:	46bd      	mov	sp, r7
 80056aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056ae:	4770      	bx	lr
 80056b0:	20001018 	.word	0x20001018
 80056b4:	20001034 	.word	0x20001034

080056b8 <xTaskPriorityDisinherit>:
 80056b8:	b580      	push	{r7, lr}
 80056ba:	b086      	sub	sp, #24
 80056bc:	af00      	add	r7, sp, #0
 80056be:	6078      	str	r0, [r7, #4]
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	613b      	str	r3, [r7, #16]
 80056c4:	2300      	movs	r3, #0
 80056c6:	617b      	str	r3, [r7, #20]
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d056      	beq.n	800577c <xTaskPriorityDisinherit+0xc4>
 80056ce:	4b2e      	ldr	r3, [pc, #184]	; (8005788 <xTaskPriorityDisinherit+0xd0>)
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	693a      	ldr	r2, [r7, #16]
 80056d4:	429a      	cmp	r2, r3
 80056d6:	d00a      	beq.n	80056ee <xTaskPriorityDisinherit+0x36>
 80056d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80056dc:	f383 8811 	msr	BASEPRI, r3
 80056e0:	f3bf 8f6f 	isb	sy
 80056e4:	f3bf 8f4f 	dsb	sy
 80056e8:	60fb      	str	r3, [r7, #12]
 80056ea:	bf00      	nop
 80056ec:	e7fe      	b.n	80056ec <xTaskPriorityDisinherit+0x34>
 80056ee:	693b      	ldr	r3, [r7, #16]
 80056f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80056f2:	2b00      	cmp	r3, #0
 80056f4:	d10a      	bne.n	800570c <xTaskPriorityDisinherit+0x54>
 80056f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80056fa:	f383 8811 	msr	BASEPRI, r3
 80056fe:	f3bf 8f6f 	isb	sy
 8005702:	f3bf 8f4f 	dsb	sy
 8005706:	60bb      	str	r3, [r7, #8]
 8005708:	bf00      	nop
 800570a:	e7fe      	b.n	800570a <xTaskPriorityDisinherit+0x52>
 800570c:	693b      	ldr	r3, [r7, #16]
 800570e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005710:	1e5a      	subs	r2, r3, #1
 8005712:	693b      	ldr	r3, [r7, #16]
 8005714:	651a      	str	r2, [r3, #80]	; 0x50
 8005716:	693b      	ldr	r3, [r7, #16]
 8005718:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800571a:	693b      	ldr	r3, [r7, #16]
 800571c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800571e:	429a      	cmp	r2, r3
 8005720:	d02c      	beq.n	800577c <xTaskPriorityDisinherit+0xc4>
 8005722:	693b      	ldr	r3, [r7, #16]
 8005724:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005726:	2b00      	cmp	r3, #0
 8005728:	d128      	bne.n	800577c <xTaskPriorityDisinherit+0xc4>
 800572a:	693b      	ldr	r3, [r7, #16]
 800572c:	3304      	adds	r3, #4
 800572e:	4618      	mov	r0, r3
 8005730:	f7fe fbee 	bl	8003f10 <uxListRemove>
 8005734:	693b      	ldr	r3, [r7, #16]
 8005736:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005738:	693b      	ldr	r3, [r7, #16]
 800573a:	62da      	str	r2, [r3, #44]	; 0x2c
 800573c:	693b      	ldr	r3, [r7, #16]
 800573e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005740:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005744:	693b      	ldr	r3, [r7, #16]
 8005746:	619a      	str	r2, [r3, #24]
 8005748:	693b      	ldr	r3, [r7, #16]
 800574a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800574c:	4b0f      	ldr	r3, [pc, #60]	; (800578c <xTaskPriorityDisinherit+0xd4>)
 800574e:	681b      	ldr	r3, [r3, #0]
 8005750:	429a      	cmp	r2, r3
 8005752:	d903      	bls.n	800575c <xTaskPriorityDisinherit+0xa4>
 8005754:	693b      	ldr	r3, [r7, #16]
 8005756:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005758:	4a0c      	ldr	r2, [pc, #48]	; (800578c <xTaskPriorityDisinherit+0xd4>)
 800575a:	6013      	str	r3, [r2, #0]
 800575c:	693b      	ldr	r3, [r7, #16]
 800575e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005760:	4613      	mov	r3, r2
 8005762:	009b      	lsls	r3, r3, #2
 8005764:	4413      	add	r3, r2
 8005766:	009b      	lsls	r3, r3, #2
 8005768:	4a09      	ldr	r2, [pc, #36]	; (8005790 <xTaskPriorityDisinherit+0xd8>)
 800576a:	441a      	add	r2, r3
 800576c:	693b      	ldr	r3, [r7, #16]
 800576e:	3304      	adds	r3, #4
 8005770:	4619      	mov	r1, r3
 8005772:	4610      	mov	r0, r2
 8005774:	f7fe fb6f 	bl	8003e56 <vListInsertEnd>
 8005778:	2301      	movs	r3, #1
 800577a:	617b      	str	r3, [r7, #20]
 800577c:	697b      	ldr	r3, [r7, #20]
 800577e:	4618      	mov	r0, r3
 8005780:	3718      	adds	r7, #24
 8005782:	46bd      	mov	sp, r7
 8005784:	bd80      	pop	{r7, pc}
 8005786:	bf00      	nop
 8005788:	20000b38 	.word	0x20000b38
 800578c:	20001014 	.word	0x20001014
 8005790:	20000b3c 	.word	0x20000b3c

08005794 <prvAddCurrentTaskToDelayedList>:
 8005794:	b580      	push	{r7, lr}
 8005796:	b084      	sub	sp, #16
 8005798:	af00      	add	r7, sp, #0
 800579a:	6078      	str	r0, [r7, #4]
 800579c:	6039      	str	r1, [r7, #0]
 800579e:	4b21      	ldr	r3, [pc, #132]	; (8005824 <prvAddCurrentTaskToDelayedList+0x90>)
 80057a0:	681b      	ldr	r3, [r3, #0]
 80057a2:	60fb      	str	r3, [r7, #12]
 80057a4:	4b20      	ldr	r3, [pc, #128]	; (8005828 <prvAddCurrentTaskToDelayedList+0x94>)
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	3304      	adds	r3, #4
 80057aa:	4618      	mov	r0, r3
 80057ac:	f7fe fbb0 	bl	8003f10 <uxListRemove>
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80057b6:	d10a      	bne.n	80057ce <prvAddCurrentTaskToDelayedList+0x3a>
 80057b8:	683b      	ldr	r3, [r7, #0]
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d007      	beq.n	80057ce <prvAddCurrentTaskToDelayedList+0x3a>
 80057be:	4b1a      	ldr	r3, [pc, #104]	; (8005828 <prvAddCurrentTaskToDelayedList+0x94>)
 80057c0:	681b      	ldr	r3, [r3, #0]
 80057c2:	3304      	adds	r3, #4
 80057c4:	4619      	mov	r1, r3
 80057c6:	4819      	ldr	r0, [pc, #100]	; (800582c <prvAddCurrentTaskToDelayedList+0x98>)
 80057c8:	f7fe fb45 	bl	8003e56 <vListInsertEnd>
 80057cc:	e026      	b.n	800581c <prvAddCurrentTaskToDelayedList+0x88>
 80057ce:	68fa      	ldr	r2, [r7, #12]
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	4413      	add	r3, r2
 80057d4:	60bb      	str	r3, [r7, #8]
 80057d6:	4b14      	ldr	r3, [pc, #80]	; (8005828 <prvAddCurrentTaskToDelayedList+0x94>)
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	68ba      	ldr	r2, [r7, #8]
 80057dc:	605a      	str	r2, [r3, #4]
 80057de:	68ba      	ldr	r2, [r7, #8]
 80057e0:	68fb      	ldr	r3, [r7, #12]
 80057e2:	429a      	cmp	r2, r3
 80057e4:	d209      	bcs.n	80057fa <prvAddCurrentTaskToDelayedList+0x66>
 80057e6:	4b12      	ldr	r3, [pc, #72]	; (8005830 <prvAddCurrentTaskToDelayedList+0x9c>)
 80057e8:	681a      	ldr	r2, [r3, #0]
 80057ea:	4b0f      	ldr	r3, [pc, #60]	; (8005828 <prvAddCurrentTaskToDelayedList+0x94>)
 80057ec:	681b      	ldr	r3, [r3, #0]
 80057ee:	3304      	adds	r3, #4
 80057f0:	4619      	mov	r1, r3
 80057f2:	4610      	mov	r0, r2
 80057f4:	f7fe fb53 	bl	8003e9e <vListInsert>
 80057f8:	e010      	b.n	800581c <prvAddCurrentTaskToDelayedList+0x88>
 80057fa:	4b0e      	ldr	r3, [pc, #56]	; (8005834 <prvAddCurrentTaskToDelayedList+0xa0>)
 80057fc:	681a      	ldr	r2, [r3, #0]
 80057fe:	4b0a      	ldr	r3, [pc, #40]	; (8005828 <prvAddCurrentTaskToDelayedList+0x94>)
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	3304      	adds	r3, #4
 8005804:	4619      	mov	r1, r3
 8005806:	4610      	mov	r0, r2
 8005808:	f7fe fb49 	bl	8003e9e <vListInsert>
 800580c:	4b0a      	ldr	r3, [pc, #40]	; (8005838 <prvAddCurrentTaskToDelayedList+0xa4>)
 800580e:	681b      	ldr	r3, [r3, #0]
 8005810:	68ba      	ldr	r2, [r7, #8]
 8005812:	429a      	cmp	r2, r3
 8005814:	d202      	bcs.n	800581c <prvAddCurrentTaskToDelayedList+0x88>
 8005816:	4a08      	ldr	r2, [pc, #32]	; (8005838 <prvAddCurrentTaskToDelayedList+0xa4>)
 8005818:	68bb      	ldr	r3, [r7, #8]
 800581a:	6013      	str	r3, [r2, #0]
 800581c:	bf00      	nop
 800581e:	3710      	adds	r7, #16
 8005820:	46bd      	mov	sp, r7
 8005822:	bd80      	pop	{r7, pc}
 8005824:	20001010 	.word	0x20001010
 8005828:	20000b38 	.word	0x20000b38
 800582c:	20000ff8 	.word	0x20000ff8
 8005830:	20000fc8 	.word	0x20000fc8
 8005834:	20000fc4 	.word	0x20000fc4
 8005838:	2000102c 	.word	0x2000102c

0800583c <xTimerCreateTimerTask>:
 800583c:	b580      	push	{r7, lr}
 800583e:	b08a      	sub	sp, #40	; 0x28
 8005840:	af04      	add	r7, sp, #16
 8005842:	2300      	movs	r3, #0
 8005844:	617b      	str	r3, [r7, #20]
 8005846:	f000 fb07 	bl	8005e58 <prvCheckForValidListAndQueue>
 800584a:	4b1c      	ldr	r3, [pc, #112]	; (80058bc <xTimerCreateTimerTask+0x80>)
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	2b00      	cmp	r3, #0
 8005850:	d021      	beq.n	8005896 <xTimerCreateTimerTask+0x5a>
 8005852:	2300      	movs	r3, #0
 8005854:	60fb      	str	r3, [r7, #12]
 8005856:	2300      	movs	r3, #0
 8005858:	60bb      	str	r3, [r7, #8]
 800585a:	1d3a      	adds	r2, r7, #4
 800585c:	f107 0108 	add.w	r1, r7, #8
 8005860:	f107 030c 	add.w	r3, r7, #12
 8005864:	4618      	mov	r0, r3
 8005866:	f7fe faaf 	bl	8003dc8 <vApplicationGetTimerTaskMemory>
 800586a:	6879      	ldr	r1, [r7, #4]
 800586c:	68bb      	ldr	r3, [r7, #8]
 800586e:	68fa      	ldr	r2, [r7, #12]
 8005870:	9202      	str	r2, [sp, #8]
 8005872:	9301      	str	r3, [sp, #4]
 8005874:	2302      	movs	r3, #2
 8005876:	9300      	str	r3, [sp, #0]
 8005878:	2300      	movs	r3, #0
 800587a:	460a      	mov	r2, r1
 800587c:	4910      	ldr	r1, [pc, #64]	; (80058c0 <xTimerCreateTimerTask+0x84>)
 800587e:	4811      	ldr	r0, [pc, #68]	; (80058c4 <xTimerCreateTimerTask+0x88>)
 8005880:	f7ff f8b4 	bl	80049ec <xTaskCreateStatic>
 8005884:	4603      	mov	r3, r0
 8005886:	4a10      	ldr	r2, [pc, #64]	; (80058c8 <xTimerCreateTimerTask+0x8c>)
 8005888:	6013      	str	r3, [r2, #0]
 800588a:	4b0f      	ldr	r3, [pc, #60]	; (80058c8 <xTimerCreateTimerTask+0x8c>)
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	2b00      	cmp	r3, #0
 8005890:	d001      	beq.n	8005896 <xTimerCreateTimerTask+0x5a>
 8005892:	2301      	movs	r3, #1
 8005894:	617b      	str	r3, [r7, #20]
 8005896:	697b      	ldr	r3, [r7, #20]
 8005898:	2b00      	cmp	r3, #0
 800589a:	d10a      	bne.n	80058b2 <xTimerCreateTimerTask+0x76>
 800589c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058a0:	f383 8811 	msr	BASEPRI, r3
 80058a4:	f3bf 8f6f 	isb	sy
 80058a8:	f3bf 8f4f 	dsb	sy
 80058ac:	613b      	str	r3, [r7, #16]
 80058ae:	bf00      	nop
 80058b0:	e7fe      	b.n	80058b0 <xTimerCreateTimerTask+0x74>
 80058b2:	697b      	ldr	r3, [r7, #20]
 80058b4:	4618      	mov	r0, r3
 80058b6:	3718      	adds	r7, #24
 80058b8:	46bd      	mov	sp, r7
 80058ba:	bd80      	pop	{r7, pc}
 80058bc:	20001068 	.word	0x20001068
 80058c0:	080075f4 	.word	0x080075f4
 80058c4:	08005a01 	.word	0x08005a01
 80058c8:	2000106c 	.word	0x2000106c

080058cc <xTimerGenericCommand>:
 80058cc:	b580      	push	{r7, lr}
 80058ce:	b08a      	sub	sp, #40	; 0x28
 80058d0:	af00      	add	r7, sp, #0
 80058d2:	60f8      	str	r0, [r7, #12]
 80058d4:	60b9      	str	r1, [r7, #8]
 80058d6:	607a      	str	r2, [r7, #4]
 80058d8:	603b      	str	r3, [r7, #0]
 80058da:	2300      	movs	r3, #0
 80058dc:	627b      	str	r3, [r7, #36]	; 0x24
 80058de:	68fb      	ldr	r3, [r7, #12]
 80058e0:	2b00      	cmp	r3, #0
 80058e2:	d10a      	bne.n	80058fa <xTimerGenericCommand+0x2e>
 80058e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058e8:	f383 8811 	msr	BASEPRI, r3
 80058ec:	f3bf 8f6f 	isb	sy
 80058f0:	f3bf 8f4f 	dsb	sy
 80058f4:	623b      	str	r3, [r7, #32]
 80058f6:	bf00      	nop
 80058f8:	e7fe      	b.n	80058f8 <xTimerGenericCommand+0x2c>
 80058fa:	4b1a      	ldr	r3, [pc, #104]	; (8005964 <xTimerGenericCommand+0x98>)
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d02a      	beq.n	8005958 <xTimerGenericCommand+0x8c>
 8005902:	68bb      	ldr	r3, [r7, #8]
 8005904:	613b      	str	r3, [r7, #16]
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	617b      	str	r3, [r7, #20]
 800590a:	68fb      	ldr	r3, [r7, #12]
 800590c:	61bb      	str	r3, [r7, #24]
 800590e:	68bb      	ldr	r3, [r7, #8]
 8005910:	2b05      	cmp	r3, #5
 8005912:	dc18      	bgt.n	8005946 <xTimerGenericCommand+0x7a>
 8005914:	f7ff feb2 	bl	800567c <xTaskGetSchedulerState>
 8005918:	4603      	mov	r3, r0
 800591a:	2b02      	cmp	r3, #2
 800591c:	d109      	bne.n	8005932 <xTimerGenericCommand+0x66>
 800591e:	4b11      	ldr	r3, [pc, #68]	; (8005964 <xTimerGenericCommand+0x98>)
 8005920:	6818      	ldr	r0, [r3, #0]
 8005922:	f107 0110 	add.w	r1, r7, #16
 8005926:	2300      	movs	r3, #0
 8005928:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800592a:	f7fe fc59 	bl	80041e0 <xQueueGenericSend>
 800592e:	6278      	str	r0, [r7, #36]	; 0x24
 8005930:	e012      	b.n	8005958 <xTimerGenericCommand+0x8c>
 8005932:	4b0c      	ldr	r3, [pc, #48]	; (8005964 <xTimerGenericCommand+0x98>)
 8005934:	6818      	ldr	r0, [r3, #0]
 8005936:	f107 0110 	add.w	r1, r7, #16
 800593a:	2300      	movs	r3, #0
 800593c:	2200      	movs	r2, #0
 800593e:	f7fe fc4f 	bl	80041e0 <xQueueGenericSend>
 8005942:	6278      	str	r0, [r7, #36]	; 0x24
 8005944:	e008      	b.n	8005958 <xTimerGenericCommand+0x8c>
 8005946:	4b07      	ldr	r3, [pc, #28]	; (8005964 <xTimerGenericCommand+0x98>)
 8005948:	6818      	ldr	r0, [r3, #0]
 800594a:	f107 0110 	add.w	r1, r7, #16
 800594e:	2300      	movs	r3, #0
 8005950:	683a      	ldr	r2, [r7, #0]
 8005952:	f7fe fd43 	bl	80043dc <xQueueGenericSendFromISR>
 8005956:	6278      	str	r0, [r7, #36]	; 0x24
 8005958:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800595a:	4618      	mov	r0, r3
 800595c:	3728      	adds	r7, #40	; 0x28
 800595e:	46bd      	mov	sp, r7
 8005960:	bd80      	pop	{r7, pc}
 8005962:	bf00      	nop
 8005964:	20001068 	.word	0x20001068

08005968 <prvProcessExpiredTimer>:
 8005968:	b580      	push	{r7, lr}
 800596a:	b088      	sub	sp, #32
 800596c:	af02      	add	r7, sp, #8
 800596e:	6078      	str	r0, [r7, #4]
 8005970:	6039      	str	r1, [r7, #0]
 8005972:	4b22      	ldr	r3, [pc, #136]	; (80059fc <prvProcessExpiredTimer+0x94>)
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	68db      	ldr	r3, [r3, #12]
 8005978:	68db      	ldr	r3, [r3, #12]
 800597a:	617b      	str	r3, [r7, #20]
 800597c:	697b      	ldr	r3, [r7, #20]
 800597e:	3304      	adds	r3, #4
 8005980:	4618      	mov	r0, r3
 8005982:	f7fe fac5 	bl	8003f10 <uxListRemove>
 8005986:	697b      	ldr	r3, [r7, #20]
 8005988:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800598c:	f003 0304 	and.w	r3, r3, #4
 8005990:	2b00      	cmp	r3, #0
 8005992:	d022      	beq.n	80059da <prvProcessExpiredTimer+0x72>
 8005994:	697b      	ldr	r3, [r7, #20]
 8005996:	699a      	ldr	r2, [r3, #24]
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	18d1      	adds	r1, r2, r3
 800599c:	687b      	ldr	r3, [r7, #4]
 800599e:	683a      	ldr	r2, [r7, #0]
 80059a0:	6978      	ldr	r0, [r7, #20]
 80059a2:	f000 f8d1 	bl	8005b48 <prvInsertTimerInActiveList>
 80059a6:	4603      	mov	r3, r0
 80059a8:	2b00      	cmp	r3, #0
 80059aa:	d01f      	beq.n	80059ec <prvProcessExpiredTimer+0x84>
 80059ac:	2300      	movs	r3, #0
 80059ae:	9300      	str	r3, [sp, #0]
 80059b0:	2300      	movs	r3, #0
 80059b2:	687a      	ldr	r2, [r7, #4]
 80059b4:	2100      	movs	r1, #0
 80059b6:	6978      	ldr	r0, [r7, #20]
 80059b8:	f7ff ff88 	bl	80058cc <xTimerGenericCommand>
 80059bc:	6138      	str	r0, [r7, #16]
 80059be:	693b      	ldr	r3, [r7, #16]
 80059c0:	2b00      	cmp	r3, #0
 80059c2:	d113      	bne.n	80059ec <prvProcessExpiredTimer+0x84>
 80059c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80059c8:	f383 8811 	msr	BASEPRI, r3
 80059cc:	f3bf 8f6f 	isb	sy
 80059d0:	f3bf 8f4f 	dsb	sy
 80059d4:	60fb      	str	r3, [r7, #12]
 80059d6:	bf00      	nop
 80059d8:	e7fe      	b.n	80059d8 <prvProcessExpiredTimer+0x70>
 80059da:	697b      	ldr	r3, [r7, #20]
 80059dc:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80059e0:	f023 0301 	bic.w	r3, r3, #1
 80059e4:	b2da      	uxtb	r2, r3
 80059e6:	697b      	ldr	r3, [r7, #20]
 80059e8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80059ec:	697b      	ldr	r3, [r7, #20]
 80059ee:	6a1b      	ldr	r3, [r3, #32]
 80059f0:	6978      	ldr	r0, [r7, #20]
 80059f2:	4798      	blx	r3
 80059f4:	bf00      	nop
 80059f6:	3718      	adds	r7, #24
 80059f8:	46bd      	mov	sp, r7
 80059fa:	bd80      	pop	{r7, pc}
 80059fc:	20001060 	.word	0x20001060

08005a00 <prvTimerTask>:
 8005a00:	b580      	push	{r7, lr}
 8005a02:	b084      	sub	sp, #16
 8005a04:	af00      	add	r7, sp, #0
 8005a06:	6078      	str	r0, [r7, #4]
 8005a08:	f107 0308 	add.w	r3, r7, #8
 8005a0c:	4618      	mov	r0, r3
 8005a0e:	f000 f857 	bl	8005ac0 <prvGetNextExpireTime>
 8005a12:	60f8      	str	r0, [r7, #12]
 8005a14:	68bb      	ldr	r3, [r7, #8]
 8005a16:	4619      	mov	r1, r3
 8005a18:	68f8      	ldr	r0, [r7, #12]
 8005a1a:	f000 f803 	bl	8005a24 <prvProcessTimerOrBlockTask>
 8005a1e:	f000 f8d5 	bl	8005bcc <prvProcessReceivedCommands>
 8005a22:	e7f1      	b.n	8005a08 <prvTimerTask+0x8>

08005a24 <prvProcessTimerOrBlockTask>:
 8005a24:	b580      	push	{r7, lr}
 8005a26:	b084      	sub	sp, #16
 8005a28:	af00      	add	r7, sp, #0
 8005a2a:	6078      	str	r0, [r7, #4]
 8005a2c:	6039      	str	r1, [r7, #0]
 8005a2e:	f7ff fa39 	bl	8004ea4 <vTaskSuspendAll>
 8005a32:	f107 0308 	add.w	r3, r7, #8
 8005a36:	4618      	mov	r0, r3
 8005a38:	f000 f866 	bl	8005b08 <prvSampleTimeNow>
 8005a3c:	60f8      	str	r0, [r7, #12]
 8005a3e:	68bb      	ldr	r3, [r7, #8]
 8005a40:	2b00      	cmp	r3, #0
 8005a42:	d130      	bne.n	8005aa6 <prvProcessTimerOrBlockTask+0x82>
 8005a44:	683b      	ldr	r3, [r7, #0]
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	d10a      	bne.n	8005a60 <prvProcessTimerOrBlockTask+0x3c>
 8005a4a:	687a      	ldr	r2, [r7, #4]
 8005a4c:	68fb      	ldr	r3, [r7, #12]
 8005a4e:	429a      	cmp	r2, r3
 8005a50:	d806      	bhi.n	8005a60 <prvProcessTimerOrBlockTask+0x3c>
 8005a52:	f7ff fa35 	bl	8004ec0 <xTaskResumeAll>
 8005a56:	68f9      	ldr	r1, [r7, #12]
 8005a58:	6878      	ldr	r0, [r7, #4]
 8005a5a:	f7ff ff85 	bl	8005968 <prvProcessExpiredTimer>
 8005a5e:	e024      	b.n	8005aaa <prvProcessTimerOrBlockTask+0x86>
 8005a60:	683b      	ldr	r3, [r7, #0]
 8005a62:	2b00      	cmp	r3, #0
 8005a64:	d008      	beq.n	8005a78 <prvProcessTimerOrBlockTask+0x54>
 8005a66:	4b13      	ldr	r3, [pc, #76]	; (8005ab4 <prvProcessTimerOrBlockTask+0x90>)
 8005a68:	681b      	ldr	r3, [r3, #0]
 8005a6a:	681b      	ldr	r3, [r3, #0]
 8005a6c:	2b00      	cmp	r3, #0
 8005a6e:	d101      	bne.n	8005a74 <prvProcessTimerOrBlockTask+0x50>
 8005a70:	2301      	movs	r3, #1
 8005a72:	e000      	b.n	8005a76 <prvProcessTimerOrBlockTask+0x52>
 8005a74:	2300      	movs	r3, #0
 8005a76:	603b      	str	r3, [r7, #0]
 8005a78:	4b0f      	ldr	r3, [pc, #60]	; (8005ab8 <prvProcessTimerOrBlockTask+0x94>)
 8005a7a:	6818      	ldr	r0, [r3, #0]
 8005a7c:	687a      	ldr	r2, [r7, #4]
 8005a7e:	68fb      	ldr	r3, [r7, #12]
 8005a80:	1ad3      	subs	r3, r2, r3
 8005a82:	683a      	ldr	r2, [r7, #0]
 8005a84:	4619      	mov	r1, r3
 8005a86:	f7fe ff7d 	bl	8004984 <vQueueWaitForMessageRestricted>
 8005a8a:	f7ff fa19 	bl	8004ec0 <xTaskResumeAll>
 8005a8e:	4603      	mov	r3, r0
 8005a90:	2b00      	cmp	r3, #0
 8005a92:	d10a      	bne.n	8005aaa <prvProcessTimerOrBlockTask+0x86>
 8005a94:	4b09      	ldr	r3, [pc, #36]	; (8005abc <prvProcessTimerOrBlockTask+0x98>)
 8005a96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005a9a:	601a      	str	r2, [r3, #0]
 8005a9c:	f3bf 8f4f 	dsb	sy
 8005aa0:	f3bf 8f6f 	isb	sy
 8005aa4:	e001      	b.n	8005aaa <prvProcessTimerOrBlockTask+0x86>
 8005aa6:	f7ff fa0b 	bl	8004ec0 <xTaskResumeAll>
 8005aaa:	bf00      	nop
 8005aac:	3710      	adds	r7, #16
 8005aae:	46bd      	mov	sp, r7
 8005ab0:	bd80      	pop	{r7, pc}
 8005ab2:	bf00      	nop
 8005ab4:	20001064 	.word	0x20001064
 8005ab8:	20001068 	.word	0x20001068
 8005abc:	e000ed04 	.word	0xe000ed04

08005ac0 <prvGetNextExpireTime>:
 8005ac0:	b480      	push	{r7}
 8005ac2:	b085      	sub	sp, #20
 8005ac4:	af00      	add	r7, sp, #0
 8005ac6:	6078      	str	r0, [r7, #4]
 8005ac8:	4b0e      	ldr	r3, [pc, #56]	; (8005b04 <prvGetNextExpireTime+0x44>)
 8005aca:	681b      	ldr	r3, [r3, #0]
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	2b00      	cmp	r3, #0
 8005ad0:	d101      	bne.n	8005ad6 <prvGetNextExpireTime+0x16>
 8005ad2:	2201      	movs	r2, #1
 8005ad4:	e000      	b.n	8005ad8 <prvGetNextExpireTime+0x18>
 8005ad6:	2200      	movs	r2, #0
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	601a      	str	r2, [r3, #0]
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	681b      	ldr	r3, [r3, #0]
 8005ae0:	2b00      	cmp	r3, #0
 8005ae2:	d105      	bne.n	8005af0 <prvGetNextExpireTime+0x30>
 8005ae4:	4b07      	ldr	r3, [pc, #28]	; (8005b04 <prvGetNextExpireTime+0x44>)
 8005ae6:	681b      	ldr	r3, [r3, #0]
 8005ae8:	68db      	ldr	r3, [r3, #12]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	60fb      	str	r3, [r7, #12]
 8005aee:	e001      	b.n	8005af4 <prvGetNextExpireTime+0x34>
 8005af0:	2300      	movs	r3, #0
 8005af2:	60fb      	str	r3, [r7, #12]
 8005af4:	68fb      	ldr	r3, [r7, #12]
 8005af6:	4618      	mov	r0, r3
 8005af8:	3714      	adds	r7, #20
 8005afa:	46bd      	mov	sp, r7
 8005afc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b00:	4770      	bx	lr
 8005b02:	bf00      	nop
 8005b04:	20001060 	.word	0x20001060

08005b08 <prvSampleTimeNow>:
 8005b08:	b580      	push	{r7, lr}
 8005b0a:	b084      	sub	sp, #16
 8005b0c:	af00      	add	r7, sp, #0
 8005b0e:	6078      	str	r0, [r7, #4]
 8005b10:	f7ff fa74 	bl	8004ffc <xTaskGetTickCount>
 8005b14:	60f8      	str	r0, [r7, #12]
 8005b16:	4b0b      	ldr	r3, [pc, #44]	; (8005b44 <prvSampleTimeNow+0x3c>)
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	68fa      	ldr	r2, [r7, #12]
 8005b1c:	429a      	cmp	r2, r3
 8005b1e:	d205      	bcs.n	8005b2c <prvSampleTimeNow+0x24>
 8005b20:	f000 f936 	bl	8005d90 <prvSwitchTimerLists>
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	2201      	movs	r2, #1
 8005b28:	601a      	str	r2, [r3, #0]
 8005b2a:	e002      	b.n	8005b32 <prvSampleTimeNow+0x2a>
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	2200      	movs	r2, #0
 8005b30:	601a      	str	r2, [r3, #0]
 8005b32:	4a04      	ldr	r2, [pc, #16]	; (8005b44 <prvSampleTimeNow+0x3c>)
 8005b34:	68fb      	ldr	r3, [r7, #12]
 8005b36:	6013      	str	r3, [r2, #0]
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	4618      	mov	r0, r3
 8005b3c:	3710      	adds	r7, #16
 8005b3e:	46bd      	mov	sp, r7
 8005b40:	bd80      	pop	{r7, pc}
 8005b42:	bf00      	nop
 8005b44:	20001070 	.word	0x20001070

08005b48 <prvInsertTimerInActiveList>:
 8005b48:	b580      	push	{r7, lr}
 8005b4a:	b086      	sub	sp, #24
 8005b4c:	af00      	add	r7, sp, #0
 8005b4e:	60f8      	str	r0, [r7, #12]
 8005b50:	60b9      	str	r1, [r7, #8]
 8005b52:	607a      	str	r2, [r7, #4]
 8005b54:	603b      	str	r3, [r7, #0]
 8005b56:	2300      	movs	r3, #0
 8005b58:	617b      	str	r3, [r7, #20]
 8005b5a:	68fb      	ldr	r3, [r7, #12]
 8005b5c:	68ba      	ldr	r2, [r7, #8]
 8005b5e:	605a      	str	r2, [r3, #4]
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	68fa      	ldr	r2, [r7, #12]
 8005b64:	611a      	str	r2, [r3, #16]
 8005b66:	68ba      	ldr	r2, [r7, #8]
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	429a      	cmp	r2, r3
 8005b6c:	d812      	bhi.n	8005b94 <prvInsertTimerInActiveList+0x4c>
 8005b6e:	687a      	ldr	r2, [r7, #4]
 8005b70:	683b      	ldr	r3, [r7, #0]
 8005b72:	1ad2      	subs	r2, r2, r3
 8005b74:	68fb      	ldr	r3, [r7, #12]
 8005b76:	699b      	ldr	r3, [r3, #24]
 8005b78:	429a      	cmp	r2, r3
 8005b7a:	d302      	bcc.n	8005b82 <prvInsertTimerInActiveList+0x3a>
 8005b7c:	2301      	movs	r3, #1
 8005b7e:	617b      	str	r3, [r7, #20]
 8005b80:	e01b      	b.n	8005bba <prvInsertTimerInActiveList+0x72>
 8005b82:	4b10      	ldr	r3, [pc, #64]	; (8005bc4 <prvInsertTimerInActiveList+0x7c>)
 8005b84:	681a      	ldr	r2, [r3, #0]
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	3304      	adds	r3, #4
 8005b8a:	4619      	mov	r1, r3
 8005b8c:	4610      	mov	r0, r2
 8005b8e:	f7fe f986 	bl	8003e9e <vListInsert>
 8005b92:	e012      	b.n	8005bba <prvInsertTimerInActiveList+0x72>
 8005b94:	687a      	ldr	r2, [r7, #4]
 8005b96:	683b      	ldr	r3, [r7, #0]
 8005b98:	429a      	cmp	r2, r3
 8005b9a:	d206      	bcs.n	8005baa <prvInsertTimerInActiveList+0x62>
 8005b9c:	68ba      	ldr	r2, [r7, #8]
 8005b9e:	683b      	ldr	r3, [r7, #0]
 8005ba0:	429a      	cmp	r2, r3
 8005ba2:	d302      	bcc.n	8005baa <prvInsertTimerInActiveList+0x62>
 8005ba4:	2301      	movs	r3, #1
 8005ba6:	617b      	str	r3, [r7, #20]
 8005ba8:	e007      	b.n	8005bba <prvInsertTimerInActiveList+0x72>
 8005baa:	4b07      	ldr	r3, [pc, #28]	; (8005bc8 <prvInsertTimerInActiveList+0x80>)
 8005bac:	681a      	ldr	r2, [r3, #0]
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	3304      	adds	r3, #4
 8005bb2:	4619      	mov	r1, r3
 8005bb4:	4610      	mov	r0, r2
 8005bb6:	f7fe f972 	bl	8003e9e <vListInsert>
 8005bba:	697b      	ldr	r3, [r7, #20]
 8005bbc:	4618      	mov	r0, r3
 8005bbe:	3718      	adds	r7, #24
 8005bc0:	46bd      	mov	sp, r7
 8005bc2:	bd80      	pop	{r7, pc}
 8005bc4:	20001064 	.word	0x20001064
 8005bc8:	20001060 	.word	0x20001060

08005bcc <prvProcessReceivedCommands>:
 8005bcc:	b580      	push	{r7, lr}
 8005bce:	b08e      	sub	sp, #56	; 0x38
 8005bd0:	af02      	add	r7, sp, #8
 8005bd2:	e0ca      	b.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	da18      	bge.n	8005c0c <prvProcessReceivedCommands+0x40>
 8005bda:	1d3b      	adds	r3, r7, #4
 8005bdc:	3304      	adds	r3, #4
 8005bde:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005be0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005be2:	2b00      	cmp	r3, #0
 8005be4:	d10a      	bne.n	8005bfc <prvProcessReceivedCommands+0x30>
 8005be6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005bea:	f383 8811 	msr	BASEPRI, r3
 8005bee:	f3bf 8f6f 	isb	sy
 8005bf2:	f3bf 8f4f 	dsb	sy
 8005bf6:	61fb      	str	r3, [r7, #28]
 8005bf8:	bf00      	nop
 8005bfa:	e7fe      	b.n	8005bfa <prvProcessReceivedCommands+0x2e>
 8005bfc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005bfe:	681b      	ldr	r3, [r3, #0]
 8005c00:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005c02:	6850      	ldr	r0, [r2, #4]
 8005c04:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005c06:	6892      	ldr	r2, [r2, #8]
 8005c08:	4611      	mov	r1, r2
 8005c0a:	4798      	blx	r3
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	2b00      	cmp	r3, #0
 8005c10:	f2c0 80ab 	blt.w	8005d6a <prvProcessReceivedCommands+0x19e>
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	62bb      	str	r3, [r7, #40]	; 0x28
 8005c18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c1a:	695b      	ldr	r3, [r3, #20]
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d004      	beq.n	8005c2a <prvProcessReceivedCommands+0x5e>
 8005c20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c22:	3304      	adds	r3, #4
 8005c24:	4618      	mov	r0, r3
 8005c26:	f7fe f973 	bl	8003f10 <uxListRemove>
 8005c2a:	463b      	mov	r3, r7
 8005c2c:	4618      	mov	r0, r3
 8005c2e:	f7ff ff6b 	bl	8005b08 <prvSampleTimeNow>
 8005c32:	6278      	str	r0, [r7, #36]	; 0x24
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	2b09      	cmp	r3, #9
 8005c38:	f200 8096 	bhi.w	8005d68 <prvProcessReceivedCommands+0x19c>
 8005c3c:	a201      	add	r2, pc, #4	; (adr r2, 8005c44 <prvProcessReceivedCommands+0x78>)
 8005c3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005c42:	bf00      	nop
 8005c44:	08005c6d 	.word	0x08005c6d
 8005c48:	08005c6d 	.word	0x08005c6d
 8005c4c:	08005c6d 	.word	0x08005c6d
 8005c50:	08005ce1 	.word	0x08005ce1
 8005c54:	08005cf5 	.word	0x08005cf5
 8005c58:	08005d3f 	.word	0x08005d3f
 8005c5c:	08005c6d 	.word	0x08005c6d
 8005c60:	08005c6d 	.word	0x08005c6d
 8005c64:	08005ce1 	.word	0x08005ce1
 8005c68:	08005cf5 	.word	0x08005cf5
 8005c6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c6e:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005c72:	f043 0301 	orr.w	r3, r3, #1
 8005c76:	b2da      	uxtb	r2, r3
 8005c78:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c7a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8005c7e:	68ba      	ldr	r2, [r7, #8]
 8005c80:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c82:	699b      	ldr	r3, [r3, #24]
 8005c84:	18d1      	adds	r1, r2, r3
 8005c86:	68bb      	ldr	r3, [r7, #8]
 8005c88:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005c8a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005c8c:	f7ff ff5c 	bl	8005b48 <prvInsertTimerInActiveList>
 8005c90:	4603      	mov	r3, r0
 8005c92:	2b00      	cmp	r3, #0
 8005c94:	d069      	beq.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005c96:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c98:	6a1b      	ldr	r3, [r3, #32]
 8005c9a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005c9c:	4798      	blx	r3
 8005c9e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005ca0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005ca4:	f003 0304 	and.w	r3, r3, #4
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	d05e      	beq.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005cac:	68ba      	ldr	r2, [r7, #8]
 8005cae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005cb0:	699b      	ldr	r3, [r3, #24]
 8005cb2:	441a      	add	r2, r3
 8005cb4:	2300      	movs	r3, #0
 8005cb6:	9300      	str	r3, [sp, #0]
 8005cb8:	2300      	movs	r3, #0
 8005cba:	2100      	movs	r1, #0
 8005cbc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005cbe:	f7ff fe05 	bl	80058cc <xTimerGenericCommand>
 8005cc2:	6238      	str	r0, [r7, #32]
 8005cc4:	6a3b      	ldr	r3, [r7, #32]
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d14f      	bne.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005cca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005cce:	f383 8811 	msr	BASEPRI, r3
 8005cd2:	f3bf 8f6f 	isb	sy
 8005cd6:	f3bf 8f4f 	dsb	sy
 8005cda:	61bb      	str	r3, [r7, #24]
 8005cdc:	bf00      	nop
 8005cde:	e7fe      	b.n	8005cde <prvProcessReceivedCommands+0x112>
 8005ce0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005ce2:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005ce6:	f023 0301 	bic.w	r3, r3, #1
 8005cea:	b2da      	uxtb	r2, r3
 8005cec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005cee:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8005cf2:	e03a      	b.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005cf4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005cf6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005cfa:	f043 0301 	orr.w	r3, r3, #1
 8005cfe:	b2da      	uxtb	r2, r3
 8005d00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005d02:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8005d06:	68ba      	ldr	r2, [r7, #8]
 8005d08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005d0a:	619a      	str	r2, [r3, #24]
 8005d0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005d0e:	699b      	ldr	r3, [r3, #24]
 8005d10:	2b00      	cmp	r3, #0
 8005d12:	d10a      	bne.n	8005d2a <prvProcessReceivedCommands+0x15e>
 8005d14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d18:	f383 8811 	msr	BASEPRI, r3
 8005d1c:	f3bf 8f6f 	isb	sy
 8005d20:	f3bf 8f4f 	dsb	sy
 8005d24:	617b      	str	r3, [r7, #20]
 8005d26:	bf00      	nop
 8005d28:	e7fe      	b.n	8005d28 <prvProcessReceivedCommands+0x15c>
 8005d2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005d2c:	699a      	ldr	r2, [r3, #24]
 8005d2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d30:	18d1      	adds	r1, r2, r3
 8005d32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d34:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005d36:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005d38:	f7ff ff06 	bl	8005b48 <prvInsertTimerInActiveList>
 8005d3c:	e015      	b.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005d3e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005d40:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005d44:	f003 0302 	and.w	r3, r3, #2
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d103      	bne.n	8005d54 <prvProcessReceivedCommands+0x188>
 8005d4c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005d4e:	f000 fbdf 	bl	8006510 <vPortFree>
 8005d52:	e00a      	b.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005d54:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005d56:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005d5a:	f023 0301 	bic.w	r3, r3, #1
 8005d5e:	b2da      	uxtb	r2, r3
 8005d60:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005d62:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8005d66:	e000      	b.n	8005d6a <prvProcessReceivedCommands+0x19e>
 8005d68:	bf00      	nop
 8005d6a:	4b08      	ldr	r3, [pc, #32]	; (8005d8c <prvProcessReceivedCommands+0x1c0>)
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	1d39      	adds	r1, r7, #4
 8005d70:	2200      	movs	r2, #0
 8005d72:	4618      	mov	r0, r3
 8005d74:	f7fe fbce 	bl	8004514 <xQueueReceive>
 8005d78:	4603      	mov	r3, r0
 8005d7a:	2b00      	cmp	r3, #0
 8005d7c:	f47f af2a 	bne.w	8005bd4 <prvProcessReceivedCommands+0x8>
 8005d80:	bf00      	nop
 8005d82:	bf00      	nop
 8005d84:	3730      	adds	r7, #48	; 0x30
 8005d86:	46bd      	mov	sp, r7
 8005d88:	bd80      	pop	{r7, pc}
 8005d8a:	bf00      	nop
 8005d8c:	20001068 	.word	0x20001068

08005d90 <prvSwitchTimerLists>:
 8005d90:	b580      	push	{r7, lr}
 8005d92:	b088      	sub	sp, #32
 8005d94:	af02      	add	r7, sp, #8
 8005d96:	e048      	b.n	8005e2a <prvSwitchTimerLists+0x9a>
 8005d98:	4b2d      	ldr	r3, [pc, #180]	; (8005e50 <prvSwitchTimerLists+0xc0>)
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	68db      	ldr	r3, [r3, #12]
 8005d9e:	681b      	ldr	r3, [r3, #0]
 8005da0:	613b      	str	r3, [r7, #16]
 8005da2:	4b2b      	ldr	r3, [pc, #172]	; (8005e50 <prvSwitchTimerLists+0xc0>)
 8005da4:	681b      	ldr	r3, [r3, #0]
 8005da6:	68db      	ldr	r3, [r3, #12]
 8005da8:	68db      	ldr	r3, [r3, #12]
 8005daa:	60fb      	str	r3, [r7, #12]
 8005dac:	68fb      	ldr	r3, [r7, #12]
 8005dae:	3304      	adds	r3, #4
 8005db0:	4618      	mov	r0, r3
 8005db2:	f7fe f8ad 	bl	8003f10 <uxListRemove>
 8005db6:	68fb      	ldr	r3, [r7, #12]
 8005db8:	6a1b      	ldr	r3, [r3, #32]
 8005dba:	68f8      	ldr	r0, [r7, #12]
 8005dbc:	4798      	blx	r3
 8005dbe:	68fb      	ldr	r3, [r7, #12]
 8005dc0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005dc4:	f003 0304 	and.w	r3, r3, #4
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d02e      	beq.n	8005e2a <prvSwitchTimerLists+0x9a>
 8005dcc:	68fb      	ldr	r3, [r7, #12]
 8005dce:	699b      	ldr	r3, [r3, #24]
 8005dd0:	693a      	ldr	r2, [r7, #16]
 8005dd2:	4413      	add	r3, r2
 8005dd4:	60bb      	str	r3, [r7, #8]
 8005dd6:	68ba      	ldr	r2, [r7, #8]
 8005dd8:	693b      	ldr	r3, [r7, #16]
 8005dda:	429a      	cmp	r2, r3
 8005ddc:	d90e      	bls.n	8005dfc <prvSwitchTimerLists+0x6c>
 8005dde:	68fb      	ldr	r3, [r7, #12]
 8005de0:	68ba      	ldr	r2, [r7, #8]
 8005de2:	605a      	str	r2, [r3, #4]
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	68fa      	ldr	r2, [r7, #12]
 8005de8:	611a      	str	r2, [r3, #16]
 8005dea:	4b19      	ldr	r3, [pc, #100]	; (8005e50 <prvSwitchTimerLists+0xc0>)
 8005dec:	681a      	ldr	r2, [r3, #0]
 8005dee:	68fb      	ldr	r3, [r7, #12]
 8005df0:	3304      	adds	r3, #4
 8005df2:	4619      	mov	r1, r3
 8005df4:	4610      	mov	r0, r2
 8005df6:	f7fe f852 	bl	8003e9e <vListInsert>
 8005dfa:	e016      	b.n	8005e2a <prvSwitchTimerLists+0x9a>
 8005dfc:	2300      	movs	r3, #0
 8005dfe:	9300      	str	r3, [sp, #0]
 8005e00:	2300      	movs	r3, #0
 8005e02:	693a      	ldr	r2, [r7, #16]
 8005e04:	2100      	movs	r1, #0
 8005e06:	68f8      	ldr	r0, [r7, #12]
 8005e08:	f7ff fd60 	bl	80058cc <xTimerGenericCommand>
 8005e0c:	6078      	str	r0, [r7, #4]
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	2b00      	cmp	r3, #0
 8005e12:	d10a      	bne.n	8005e2a <prvSwitchTimerLists+0x9a>
 8005e14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005e18:	f383 8811 	msr	BASEPRI, r3
 8005e1c:	f3bf 8f6f 	isb	sy
 8005e20:	f3bf 8f4f 	dsb	sy
 8005e24:	603b      	str	r3, [r7, #0]
 8005e26:	bf00      	nop
 8005e28:	e7fe      	b.n	8005e28 <prvSwitchTimerLists+0x98>
 8005e2a:	4b09      	ldr	r3, [pc, #36]	; (8005e50 <prvSwitchTimerLists+0xc0>)
 8005e2c:	681b      	ldr	r3, [r3, #0]
 8005e2e:	681b      	ldr	r3, [r3, #0]
 8005e30:	2b00      	cmp	r3, #0
 8005e32:	d1b1      	bne.n	8005d98 <prvSwitchTimerLists+0x8>
 8005e34:	4b06      	ldr	r3, [pc, #24]	; (8005e50 <prvSwitchTimerLists+0xc0>)
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	617b      	str	r3, [r7, #20]
 8005e3a:	4b06      	ldr	r3, [pc, #24]	; (8005e54 <prvSwitchTimerLists+0xc4>)
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	4a04      	ldr	r2, [pc, #16]	; (8005e50 <prvSwitchTimerLists+0xc0>)
 8005e40:	6013      	str	r3, [r2, #0]
 8005e42:	4a04      	ldr	r2, [pc, #16]	; (8005e54 <prvSwitchTimerLists+0xc4>)
 8005e44:	697b      	ldr	r3, [r7, #20]
 8005e46:	6013      	str	r3, [r2, #0]
 8005e48:	bf00      	nop
 8005e4a:	3718      	adds	r7, #24
 8005e4c:	46bd      	mov	sp, r7
 8005e4e:	bd80      	pop	{r7, pc}
 8005e50:	20001060 	.word	0x20001060
 8005e54:	20001064 	.word	0x20001064

08005e58 <prvCheckForValidListAndQueue>:
 8005e58:	b580      	push	{r7, lr}
 8005e5a:	b082      	sub	sp, #8
 8005e5c:	af02      	add	r7, sp, #8
 8005e5e:	f000 f969 	bl	8006134 <vPortEnterCritical>
 8005e62:	4b15      	ldr	r3, [pc, #84]	; (8005eb8 <prvCheckForValidListAndQueue+0x60>)
 8005e64:	681b      	ldr	r3, [r3, #0]
 8005e66:	2b00      	cmp	r3, #0
 8005e68:	d120      	bne.n	8005eac <prvCheckForValidListAndQueue+0x54>
 8005e6a:	4814      	ldr	r0, [pc, #80]	; (8005ebc <prvCheckForValidListAndQueue+0x64>)
 8005e6c:	f7fd ffc6 	bl	8003dfc <vListInitialise>
 8005e70:	4813      	ldr	r0, [pc, #76]	; (8005ec0 <prvCheckForValidListAndQueue+0x68>)
 8005e72:	f7fd ffc3 	bl	8003dfc <vListInitialise>
 8005e76:	4b13      	ldr	r3, [pc, #76]	; (8005ec4 <prvCheckForValidListAndQueue+0x6c>)
 8005e78:	4a10      	ldr	r2, [pc, #64]	; (8005ebc <prvCheckForValidListAndQueue+0x64>)
 8005e7a:	601a      	str	r2, [r3, #0]
 8005e7c:	4b12      	ldr	r3, [pc, #72]	; (8005ec8 <prvCheckForValidListAndQueue+0x70>)
 8005e7e:	4a10      	ldr	r2, [pc, #64]	; (8005ec0 <prvCheckForValidListAndQueue+0x68>)
 8005e80:	601a      	str	r2, [r3, #0]
 8005e82:	2300      	movs	r3, #0
 8005e84:	9300      	str	r3, [sp, #0]
 8005e86:	4b11      	ldr	r3, [pc, #68]	; (8005ecc <prvCheckForValidListAndQueue+0x74>)
 8005e88:	4a11      	ldr	r2, [pc, #68]	; (8005ed0 <prvCheckForValidListAndQueue+0x78>)
 8005e8a:	2110      	movs	r1, #16
 8005e8c:	200a      	movs	r0, #10
 8005e8e:	f7fe f8d1 	bl	8004034 <xQueueGenericCreateStatic>
 8005e92:	4603      	mov	r3, r0
 8005e94:	4a08      	ldr	r2, [pc, #32]	; (8005eb8 <prvCheckForValidListAndQueue+0x60>)
 8005e96:	6013      	str	r3, [r2, #0]
 8005e98:	4b07      	ldr	r3, [pc, #28]	; (8005eb8 <prvCheckForValidListAndQueue+0x60>)
 8005e9a:	681b      	ldr	r3, [r3, #0]
 8005e9c:	2b00      	cmp	r3, #0
 8005e9e:	d005      	beq.n	8005eac <prvCheckForValidListAndQueue+0x54>
 8005ea0:	4b05      	ldr	r3, [pc, #20]	; (8005eb8 <prvCheckForValidListAndQueue+0x60>)
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	490b      	ldr	r1, [pc, #44]	; (8005ed4 <prvCheckForValidListAndQueue+0x7c>)
 8005ea6:	4618      	mov	r0, r3
 8005ea8:	f7fe fd42 	bl	8004930 <vQueueAddToRegistry>
 8005eac:	f000 f972 	bl	8006194 <vPortExitCritical>
 8005eb0:	bf00      	nop
 8005eb2:	46bd      	mov	sp, r7
 8005eb4:	bd80      	pop	{r7, pc}
 8005eb6:	bf00      	nop
 8005eb8:	20001068 	.word	0x20001068
 8005ebc:	20001038 	.word	0x20001038
 8005ec0:	2000104c 	.word	0x2000104c
 8005ec4:	20001060 	.word	0x20001060
 8005ec8:	20001064 	.word	0x20001064
 8005ecc:	20001114 	.word	0x20001114
 8005ed0:	20001074 	.word	0x20001074
 8005ed4:	080075fc 	.word	0x080075fc

08005ed8 <pxPortInitialiseStack>:
 8005ed8:	b480      	push	{r7}
 8005eda:	b085      	sub	sp, #20
 8005edc:	af00      	add	r7, sp, #0
 8005ede:	60f8      	str	r0, [r7, #12]
 8005ee0:	60b9      	str	r1, [r7, #8]
 8005ee2:	607a      	str	r2, [r7, #4]
 8005ee4:	68fb      	ldr	r3, [r7, #12]
 8005ee6:	3b04      	subs	r3, #4
 8005ee8:	60fb      	str	r3, [r7, #12]
 8005eea:	68fb      	ldr	r3, [r7, #12]
 8005eec:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8005ef0:	601a      	str	r2, [r3, #0]
 8005ef2:	68fb      	ldr	r3, [r7, #12]
 8005ef4:	3b04      	subs	r3, #4
 8005ef6:	60fb      	str	r3, [r7, #12]
 8005ef8:	68bb      	ldr	r3, [r7, #8]
 8005efa:	f023 0201 	bic.w	r2, r3, #1
 8005efe:	68fb      	ldr	r3, [r7, #12]
 8005f00:	601a      	str	r2, [r3, #0]
 8005f02:	68fb      	ldr	r3, [r7, #12]
 8005f04:	3b04      	subs	r3, #4
 8005f06:	60fb      	str	r3, [r7, #12]
 8005f08:	4a0c      	ldr	r2, [pc, #48]	; (8005f3c <pxPortInitialiseStack+0x64>)
 8005f0a:	68fb      	ldr	r3, [r7, #12]
 8005f0c:	601a      	str	r2, [r3, #0]
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	3b14      	subs	r3, #20
 8005f12:	60fb      	str	r3, [r7, #12]
 8005f14:	687a      	ldr	r2, [r7, #4]
 8005f16:	68fb      	ldr	r3, [r7, #12]
 8005f18:	601a      	str	r2, [r3, #0]
 8005f1a:	68fb      	ldr	r3, [r7, #12]
 8005f1c:	3b04      	subs	r3, #4
 8005f1e:	60fb      	str	r3, [r7, #12]
 8005f20:	68fb      	ldr	r3, [r7, #12]
 8005f22:	f06f 0202 	mvn.w	r2, #2
 8005f26:	601a      	str	r2, [r3, #0]
 8005f28:	68fb      	ldr	r3, [r7, #12]
 8005f2a:	3b20      	subs	r3, #32
 8005f2c:	60fb      	str	r3, [r7, #12]
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	4618      	mov	r0, r3
 8005f32:	3714      	adds	r7, #20
 8005f34:	46bd      	mov	sp, r7
 8005f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f3a:	4770      	bx	lr
 8005f3c:	08005f41 	.word	0x08005f41

08005f40 <prvTaskExitError>:
 8005f40:	b480      	push	{r7}
 8005f42:	b085      	sub	sp, #20
 8005f44:	af00      	add	r7, sp, #0
 8005f46:	2300      	movs	r3, #0
 8005f48:	607b      	str	r3, [r7, #4]
 8005f4a:	4b12      	ldr	r3, [pc, #72]	; (8005f94 <prvTaskExitError+0x54>)
 8005f4c:	681b      	ldr	r3, [r3, #0]
 8005f4e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005f52:	d00a      	beq.n	8005f6a <prvTaskExitError+0x2a>
 8005f54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f58:	f383 8811 	msr	BASEPRI, r3
 8005f5c:	f3bf 8f6f 	isb	sy
 8005f60:	f3bf 8f4f 	dsb	sy
 8005f64:	60fb      	str	r3, [r7, #12]
 8005f66:	bf00      	nop
 8005f68:	e7fe      	b.n	8005f68 <prvTaskExitError+0x28>
 8005f6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f6e:	f383 8811 	msr	BASEPRI, r3
 8005f72:	f3bf 8f6f 	isb	sy
 8005f76:	f3bf 8f4f 	dsb	sy
 8005f7a:	60bb      	str	r3, [r7, #8]
 8005f7c:	bf00      	nop
 8005f7e:	bf00      	nop
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	2b00      	cmp	r3, #0
 8005f84:	d0fc      	beq.n	8005f80 <prvTaskExitError+0x40>
 8005f86:	bf00      	nop
 8005f88:	bf00      	nop
 8005f8a:	3714      	adds	r7, #20
 8005f8c:	46bd      	mov	sp, r7
 8005f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f92:	4770      	bx	lr
 8005f94:	2000000c 	.word	0x2000000c
	...

08005fa0 <SVC_Handler>:
 8005fa0:	4b07      	ldr	r3, [pc, #28]	; (8005fc0 <pxCurrentTCBConst2>)
 8005fa2:	6819      	ldr	r1, [r3, #0]
 8005fa4:	6808      	ldr	r0, [r1, #0]
 8005fa6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005faa:	f380 8809 	msr	PSP, r0
 8005fae:	f3bf 8f6f 	isb	sy
 8005fb2:	f04f 0000 	mov.w	r0, #0
 8005fb6:	f380 8811 	msr	BASEPRI, r0
 8005fba:	4770      	bx	lr
 8005fbc:	f3af 8000 	nop.w

08005fc0 <pxCurrentTCBConst2>:
 8005fc0:	20000b38 	.word	0x20000b38
 8005fc4:	bf00      	nop
 8005fc6:	bf00      	nop

08005fc8 <prvPortStartFirstTask>:
 8005fc8:	4808      	ldr	r0, [pc, #32]	; (8005fec <prvPortStartFirstTask+0x24>)
 8005fca:	6800      	ldr	r0, [r0, #0]
 8005fcc:	6800      	ldr	r0, [r0, #0]
 8005fce:	f380 8808 	msr	MSP, r0
 8005fd2:	f04f 0000 	mov.w	r0, #0
 8005fd6:	f380 8814 	msr	CONTROL, r0
 8005fda:	b662      	cpsie	i
 8005fdc:	b661      	cpsie	f
 8005fde:	f3bf 8f4f 	dsb	sy
 8005fe2:	f3bf 8f6f 	isb	sy
 8005fe6:	df00      	svc	0
 8005fe8:	bf00      	nop
 8005fea:	bf00      	nop
 8005fec:	e000ed08 	.word	0xe000ed08

08005ff0 <xPortStartScheduler>:
 8005ff0:	b580      	push	{r7, lr}
 8005ff2:	b086      	sub	sp, #24
 8005ff4:	af00      	add	r7, sp, #0
 8005ff6:	4b46      	ldr	r3, [pc, #280]	; (8006110 <xPortStartScheduler+0x120>)
 8005ff8:	681b      	ldr	r3, [r3, #0]
 8005ffa:	4a46      	ldr	r2, [pc, #280]	; (8006114 <xPortStartScheduler+0x124>)
 8005ffc:	4293      	cmp	r3, r2
 8005ffe:	d10a      	bne.n	8006016 <xPortStartScheduler+0x26>
 8006000:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006004:	f383 8811 	msr	BASEPRI, r3
 8006008:	f3bf 8f6f 	isb	sy
 800600c:	f3bf 8f4f 	dsb	sy
 8006010:	613b      	str	r3, [r7, #16]
 8006012:	bf00      	nop
 8006014:	e7fe      	b.n	8006014 <xPortStartScheduler+0x24>
 8006016:	4b3e      	ldr	r3, [pc, #248]	; (8006110 <xPortStartScheduler+0x120>)
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	4a3f      	ldr	r2, [pc, #252]	; (8006118 <xPortStartScheduler+0x128>)
 800601c:	4293      	cmp	r3, r2
 800601e:	d10a      	bne.n	8006036 <xPortStartScheduler+0x46>
 8006020:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006024:	f383 8811 	msr	BASEPRI, r3
 8006028:	f3bf 8f6f 	isb	sy
 800602c:	f3bf 8f4f 	dsb	sy
 8006030:	60fb      	str	r3, [r7, #12]
 8006032:	bf00      	nop
 8006034:	e7fe      	b.n	8006034 <xPortStartScheduler+0x44>
 8006036:	4b39      	ldr	r3, [pc, #228]	; (800611c <xPortStartScheduler+0x12c>)
 8006038:	617b      	str	r3, [r7, #20]
 800603a:	697b      	ldr	r3, [r7, #20]
 800603c:	781b      	ldrb	r3, [r3, #0]
 800603e:	b2db      	uxtb	r3, r3
 8006040:	607b      	str	r3, [r7, #4]
 8006042:	697b      	ldr	r3, [r7, #20]
 8006044:	22ff      	movs	r2, #255	; 0xff
 8006046:	701a      	strb	r2, [r3, #0]
 8006048:	697b      	ldr	r3, [r7, #20]
 800604a:	781b      	ldrb	r3, [r3, #0]
 800604c:	b2db      	uxtb	r3, r3
 800604e:	70fb      	strb	r3, [r7, #3]
 8006050:	78fb      	ldrb	r3, [r7, #3]
 8006052:	b2db      	uxtb	r3, r3
 8006054:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006058:	b2da      	uxtb	r2, r3
 800605a:	4b31      	ldr	r3, [pc, #196]	; (8006120 <xPortStartScheduler+0x130>)
 800605c:	701a      	strb	r2, [r3, #0]
 800605e:	4b31      	ldr	r3, [pc, #196]	; (8006124 <xPortStartScheduler+0x134>)
 8006060:	2207      	movs	r2, #7
 8006062:	601a      	str	r2, [r3, #0]
 8006064:	e009      	b.n	800607a <xPortStartScheduler+0x8a>
 8006066:	4b2f      	ldr	r3, [pc, #188]	; (8006124 <xPortStartScheduler+0x134>)
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	3b01      	subs	r3, #1
 800606c:	4a2d      	ldr	r2, [pc, #180]	; (8006124 <xPortStartScheduler+0x134>)
 800606e:	6013      	str	r3, [r2, #0]
 8006070:	78fb      	ldrb	r3, [r7, #3]
 8006072:	b2db      	uxtb	r3, r3
 8006074:	005b      	lsls	r3, r3, #1
 8006076:	b2db      	uxtb	r3, r3
 8006078:	70fb      	strb	r3, [r7, #3]
 800607a:	78fb      	ldrb	r3, [r7, #3]
 800607c:	b2db      	uxtb	r3, r3
 800607e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006082:	2b80      	cmp	r3, #128	; 0x80
 8006084:	d0ef      	beq.n	8006066 <xPortStartScheduler+0x76>
 8006086:	4b27      	ldr	r3, [pc, #156]	; (8006124 <xPortStartScheduler+0x134>)
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	f1c3 0307 	rsb	r3, r3, #7
 800608e:	2b04      	cmp	r3, #4
 8006090:	d00a      	beq.n	80060a8 <xPortStartScheduler+0xb8>
 8006092:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006096:	f383 8811 	msr	BASEPRI, r3
 800609a:	f3bf 8f6f 	isb	sy
 800609e:	f3bf 8f4f 	dsb	sy
 80060a2:	60bb      	str	r3, [r7, #8]
 80060a4:	bf00      	nop
 80060a6:	e7fe      	b.n	80060a6 <xPortStartScheduler+0xb6>
 80060a8:	4b1e      	ldr	r3, [pc, #120]	; (8006124 <xPortStartScheduler+0x134>)
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	021b      	lsls	r3, r3, #8
 80060ae:	4a1d      	ldr	r2, [pc, #116]	; (8006124 <xPortStartScheduler+0x134>)
 80060b0:	6013      	str	r3, [r2, #0]
 80060b2:	4b1c      	ldr	r3, [pc, #112]	; (8006124 <xPortStartScheduler+0x134>)
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80060ba:	4a1a      	ldr	r2, [pc, #104]	; (8006124 <xPortStartScheduler+0x134>)
 80060bc:	6013      	str	r3, [r2, #0]
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	b2da      	uxtb	r2, r3
 80060c2:	697b      	ldr	r3, [r7, #20]
 80060c4:	701a      	strb	r2, [r3, #0]
 80060c6:	4b18      	ldr	r3, [pc, #96]	; (8006128 <xPortStartScheduler+0x138>)
 80060c8:	681b      	ldr	r3, [r3, #0]
 80060ca:	4a17      	ldr	r2, [pc, #92]	; (8006128 <xPortStartScheduler+0x138>)
 80060cc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80060d0:	6013      	str	r3, [r2, #0]
 80060d2:	4b15      	ldr	r3, [pc, #84]	; (8006128 <xPortStartScheduler+0x138>)
 80060d4:	681b      	ldr	r3, [r3, #0]
 80060d6:	4a14      	ldr	r2, [pc, #80]	; (8006128 <xPortStartScheduler+0x138>)
 80060d8:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80060dc:	6013      	str	r3, [r2, #0]
 80060de:	f000 f8dd 	bl	800629c <vPortSetupTimerInterrupt>
 80060e2:	4b12      	ldr	r3, [pc, #72]	; (800612c <xPortStartScheduler+0x13c>)
 80060e4:	2200      	movs	r2, #0
 80060e6:	601a      	str	r2, [r3, #0]
 80060e8:	f000 f8fc 	bl	80062e4 <vPortEnableVFP>
 80060ec:	4b10      	ldr	r3, [pc, #64]	; (8006130 <xPortStartScheduler+0x140>)
 80060ee:	681b      	ldr	r3, [r3, #0]
 80060f0:	4a0f      	ldr	r2, [pc, #60]	; (8006130 <xPortStartScheduler+0x140>)
 80060f2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80060f6:	6013      	str	r3, [r2, #0]
 80060f8:	f7ff ff66 	bl	8005fc8 <prvPortStartFirstTask>
 80060fc:	f7ff f848 	bl	8005190 <vTaskSwitchContext>
 8006100:	f7ff ff1e 	bl	8005f40 <prvTaskExitError>
 8006104:	2300      	movs	r3, #0
 8006106:	4618      	mov	r0, r3
 8006108:	3718      	adds	r7, #24
 800610a:	46bd      	mov	sp, r7
 800610c:	bd80      	pop	{r7, pc}
 800610e:	bf00      	nop
 8006110:	e000ed00 	.word	0xe000ed00
 8006114:	410fc271 	.word	0x410fc271
 8006118:	410fc270 	.word	0x410fc270
 800611c:	e000e400 	.word	0xe000e400
 8006120:	20001164 	.word	0x20001164
 8006124:	20001168 	.word	0x20001168
 8006128:	e000ed20 	.word	0xe000ed20
 800612c:	2000000c 	.word	0x2000000c
 8006130:	e000ef34 	.word	0xe000ef34

08006134 <vPortEnterCritical>:
 8006134:	b480      	push	{r7}
 8006136:	b083      	sub	sp, #12
 8006138:	af00      	add	r7, sp, #0
 800613a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800613e:	f383 8811 	msr	BASEPRI, r3
 8006142:	f3bf 8f6f 	isb	sy
 8006146:	f3bf 8f4f 	dsb	sy
 800614a:	607b      	str	r3, [r7, #4]
 800614c:	bf00      	nop
 800614e:	4b0f      	ldr	r3, [pc, #60]	; (800618c <vPortEnterCritical+0x58>)
 8006150:	681b      	ldr	r3, [r3, #0]
 8006152:	3301      	adds	r3, #1
 8006154:	4a0d      	ldr	r2, [pc, #52]	; (800618c <vPortEnterCritical+0x58>)
 8006156:	6013      	str	r3, [r2, #0]
 8006158:	4b0c      	ldr	r3, [pc, #48]	; (800618c <vPortEnterCritical+0x58>)
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	2b01      	cmp	r3, #1
 800615e:	d10f      	bne.n	8006180 <vPortEnterCritical+0x4c>
 8006160:	4b0b      	ldr	r3, [pc, #44]	; (8006190 <vPortEnterCritical+0x5c>)
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	b2db      	uxtb	r3, r3
 8006166:	2b00      	cmp	r3, #0
 8006168:	d00a      	beq.n	8006180 <vPortEnterCritical+0x4c>
 800616a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800616e:	f383 8811 	msr	BASEPRI, r3
 8006172:	f3bf 8f6f 	isb	sy
 8006176:	f3bf 8f4f 	dsb	sy
 800617a:	603b      	str	r3, [r7, #0]
 800617c:	bf00      	nop
 800617e:	e7fe      	b.n	800617e <vPortEnterCritical+0x4a>
 8006180:	bf00      	nop
 8006182:	370c      	adds	r7, #12
 8006184:	46bd      	mov	sp, r7
 8006186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800618a:	4770      	bx	lr
 800618c:	2000000c 	.word	0x2000000c
 8006190:	e000ed04 	.word	0xe000ed04

08006194 <vPortExitCritical>:
 8006194:	b480      	push	{r7}
 8006196:	b083      	sub	sp, #12
 8006198:	af00      	add	r7, sp, #0
 800619a:	4b12      	ldr	r3, [pc, #72]	; (80061e4 <vPortExitCritical+0x50>)
 800619c:	681b      	ldr	r3, [r3, #0]
 800619e:	2b00      	cmp	r3, #0
 80061a0:	d10a      	bne.n	80061b8 <vPortExitCritical+0x24>
 80061a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80061a6:	f383 8811 	msr	BASEPRI, r3
 80061aa:	f3bf 8f6f 	isb	sy
 80061ae:	f3bf 8f4f 	dsb	sy
 80061b2:	607b      	str	r3, [r7, #4]
 80061b4:	bf00      	nop
 80061b6:	e7fe      	b.n	80061b6 <vPortExitCritical+0x22>
 80061b8:	4b0a      	ldr	r3, [pc, #40]	; (80061e4 <vPortExitCritical+0x50>)
 80061ba:	681b      	ldr	r3, [r3, #0]
 80061bc:	3b01      	subs	r3, #1
 80061be:	4a09      	ldr	r2, [pc, #36]	; (80061e4 <vPortExitCritical+0x50>)
 80061c0:	6013      	str	r3, [r2, #0]
 80061c2:	4b08      	ldr	r3, [pc, #32]	; (80061e4 <vPortExitCritical+0x50>)
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	2b00      	cmp	r3, #0
 80061c8:	d105      	bne.n	80061d6 <vPortExitCritical+0x42>
 80061ca:	2300      	movs	r3, #0
 80061cc:	603b      	str	r3, [r7, #0]
 80061ce:	683b      	ldr	r3, [r7, #0]
 80061d0:	f383 8811 	msr	BASEPRI, r3
 80061d4:	bf00      	nop
 80061d6:	bf00      	nop
 80061d8:	370c      	adds	r7, #12
 80061da:	46bd      	mov	sp, r7
 80061dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061e0:	4770      	bx	lr
 80061e2:	bf00      	nop
 80061e4:	2000000c 	.word	0x2000000c
	...

080061f0 <PendSV_Handler>:
 80061f0:	f3ef 8009 	mrs	r0, PSP
 80061f4:	f3bf 8f6f 	isb	sy
 80061f8:	4b15      	ldr	r3, [pc, #84]	; (8006250 <pxCurrentTCBConst>)
 80061fa:	681a      	ldr	r2, [r3, #0]
 80061fc:	f01e 0f10 	tst.w	lr, #16
 8006200:	bf08      	it	eq
 8006202:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8006206:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800620a:	6010      	str	r0, [r2, #0]
 800620c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8006210:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006214:	f380 8811 	msr	BASEPRI, r0
 8006218:	f3bf 8f4f 	dsb	sy
 800621c:	f3bf 8f6f 	isb	sy
 8006220:	f7fe ffb6 	bl	8005190 <vTaskSwitchContext>
 8006224:	f04f 0000 	mov.w	r0, #0
 8006228:	f380 8811 	msr	BASEPRI, r0
 800622c:	bc09      	pop	{r0, r3}
 800622e:	6819      	ldr	r1, [r3, #0]
 8006230:	6808      	ldr	r0, [r1, #0]
 8006232:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006236:	f01e 0f10 	tst.w	lr, #16
 800623a:	bf08      	it	eq
 800623c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8006240:	f380 8809 	msr	PSP, r0
 8006244:	f3bf 8f6f 	isb	sy
 8006248:	4770      	bx	lr
 800624a:	bf00      	nop
 800624c:	f3af 8000 	nop.w

08006250 <pxCurrentTCBConst>:
 8006250:	20000b38 	.word	0x20000b38
 8006254:	bf00      	nop
 8006256:	bf00      	nop

08006258 <xPortSysTickHandler>:
 8006258:	b580      	push	{r7, lr}
 800625a:	b082      	sub	sp, #8
 800625c:	af00      	add	r7, sp, #0
 800625e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006262:	f383 8811 	msr	BASEPRI, r3
 8006266:	f3bf 8f6f 	isb	sy
 800626a:	f3bf 8f4f 	dsb	sy
 800626e:	607b      	str	r3, [r7, #4]
 8006270:	bf00      	nop
 8006272:	f7fe fed3 	bl	800501c <xTaskIncrementTick>
 8006276:	4603      	mov	r3, r0
 8006278:	2b00      	cmp	r3, #0
 800627a:	d003      	beq.n	8006284 <xPortSysTickHandler+0x2c>
 800627c:	4b06      	ldr	r3, [pc, #24]	; (8006298 <xPortSysTickHandler+0x40>)
 800627e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006282:	601a      	str	r2, [r3, #0]
 8006284:	2300      	movs	r3, #0
 8006286:	603b      	str	r3, [r7, #0]
 8006288:	683b      	ldr	r3, [r7, #0]
 800628a:	f383 8811 	msr	BASEPRI, r3
 800628e:	bf00      	nop
 8006290:	bf00      	nop
 8006292:	3708      	adds	r7, #8
 8006294:	46bd      	mov	sp, r7
 8006296:	bd80      	pop	{r7, pc}
 8006298:	e000ed04 	.word	0xe000ed04

0800629c <vPortSetupTimerInterrupt>:
 800629c:	b480      	push	{r7}
 800629e:	af00      	add	r7, sp, #0
 80062a0:	4b0b      	ldr	r3, [pc, #44]	; (80062d0 <vPortSetupTimerInterrupt+0x34>)
 80062a2:	2200      	movs	r2, #0
 80062a4:	601a      	str	r2, [r3, #0]
 80062a6:	4b0b      	ldr	r3, [pc, #44]	; (80062d4 <vPortSetupTimerInterrupt+0x38>)
 80062a8:	2200      	movs	r2, #0
 80062aa:	601a      	str	r2, [r3, #0]
 80062ac:	4b0a      	ldr	r3, [pc, #40]	; (80062d8 <vPortSetupTimerInterrupt+0x3c>)
 80062ae:	681b      	ldr	r3, [r3, #0]
 80062b0:	4a0a      	ldr	r2, [pc, #40]	; (80062dc <vPortSetupTimerInterrupt+0x40>)
 80062b2:	fba2 2303 	umull	r2, r3, r2, r3
 80062b6:	099b      	lsrs	r3, r3, #6
 80062b8:	4a09      	ldr	r2, [pc, #36]	; (80062e0 <vPortSetupTimerInterrupt+0x44>)
 80062ba:	3b01      	subs	r3, #1
 80062bc:	6013      	str	r3, [r2, #0]
 80062be:	4b04      	ldr	r3, [pc, #16]	; (80062d0 <vPortSetupTimerInterrupt+0x34>)
 80062c0:	2207      	movs	r2, #7
 80062c2:	601a      	str	r2, [r3, #0]
 80062c4:	bf00      	nop
 80062c6:	46bd      	mov	sp, r7
 80062c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062cc:	4770      	bx	lr
 80062ce:	bf00      	nop
 80062d0:	e000e010 	.word	0xe000e010
 80062d4:	e000e018 	.word	0xe000e018
 80062d8:	20000000 	.word	0x20000000
 80062dc:	10624dd3 	.word	0x10624dd3
 80062e0:	e000e014 	.word	0xe000e014

080062e4 <vPortEnableVFP>:
 80062e4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80062f4 <vPortEnableVFP+0x10>
 80062e8:	6801      	ldr	r1, [r0, #0]
 80062ea:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80062ee:	6001      	str	r1, [r0, #0]
 80062f0:	4770      	bx	lr
 80062f2:	bf00      	nop
 80062f4:	e000ed88 	.word	0xe000ed88

080062f8 <vPortValidateInterruptPriority>:
 80062f8:	b480      	push	{r7}
 80062fa:	b085      	sub	sp, #20
 80062fc:	af00      	add	r7, sp, #0
 80062fe:	f3ef 8305 	mrs	r3, IPSR
 8006302:	60fb      	str	r3, [r7, #12]
 8006304:	68fb      	ldr	r3, [r7, #12]
 8006306:	2b0f      	cmp	r3, #15
 8006308:	d914      	bls.n	8006334 <vPortValidateInterruptPriority+0x3c>
 800630a:	4a17      	ldr	r2, [pc, #92]	; (8006368 <vPortValidateInterruptPriority+0x70>)
 800630c:	68fb      	ldr	r3, [r7, #12]
 800630e:	4413      	add	r3, r2
 8006310:	781b      	ldrb	r3, [r3, #0]
 8006312:	72fb      	strb	r3, [r7, #11]
 8006314:	4b15      	ldr	r3, [pc, #84]	; (800636c <vPortValidateInterruptPriority+0x74>)
 8006316:	781b      	ldrb	r3, [r3, #0]
 8006318:	7afa      	ldrb	r2, [r7, #11]
 800631a:	429a      	cmp	r2, r3
 800631c:	d20a      	bcs.n	8006334 <vPortValidateInterruptPriority+0x3c>
 800631e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006322:	f383 8811 	msr	BASEPRI, r3
 8006326:	f3bf 8f6f 	isb	sy
 800632a:	f3bf 8f4f 	dsb	sy
 800632e:	607b      	str	r3, [r7, #4]
 8006330:	bf00      	nop
 8006332:	e7fe      	b.n	8006332 <vPortValidateInterruptPriority+0x3a>
 8006334:	4b0e      	ldr	r3, [pc, #56]	; (8006370 <vPortValidateInterruptPriority+0x78>)
 8006336:	681b      	ldr	r3, [r3, #0]
 8006338:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800633c:	4b0d      	ldr	r3, [pc, #52]	; (8006374 <vPortValidateInterruptPriority+0x7c>)
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	429a      	cmp	r2, r3
 8006342:	d90a      	bls.n	800635a <vPortValidateInterruptPriority+0x62>
 8006344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006348:	f383 8811 	msr	BASEPRI, r3
 800634c:	f3bf 8f6f 	isb	sy
 8006350:	f3bf 8f4f 	dsb	sy
 8006354:	603b      	str	r3, [r7, #0]
 8006356:	bf00      	nop
 8006358:	e7fe      	b.n	8006358 <vPortValidateInterruptPriority+0x60>
 800635a:	bf00      	nop
 800635c:	3714      	adds	r7, #20
 800635e:	46bd      	mov	sp, r7
 8006360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006364:	4770      	bx	lr
 8006366:	bf00      	nop
 8006368:	e000e3f0 	.word	0xe000e3f0
 800636c:	20001164 	.word	0x20001164
 8006370:	e000ed0c 	.word	0xe000ed0c
 8006374:	20001168 	.word	0x20001168

08006378 <pvPortMalloc>:
 8006378:	b580      	push	{r7, lr}
 800637a:	b08a      	sub	sp, #40	; 0x28
 800637c:	af00      	add	r7, sp, #0
 800637e:	6078      	str	r0, [r7, #4]
 8006380:	2300      	movs	r3, #0
 8006382:	61fb      	str	r3, [r7, #28]
 8006384:	f7fe fd8e 	bl	8004ea4 <vTaskSuspendAll>
 8006388:	4b5b      	ldr	r3, [pc, #364]	; (80064f8 <pvPortMalloc+0x180>)
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	2b00      	cmp	r3, #0
 800638e:	d101      	bne.n	8006394 <pvPortMalloc+0x1c>
 8006390:	f000 f920 	bl	80065d4 <prvHeapInit>
 8006394:	4b59      	ldr	r3, [pc, #356]	; (80064fc <pvPortMalloc+0x184>)
 8006396:	681a      	ldr	r2, [r3, #0]
 8006398:	687b      	ldr	r3, [r7, #4]
 800639a:	4013      	ands	r3, r2
 800639c:	2b00      	cmp	r3, #0
 800639e:	f040 8093 	bne.w	80064c8 <pvPortMalloc+0x150>
 80063a2:	687b      	ldr	r3, [r7, #4]
 80063a4:	2b00      	cmp	r3, #0
 80063a6:	d01d      	beq.n	80063e4 <pvPortMalloc+0x6c>
 80063a8:	2208      	movs	r2, #8
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	4413      	add	r3, r2
 80063ae:	607b      	str	r3, [r7, #4]
 80063b0:	687b      	ldr	r3, [r7, #4]
 80063b2:	f003 0307 	and.w	r3, r3, #7
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d014      	beq.n	80063e4 <pvPortMalloc+0x6c>
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	f023 0307 	bic.w	r3, r3, #7
 80063c0:	3308      	adds	r3, #8
 80063c2:	607b      	str	r3, [r7, #4]
 80063c4:	687b      	ldr	r3, [r7, #4]
 80063c6:	f003 0307 	and.w	r3, r3, #7
 80063ca:	2b00      	cmp	r3, #0
 80063cc:	d00a      	beq.n	80063e4 <pvPortMalloc+0x6c>
 80063ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80063d2:	f383 8811 	msr	BASEPRI, r3
 80063d6:	f3bf 8f6f 	isb	sy
 80063da:	f3bf 8f4f 	dsb	sy
 80063de:	617b      	str	r3, [r7, #20]
 80063e0:	bf00      	nop
 80063e2:	e7fe      	b.n	80063e2 <pvPortMalloc+0x6a>
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	2b00      	cmp	r3, #0
 80063e8:	d06e      	beq.n	80064c8 <pvPortMalloc+0x150>
 80063ea:	4b45      	ldr	r3, [pc, #276]	; (8006500 <pvPortMalloc+0x188>)
 80063ec:	681b      	ldr	r3, [r3, #0]
 80063ee:	687a      	ldr	r2, [r7, #4]
 80063f0:	429a      	cmp	r2, r3
 80063f2:	d869      	bhi.n	80064c8 <pvPortMalloc+0x150>
 80063f4:	4b43      	ldr	r3, [pc, #268]	; (8006504 <pvPortMalloc+0x18c>)
 80063f6:	623b      	str	r3, [r7, #32]
 80063f8:	4b42      	ldr	r3, [pc, #264]	; (8006504 <pvPortMalloc+0x18c>)
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	627b      	str	r3, [r7, #36]	; 0x24
 80063fe:	e004      	b.n	800640a <pvPortMalloc+0x92>
 8006400:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006402:	623b      	str	r3, [r7, #32]
 8006404:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006406:	681b      	ldr	r3, [r3, #0]
 8006408:	627b      	str	r3, [r7, #36]	; 0x24
 800640a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800640c:	685b      	ldr	r3, [r3, #4]
 800640e:	687a      	ldr	r2, [r7, #4]
 8006410:	429a      	cmp	r2, r3
 8006412:	d903      	bls.n	800641c <pvPortMalloc+0xa4>
 8006414:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006416:	681b      	ldr	r3, [r3, #0]
 8006418:	2b00      	cmp	r3, #0
 800641a:	d1f1      	bne.n	8006400 <pvPortMalloc+0x88>
 800641c:	4b36      	ldr	r3, [pc, #216]	; (80064f8 <pvPortMalloc+0x180>)
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006422:	429a      	cmp	r2, r3
 8006424:	d050      	beq.n	80064c8 <pvPortMalloc+0x150>
 8006426:	6a3b      	ldr	r3, [r7, #32]
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	2208      	movs	r2, #8
 800642c:	4413      	add	r3, r2
 800642e:	61fb      	str	r3, [r7, #28]
 8006430:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006432:	681a      	ldr	r2, [r3, #0]
 8006434:	6a3b      	ldr	r3, [r7, #32]
 8006436:	601a      	str	r2, [r3, #0]
 8006438:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800643a:	685a      	ldr	r2, [r3, #4]
 800643c:	687b      	ldr	r3, [r7, #4]
 800643e:	1ad2      	subs	r2, r2, r3
 8006440:	2308      	movs	r3, #8
 8006442:	005b      	lsls	r3, r3, #1
 8006444:	429a      	cmp	r2, r3
 8006446:	d91f      	bls.n	8006488 <pvPortMalloc+0x110>
 8006448:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800644a:	687b      	ldr	r3, [r7, #4]
 800644c:	4413      	add	r3, r2
 800644e:	61bb      	str	r3, [r7, #24]
 8006450:	69bb      	ldr	r3, [r7, #24]
 8006452:	f003 0307 	and.w	r3, r3, #7
 8006456:	2b00      	cmp	r3, #0
 8006458:	d00a      	beq.n	8006470 <pvPortMalloc+0xf8>
 800645a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800645e:	f383 8811 	msr	BASEPRI, r3
 8006462:	f3bf 8f6f 	isb	sy
 8006466:	f3bf 8f4f 	dsb	sy
 800646a:	613b      	str	r3, [r7, #16]
 800646c:	bf00      	nop
 800646e:	e7fe      	b.n	800646e <pvPortMalloc+0xf6>
 8006470:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006472:	685a      	ldr	r2, [r3, #4]
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	1ad2      	subs	r2, r2, r3
 8006478:	69bb      	ldr	r3, [r7, #24]
 800647a:	605a      	str	r2, [r3, #4]
 800647c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800647e:	687a      	ldr	r2, [r7, #4]
 8006480:	605a      	str	r2, [r3, #4]
 8006482:	69b8      	ldr	r0, [r7, #24]
 8006484:	f000 f908 	bl	8006698 <prvInsertBlockIntoFreeList>
 8006488:	4b1d      	ldr	r3, [pc, #116]	; (8006500 <pvPortMalloc+0x188>)
 800648a:	681a      	ldr	r2, [r3, #0]
 800648c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800648e:	685b      	ldr	r3, [r3, #4]
 8006490:	1ad3      	subs	r3, r2, r3
 8006492:	4a1b      	ldr	r2, [pc, #108]	; (8006500 <pvPortMalloc+0x188>)
 8006494:	6013      	str	r3, [r2, #0]
 8006496:	4b1a      	ldr	r3, [pc, #104]	; (8006500 <pvPortMalloc+0x188>)
 8006498:	681a      	ldr	r2, [r3, #0]
 800649a:	4b1b      	ldr	r3, [pc, #108]	; (8006508 <pvPortMalloc+0x190>)
 800649c:	681b      	ldr	r3, [r3, #0]
 800649e:	429a      	cmp	r2, r3
 80064a0:	d203      	bcs.n	80064aa <pvPortMalloc+0x132>
 80064a2:	4b17      	ldr	r3, [pc, #92]	; (8006500 <pvPortMalloc+0x188>)
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	4a18      	ldr	r2, [pc, #96]	; (8006508 <pvPortMalloc+0x190>)
 80064a8:	6013      	str	r3, [r2, #0]
 80064aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064ac:	685a      	ldr	r2, [r3, #4]
 80064ae:	4b13      	ldr	r3, [pc, #76]	; (80064fc <pvPortMalloc+0x184>)
 80064b0:	681b      	ldr	r3, [r3, #0]
 80064b2:	431a      	orrs	r2, r3
 80064b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064b6:	605a      	str	r2, [r3, #4]
 80064b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064ba:	2200      	movs	r2, #0
 80064bc:	601a      	str	r2, [r3, #0]
 80064be:	4b13      	ldr	r3, [pc, #76]	; (800650c <pvPortMalloc+0x194>)
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	3301      	adds	r3, #1
 80064c4:	4a11      	ldr	r2, [pc, #68]	; (800650c <pvPortMalloc+0x194>)
 80064c6:	6013      	str	r3, [r2, #0]
 80064c8:	f7fe fcfa 	bl	8004ec0 <xTaskResumeAll>
 80064cc:	69fb      	ldr	r3, [r7, #28]
 80064ce:	f003 0307 	and.w	r3, r3, #7
 80064d2:	2b00      	cmp	r3, #0
 80064d4:	d00a      	beq.n	80064ec <pvPortMalloc+0x174>
 80064d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064da:	f383 8811 	msr	BASEPRI, r3
 80064de:	f3bf 8f6f 	isb	sy
 80064e2:	f3bf 8f4f 	dsb	sy
 80064e6:	60fb      	str	r3, [r7, #12]
 80064e8:	bf00      	nop
 80064ea:	e7fe      	b.n	80064ea <pvPortMalloc+0x172>
 80064ec:	69fb      	ldr	r3, [r7, #28]
 80064ee:	4618      	mov	r0, r3
 80064f0:	3728      	adds	r7, #40	; 0x28
 80064f2:	46bd      	mov	sp, r7
 80064f4:	bd80      	pop	{r7, pc}
 80064f6:	bf00      	nop
 80064f8:	20004d74 	.word	0x20004d74
 80064fc:	20004d88 	.word	0x20004d88
 8006500:	20004d78 	.word	0x20004d78
 8006504:	20004d6c 	.word	0x20004d6c
 8006508:	20004d7c 	.word	0x20004d7c
 800650c:	20004d80 	.word	0x20004d80

08006510 <vPortFree>:
 8006510:	b580      	push	{r7, lr}
 8006512:	b086      	sub	sp, #24
 8006514:	af00      	add	r7, sp, #0
 8006516:	6078      	str	r0, [r7, #4]
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	617b      	str	r3, [r7, #20]
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	2b00      	cmp	r3, #0
 8006520:	d04d      	beq.n	80065be <vPortFree+0xae>
 8006522:	2308      	movs	r3, #8
 8006524:	425b      	negs	r3, r3
 8006526:	697a      	ldr	r2, [r7, #20]
 8006528:	4413      	add	r3, r2
 800652a:	617b      	str	r3, [r7, #20]
 800652c:	697b      	ldr	r3, [r7, #20]
 800652e:	613b      	str	r3, [r7, #16]
 8006530:	693b      	ldr	r3, [r7, #16]
 8006532:	685a      	ldr	r2, [r3, #4]
 8006534:	4b24      	ldr	r3, [pc, #144]	; (80065c8 <vPortFree+0xb8>)
 8006536:	681b      	ldr	r3, [r3, #0]
 8006538:	4013      	ands	r3, r2
 800653a:	2b00      	cmp	r3, #0
 800653c:	d10a      	bne.n	8006554 <vPortFree+0x44>
 800653e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006542:	f383 8811 	msr	BASEPRI, r3
 8006546:	f3bf 8f6f 	isb	sy
 800654a:	f3bf 8f4f 	dsb	sy
 800654e:	60fb      	str	r3, [r7, #12]
 8006550:	bf00      	nop
 8006552:	e7fe      	b.n	8006552 <vPortFree+0x42>
 8006554:	693b      	ldr	r3, [r7, #16]
 8006556:	681b      	ldr	r3, [r3, #0]
 8006558:	2b00      	cmp	r3, #0
 800655a:	d00a      	beq.n	8006572 <vPortFree+0x62>
 800655c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006560:	f383 8811 	msr	BASEPRI, r3
 8006564:	f3bf 8f6f 	isb	sy
 8006568:	f3bf 8f4f 	dsb	sy
 800656c:	60bb      	str	r3, [r7, #8]
 800656e:	bf00      	nop
 8006570:	e7fe      	b.n	8006570 <vPortFree+0x60>
 8006572:	693b      	ldr	r3, [r7, #16]
 8006574:	685a      	ldr	r2, [r3, #4]
 8006576:	4b14      	ldr	r3, [pc, #80]	; (80065c8 <vPortFree+0xb8>)
 8006578:	681b      	ldr	r3, [r3, #0]
 800657a:	4013      	ands	r3, r2
 800657c:	2b00      	cmp	r3, #0
 800657e:	d01e      	beq.n	80065be <vPortFree+0xae>
 8006580:	693b      	ldr	r3, [r7, #16]
 8006582:	681b      	ldr	r3, [r3, #0]
 8006584:	2b00      	cmp	r3, #0
 8006586:	d11a      	bne.n	80065be <vPortFree+0xae>
 8006588:	693b      	ldr	r3, [r7, #16]
 800658a:	685a      	ldr	r2, [r3, #4]
 800658c:	4b0e      	ldr	r3, [pc, #56]	; (80065c8 <vPortFree+0xb8>)
 800658e:	681b      	ldr	r3, [r3, #0]
 8006590:	43db      	mvns	r3, r3
 8006592:	401a      	ands	r2, r3
 8006594:	693b      	ldr	r3, [r7, #16]
 8006596:	605a      	str	r2, [r3, #4]
 8006598:	f7fe fc84 	bl	8004ea4 <vTaskSuspendAll>
 800659c:	693b      	ldr	r3, [r7, #16]
 800659e:	685a      	ldr	r2, [r3, #4]
 80065a0:	4b0a      	ldr	r3, [pc, #40]	; (80065cc <vPortFree+0xbc>)
 80065a2:	681b      	ldr	r3, [r3, #0]
 80065a4:	4413      	add	r3, r2
 80065a6:	4a09      	ldr	r2, [pc, #36]	; (80065cc <vPortFree+0xbc>)
 80065a8:	6013      	str	r3, [r2, #0]
 80065aa:	6938      	ldr	r0, [r7, #16]
 80065ac:	f000 f874 	bl	8006698 <prvInsertBlockIntoFreeList>
 80065b0:	4b07      	ldr	r3, [pc, #28]	; (80065d0 <vPortFree+0xc0>)
 80065b2:	681b      	ldr	r3, [r3, #0]
 80065b4:	3301      	adds	r3, #1
 80065b6:	4a06      	ldr	r2, [pc, #24]	; (80065d0 <vPortFree+0xc0>)
 80065b8:	6013      	str	r3, [r2, #0]
 80065ba:	f7fe fc81 	bl	8004ec0 <xTaskResumeAll>
 80065be:	bf00      	nop
 80065c0:	3718      	adds	r7, #24
 80065c2:	46bd      	mov	sp, r7
 80065c4:	bd80      	pop	{r7, pc}
 80065c6:	bf00      	nop
 80065c8:	20004d88 	.word	0x20004d88
 80065cc:	20004d78 	.word	0x20004d78
 80065d0:	20004d84 	.word	0x20004d84

080065d4 <prvHeapInit>:
 80065d4:	b480      	push	{r7}
 80065d6:	b085      	sub	sp, #20
 80065d8:	af00      	add	r7, sp, #0
 80065da:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 80065de:	60bb      	str	r3, [r7, #8]
 80065e0:	4b27      	ldr	r3, [pc, #156]	; (8006680 <prvHeapInit+0xac>)
 80065e2:	60fb      	str	r3, [r7, #12]
 80065e4:	68fb      	ldr	r3, [r7, #12]
 80065e6:	f003 0307 	and.w	r3, r3, #7
 80065ea:	2b00      	cmp	r3, #0
 80065ec:	d00c      	beq.n	8006608 <prvHeapInit+0x34>
 80065ee:	68fb      	ldr	r3, [r7, #12]
 80065f0:	3307      	adds	r3, #7
 80065f2:	60fb      	str	r3, [r7, #12]
 80065f4:	68fb      	ldr	r3, [r7, #12]
 80065f6:	f023 0307 	bic.w	r3, r3, #7
 80065fa:	60fb      	str	r3, [r7, #12]
 80065fc:	68ba      	ldr	r2, [r7, #8]
 80065fe:	68fb      	ldr	r3, [r7, #12]
 8006600:	1ad3      	subs	r3, r2, r3
 8006602:	4a1f      	ldr	r2, [pc, #124]	; (8006680 <prvHeapInit+0xac>)
 8006604:	4413      	add	r3, r2
 8006606:	60bb      	str	r3, [r7, #8]
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	607b      	str	r3, [r7, #4]
 800660c:	4a1d      	ldr	r2, [pc, #116]	; (8006684 <prvHeapInit+0xb0>)
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	6013      	str	r3, [r2, #0]
 8006612:	4b1c      	ldr	r3, [pc, #112]	; (8006684 <prvHeapInit+0xb0>)
 8006614:	2200      	movs	r2, #0
 8006616:	605a      	str	r2, [r3, #4]
 8006618:	687b      	ldr	r3, [r7, #4]
 800661a:	68ba      	ldr	r2, [r7, #8]
 800661c:	4413      	add	r3, r2
 800661e:	60fb      	str	r3, [r7, #12]
 8006620:	2208      	movs	r2, #8
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	1a9b      	subs	r3, r3, r2
 8006626:	60fb      	str	r3, [r7, #12]
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	f023 0307 	bic.w	r3, r3, #7
 800662e:	60fb      	str	r3, [r7, #12]
 8006630:	68fb      	ldr	r3, [r7, #12]
 8006632:	4a15      	ldr	r2, [pc, #84]	; (8006688 <prvHeapInit+0xb4>)
 8006634:	6013      	str	r3, [r2, #0]
 8006636:	4b14      	ldr	r3, [pc, #80]	; (8006688 <prvHeapInit+0xb4>)
 8006638:	681b      	ldr	r3, [r3, #0]
 800663a:	2200      	movs	r2, #0
 800663c:	605a      	str	r2, [r3, #4]
 800663e:	4b12      	ldr	r3, [pc, #72]	; (8006688 <prvHeapInit+0xb4>)
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	2200      	movs	r2, #0
 8006644:	601a      	str	r2, [r3, #0]
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	603b      	str	r3, [r7, #0]
 800664a:	683b      	ldr	r3, [r7, #0]
 800664c:	68fa      	ldr	r2, [r7, #12]
 800664e:	1ad2      	subs	r2, r2, r3
 8006650:	683b      	ldr	r3, [r7, #0]
 8006652:	605a      	str	r2, [r3, #4]
 8006654:	4b0c      	ldr	r3, [pc, #48]	; (8006688 <prvHeapInit+0xb4>)
 8006656:	681a      	ldr	r2, [r3, #0]
 8006658:	683b      	ldr	r3, [r7, #0]
 800665a:	601a      	str	r2, [r3, #0]
 800665c:	683b      	ldr	r3, [r7, #0]
 800665e:	685b      	ldr	r3, [r3, #4]
 8006660:	4a0a      	ldr	r2, [pc, #40]	; (800668c <prvHeapInit+0xb8>)
 8006662:	6013      	str	r3, [r2, #0]
 8006664:	683b      	ldr	r3, [r7, #0]
 8006666:	685b      	ldr	r3, [r3, #4]
 8006668:	4a09      	ldr	r2, [pc, #36]	; (8006690 <prvHeapInit+0xbc>)
 800666a:	6013      	str	r3, [r2, #0]
 800666c:	4b09      	ldr	r3, [pc, #36]	; (8006694 <prvHeapInit+0xc0>)
 800666e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8006672:	601a      	str	r2, [r3, #0]
 8006674:	bf00      	nop
 8006676:	3714      	adds	r7, #20
 8006678:	46bd      	mov	sp, r7
 800667a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800667e:	4770      	bx	lr
 8006680:	2000116c 	.word	0x2000116c
 8006684:	20004d6c 	.word	0x20004d6c
 8006688:	20004d74 	.word	0x20004d74
 800668c:	20004d7c 	.word	0x20004d7c
 8006690:	20004d78 	.word	0x20004d78
 8006694:	20004d88 	.word	0x20004d88

08006698 <prvInsertBlockIntoFreeList>:
 8006698:	b480      	push	{r7}
 800669a:	b085      	sub	sp, #20
 800669c:	af00      	add	r7, sp, #0
 800669e:	6078      	str	r0, [r7, #4]
 80066a0:	4b28      	ldr	r3, [pc, #160]	; (8006744 <prvInsertBlockIntoFreeList+0xac>)
 80066a2:	60fb      	str	r3, [r7, #12]
 80066a4:	e002      	b.n	80066ac <prvInsertBlockIntoFreeList+0x14>
 80066a6:	68fb      	ldr	r3, [r7, #12]
 80066a8:	681b      	ldr	r3, [r3, #0]
 80066aa:	60fb      	str	r3, [r7, #12]
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	681b      	ldr	r3, [r3, #0]
 80066b0:	687a      	ldr	r2, [r7, #4]
 80066b2:	429a      	cmp	r2, r3
 80066b4:	d8f7      	bhi.n	80066a6 <prvInsertBlockIntoFreeList+0xe>
 80066b6:	68fb      	ldr	r3, [r7, #12]
 80066b8:	60bb      	str	r3, [r7, #8]
 80066ba:	68fb      	ldr	r3, [r7, #12]
 80066bc:	685b      	ldr	r3, [r3, #4]
 80066be:	68ba      	ldr	r2, [r7, #8]
 80066c0:	4413      	add	r3, r2
 80066c2:	687a      	ldr	r2, [r7, #4]
 80066c4:	429a      	cmp	r2, r3
 80066c6:	d108      	bne.n	80066da <prvInsertBlockIntoFreeList+0x42>
 80066c8:	68fb      	ldr	r3, [r7, #12]
 80066ca:	685a      	ldr	r2, [r3, #4]
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	685b      	ldr	r3, [r3, #4]
 80066d0:	441a      	add	r2, r3
 80066d2:	68fb      	ldr	r3, [r7, #12]
 80066d4:	605a      	str	r2, [r3, #4]
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	607b      	str	r3, [r7, #4]
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	60bb      	str	r3, [r7, #8]
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	685b      	ldr	r3, [r3, #4]
 80066e2:	68ba      	ldr	r2, [r7, #8]
 80066e4:	441a      	add	r2, r3
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	429a      	cmp	r2, r3
 80066ec:	d118      	bne.n	8006720 <prvInsertBlockIntoFreeList+0x88>
 80066ee:	68fb      	ldr	r3, [r7, #12]
 80066f0:	681a      	ldr	r2, [r3, #0]
 80066f2:	4b15      	ldr	r3, [pc, #84]	; (8006748 <prvInsertBlockIntoFreeList+0xb0>)
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	429a      	cmp	r2, r3
 80066f8:	d00d      	beq.n	8006716 <prvInsertBlockIntoFreeList+0x7e>
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	685a      	ldr	r2, [r3, #4]
 80066fe:	68fb      	ldr	r3, [r7, #12]
 8006700:	681b      	ldr	r3, [r3, #0]
 8006702:	685b      	ldr	r3, [r3, #4]
 8006704:	441a      	add	r2, r3
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	605a      	str	r2, [r3, #4]
 800670a:	68fb      	ldr	r3, [r7, #12]
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	681a      	ldr	r2, [r3, #0]
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	601a      	str	r2, [r3, #0]
 8006714:	e008      	b.n	8006728 <prvInsertBlockIntoFreeList+0x90>
 8006716:	4b0c      	ldr	r3, [pc, #48]	; (8006748 <prvInsertBlockIntoFreeList+0xb0>)
 8006718:	681a      	ldr	r2, [r3, #0]
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	601a      	str	r2, [r3, #0]
 800671e:	e003      	b.n	8006728 <prvInsertBlockIntoFreeList+0x90>
 8006720:	68fb      	ldr	r3, [r7, #12]
 8006722:	681a      	ldr	r2, [r3, #0]
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	601a      	str	r2, [r3, #0]
 8006728:	68fa      	ldr	r2, [r7, #12]
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	429a      	cmp	r2, r3
 800672e:	d002      	beq.n	8006736 <prvInsertBlockIntoFreeList+0x9e>
 8006730:	68fb      	ldr	r3, [r7, #12]
 8006732:	687a      	ldr	r2, [r7, #4]
 8006734:	601a      	str	r2, [r3, #0]
 8006736:	bf00      	nop
 8006738:	3714      	adds	r7, #20
 800673a:	46bd      	mov	sp, r7
 800673c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006740:	4770      	bx	lr
 8006742:	bf00      	nop
 8006744:	20004d6c 	.word	0x20004d6c
 8006748:	20004d74 	.word	0x20004d74

0800674c <_ZdlPvj>:
 800674c:	f000 b9b1 	b.w	8006ab2 <_ZdlPv>

08006750 <_Znwj>:
 8006750:	2801      	cmp	r0, #1
 8006752:	bf38      	it	cc
 8006754:	2001      	movcc	r0, #1
 8006756:	b510      	push	{r4, lr}
 8006758:	4604      	mov	r4, r0
 800675a:	4620      	mov	r0, r4
 800675c:	f000 f9bc 	bl	8006ad8 <malloc>
 8006760:	b100      	cbz	r0, 8006764 <_Znwj+0x14>
 8006762:	bd10      	pop	{r4, pc}
 8006764:	f000 f9a8 	bl	8006ab8 <_ZSt15get_new_handlerv>
 8006768:	b908      	cbnz	r0, 800676e <_Znwj+0x1e>
 800676a:	f000 f9ad 	bl	8006ac8 <abort>
 800676e:	4780      	blx	r0
 8006770:	e7f3      	b.n	800675a <_Znwj+0xa>

08006772 <_ZNSaIcEC1Ev>:
 8006772:	4770      	bx	lr

08006774 <_ZNSaIcEC1ERKS_>:
 8006774:	4770      	bx	lr

08006776 <_ZNSaIcED1Ev>:
 8006776:	4770      	bx	lr

08006778 <_ZSt17__throw_bad_allocv>:
 8006778:	b508      	push	{r3, lr}
 800677a:	f000 f9a5 	bl	8006ac8 <abort>

0800677e <_ZSt19__throw_logic_errorPKc>:
 800677e:	b508      	push	{r3, lr}
 8006780:	f000 f9a2 	bl	8006ac8 <abort>

08006784 <_ZSt20__throw_length_errorPKc>:
 8006784:	b508      	push	{r3, lr}
 8006786:	f000 f99f 	bl	8006ac8 <abort>

0800678a <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>:
 800678a:	b10a      	cbz	r2, 8006790 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0+0x6>
 800678c:	f000 bb78 	b.w	8006e80 <memcpy>
 8006790:	4770      	bx	lr
	...

08006794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 8006794:	b508      	push	{r3, lr}
 8006796:	680b      	ldr	r3, [r1, #0]
 8006798:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800679c:	d302      	bcc.n	80067a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 800679e:	480d      	ldr	r0, [pc, #52]	; (80067d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 80067a0:	f7ff fff0 	bl	8006784 <_ZSt20__throw_length_errorPKc>
 80067a4:	4293      	cmp	r3, r2
 80067a6:	d90b      	bls.n	80067c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80067a8:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80067ac:	ea4f 0042 	mov.w	r0, r2, lsl #1
 80067b0:	d206      	bcs.n	80067c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80067b2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80067b6:	bf2a      	itet	cs
 80067b8:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 80067bc:	6008      	strcc	r0, [r1, #0]
 80067be:	600b      	strcs	r3, [r1, #0]
 80067c0:	6808      	ldr	r0, [r1, #0]
 80067c2:	3001      	adds	r0, #1
 80067c4:	d501      	bpl.n	80067ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 80067c6:	f7ff ffd7 	bl	8006778 <_ZSt17__throw_bad_allocv>
 80067ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80067ce:	f7ff bfbf 	b.w	8006750 <_Znwj>
 80067d2:	bf00      	nop
 80067d4:	080078c4 	.word	0x080078c4

080067d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 80067d8:	f850 3b08 	ldr.w	r3, [r0], #8
 80067dc:	4283      	cmp	r3, r0
 80067de:	d002      	beq.n	80067e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 80067e0:	4618      	mov	r0, r3
 80067e2:	f000 b966 	b.w	8006ab2 <_ZdlPv>
 80067e6:	4770      	bx	lr

080067e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 80067e8:	6840      	ldr	r0, [r0, #4]
 80067ea:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80067ee:	3901      	subs	r1, #1
 80067f0:	1a09      	subs	r1, r1, r0
 80067f2:	4291      	cmp	r1, r2
 80067f4:	b508      	push	{r3, lr}
 80067f6:	d202      	bcs.n	80067fe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 80067f8:	4618      	mov	r0, r3
 80067fa:	f7ff ffc3 	bl	8006784 <_ZSt20__throw_length_errorPKc>
 80067fe:	bd08      	pop	{r3, pc}

08006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8006800:	2a01      	cmp	r2, #1
 8006802:	b410      	push	{r4}
 8006804:	d104      	bne.n	8006810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
 8006806:	780a      	ldrb	r2, [r1, #0]
 8006808:	f85d 4b04 	ldr.w	r4, [sp], #4
 800680c:	7002      	strb	r2, [r0, #0]
 800680e:	4770      	bx	lr
 8006810:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006814:	f7ff bfb9 	b.w	800678a <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>

08006818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 8006818:	b508      	push	{r3, lr}
 800681a:	1a52      	subs	r2, r2, r1
 800681c:	f7ff fff0 	bl	8006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8006820:	bd08      	pop	{r3, pc}

08006822 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 8006822:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006826:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8006828:	461f      	mov	r7, r3
 800682a:	6843      	ldr	r3, [r0, #4]
 800682c:	eb01 0802 	add.w	r8, r1, r2
 8006830:	1ab2      	subs	r2, r6, r2
 8006832:	441a      	add	r2, r3
 8006834:	eba3 0908 	sub.w	r9, r3, r8
 8006838:	4603      	mov	r3, r0
 800683a:	9201      	str	r2, [sp, #4]
 800683c:	f853 2b08 	ldr.w	r2, [r3], #8
 8006840:	429a      	cmp	r2, r3
 8006842:	bf18      	it	ne
 8006844:	6882      	ldrne	r2, [r0, #8]
 8006846:	460d      	mov	r5, r1
 8006848:	bf08      	it	eq
 800684a:	220f      	moveq	r2, #15
 800684c:	a901      	add	r1, sp, #4
 800684e:	4604      	mov	r4, r0
 8006850:	f7ff ffa0 	bl	8006794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8006854:	4682      	mov	sl, r0
 8006856:	b11d      	cbz	r5, 8006860 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 8006858:	6821      	ldr	r1, [r4, #0]
 800685a:	462a      	mov	r2, r5
 800685c:	f7ff ffd0 	bl	8006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8006860:	b137      	cbz	r7, 8006870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8006862:	b12e      	cbz	r6, 8006870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8006864:	4632      	mov	r2, r6
 8006866:	4639      	mov	r1, r7
 8006868:	eb0a 0005 	add.w	r0, sl, r5
 800686c:	f7ff ffc8 	bl	8006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8006870:	f1b9 0f00 	cmp.w	r9, #0
 8006874:	d007      	beq.n	8006886 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 8006876:	6821      	ldr	r1, [r4, #0]
 8006878:	4435      	add	r5, r6
 800687a:	464a      	mov	r2, r9
 800687c:	4441      	add	r1, r8
 800687e:	eb0a 0005 	add.w	r0, sl, r5
 8006882:	f7ff ffbd 	bl	8006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8006886:	4620      	mov	r0, r4
 8006888:	f7ff ffa6 	bl	80067d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 800688c:	9b01      	ldr	r3, [sp, #4]
 800688e:	f8c4 a000 	str.w	sl, [r4]
 8006892:	60a3      	str	r3, [r4, #8]
 8006894:	b002      	add	sp, #8
 8006896:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800689a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 800689a:	f100 0208 	add.w	r2, r0, #8
 800689e:	6002      	str	r2, [r0, #0]
 80068a0:	2200      	movs	r2, #0
 80068a2:	6042      	str	r2, [r0, #4]
 80068a4:	7202      	strb	r2, [r0, #8]
 80068a6:	4770      	bx	lr

080068a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_>:
 80068a8:	f100 0208 	add.w	r2, r0, #8
 80068ac:	6002      	str	r2, [r0, #0]
 80068ae:	2200      	movs	r2, #0
 80068b0:	6042      	str	r2, [r0, #4]
 80068b2:	7202      	strb	r2, [r0, #8]
 80068b4:	4770      	bx	lr

080068b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
 80068b6:	b570      	push	{r4, r5, r6, lr}
 80068b8:	4604      	mov	r4, r0
 80068ba:	460e      	mov	r6, r1
 80068bc:	3008      	adds	r0, #8
 80068be:	6020      	str	r0, [r4, #0]
 80068c0:	f856 3b08 	ldr.w	r3, [r6], #8
 80068c4:	429e      	cmp	r6, r3
 80068c6:	460d      	mov	r5, r1
 80068c8:	d10b      	bne.n	80068e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x2c>
 80068ca:	2210      	movs	r2, #16
 80068cc:	4631      	mov	r1, r6
 80068ce:	f7ff ff5c 	bl	800678a <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 80068d2:	686b      	ldr	r3, [r5, #4]
 80068d4:	6063      	str	r3, [r4, #4]
 80068d6:	2300      	movs	r3, #0
 80068d8:	602e      	str	r6, [r5, #0]
 80068da:	606b      	str	r3, [r5, #4]
 80068dc:	722b      	strb	r3, [r5, #8]
 80068de:	4620      	mov	r0, r4
 80068e0:	bd70      	pop	{r4, r5, r6, pc}
 80068e2:	6023      	str	r3, [r4, #0]
 80068e4:	688b      	ldr	r3, [r1, #8]
 80068e6:	60a3      	str	r3, [r4, #8]
 80068e8:	e7f3      	b.n	80068d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x1c>

080068ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 80068ea:	b510      	push	{r4, lr}
 80068ec:	4604      	mov	r4, r0
 80068ee:	f7ff ff73 	bl	80067d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80068f2:	4620      	mov	r0, r4
 80068f4:	bd10      	pop	{r4, pc}

080068f6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 80068f6:	b570      	push	{r4, r5, r6, lr}
 80068f8:	460c      	mov	r4, r1
 80068fa:	f851 3b08 	ldr.w	r3, [r1], #8
 80068fe:	4299      	cmp	r1, r3
 8006900:	4605      	mov	r5, r0
 8006902:	6800      	ldr	r0, [r0, #0]
 8006904:	d110      	bne.n	8006928 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x32>
 8006906:	42a5      	cmp	r5, r4
 8006908:	d008      	beq.n	800691c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x26>
 800690a:	6862      	ldr	r2, [r4, #4]
 800690c:	b10a      	cbz	r2, 8006912 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x1c>
 800690e:	f7ff ff77 	bl	8006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8006912:	6863      	ldr	r3, [r4, #4]
 8006914:	682a      	ldr	r2, [r5, #0]
 8006916:	606b      	str	r3, [r5, #4]
 8006918:	2100      	movs	r1, #0
 800691a:	54d1      	strb	r1, [r2, r3]
 800691c:	6822      	ldr	r2, [r4, #0]
 800691e:	2300      	movs	r3, #0
 8006920:	6063      	str	r3, [r4, #4]
 8006922:	7013      	strb	r3, [r2, #0]
 8006924:	4628      	mov	r0, r5
 8006926:	bd70      	pop	{r4, r5, r6, pc}
 8006928:	602b      	str	r3, [r5, #0]
 800692a:	f105 0608 	add.w	r6, r5, #8
 800692e:	6863      	ldr	r3, [r4, #4]
 8006930:	606b      	str	r3, [r5, #4]
 8006932:	42b0      	cmp	r0, r6
 8006934:	68a3      	ldr	r3, [r4, #8]
 8006936:	bf18      	it	ne
 8006938:	68aa      	ldrne	r2, [r5, #8]
 800693a:	60ab      	str	r3, [r5, #8]
 800693c:	bf08      	it	eq
 800693e:	2000      	moveq	r0, #0
 8006940:	b110      	cbz	r0, 8006948 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x52>
 8006942:	6020      	str	r0, [r4, #0]
 8006944:	60a2      	str	r2, [r4, #8]
 8006946:	e7e9      	b.n	800691c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x26>
 8006948:	6021      	str	r1, [r4, #0]
 800694a:	e7e7      	b.n	800691c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x26>

0800694c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 800694c:	6840      	ldr	r0, [r0, #4]
 800694e:	4770      	bx	lr

08006950 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 8006950:	6840      	ldr	r0, [r0, #4]
 8006952:	4770      	bx	lr

08006954 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8006954:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006956:	4603      	mov	r3, r0
 8006958:	9101      	str	r1, [sp, #4]
 800695a:	f853 2b08 	ldr.w	r2, [r3], #8
 800695e:	429a      	cmp	r2, r3
 8006960:	bf18      	it	ne
 8006962:	6882      	ldrne	r2, [r0, #8]
 8006964:	9b01      	ldr	r3, [sp, #4]
 8006966:	bf08      	it	eq
 8006968:	220f      	moveq	r2, #15
 800696a:	4293      	cmp	r3, r2
 800696c:	4604      	mov	r4, r0
 800696e:	d90e      	bls.n	800698e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x3a>
 8006970:	a901      	add	r1, sp, #4
 8006972:	f7ff ff0f 	bl	8006794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8006976:	6862      	ldr	r2, [r4, #4]
 8006978:	6821      	ldr	r1, [r4, #0]
 800697a:	3201      	adds	r2, #1
 800697c:	4605      	mov	r5, r0
 800697e:	f7ff ff3f 	bl	8006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8006982:	4620      	mov	r0, r4
 8006984:	f7ff ff28 	bl	80067d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8006988:	9b01      	ldr	r3, [sp, #4]
 800698a:	6025      	str	r5, [r4, #0]
 800698c:	60a3      	str	r3, [r4, #8]
 800698e:	b003      	add	sp, #12
 8006990:	bd30      	pop	{r4, r5, pc}

08006992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 8006992:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006994:	4604      	mov	r4, r0
 8006996:	4623      	mov	r3, r4
 8006998:	6840      	ldr	r0, [r0, #4]
 800699a:	f853 6b08 	ldr.w	r6, [r3], #8
 800699e:	429e      	cmp	r6, r3
 80069a0:	bf18      	it	ne
 80069a2:	68a3      	ldrne	r3, [r4, #8]
 80069a4:	eb00 0502 	add.w	r5, r0, r2
 80069a8:	bf08      	it	eq
 80069aa:	230f      	moveq	r3, #15
 80069ac:	429d      	cmp	r5, r3
 80069ae:	d80a      	bhi.n	80069c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 80069b0:	b112      	cbz	r2, 80069b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 80069b2:	4430      	add	r0, r6
 80069b4:	f7ff ff24 	bl	8006800 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80069b8:	6823      	ldr	r3, [r4, #0]
 80069ba:	6065      	str	r5, [r4, #4]
 80069bc:	2200      	movs	r2, #0
 80069be:	4620      	mov	r0, r4
 80069c0:	555a      	strb	r2, [r3, r5]
 80069c2:	b002      	add	sp, #8
 80069c4:	bd70      	pop	{r4, r5, r6, pc}
 80069c6:	9200      	str	r2, [sp, #0]
 80069c8:	460b      	mov	r3, r1
 80069ca:	2200      	movs	r2, #0
 80069cc:	4601      	mov	r1, r0
 80069ce:	4620      	mov	r0, r4
 80069d0:	f7ff ff27 	bl	8006822 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 80069d4:	e7f0      	b.n	80069b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

080069d6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 80069d6:	b508      	push	{r3, lr}
 80069d8:	e9d1 1200 	ldrd	r1, r2, [r1]
 80069dc:	f7ff ffd9 	bl	8006992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 80069e0:	bd08      	pop	{r3, pc}
	...

080069e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 80069e4:	b570      	push	{r4, r5, r6, lr}
 80069e6:	4b06      	ldr	r3, [pc, #24]	; (8006a00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 80069e8:	4604      	mov	r4, r0
 80069ea:	460d      	mov	r5, r1
 80069ec:	4616      	mov	r6, r2
 80069ee:	2100      	movs	r1, #0
 80069f0:	f7ff fefa 	bl	80067e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 80069f4:	4632      	mov	r2, r6
 80069f6:	4629      	mov	r1, r5
 80069f8:	4620      	mov	r0, r4
 80069fa:	f7ff ffca 	bl	8006992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 80069fe:	bd70      	pop	{r4, r5, r6, pc}
 8006a00:	080078dc 	.word	0x080078dc

08006a04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 8006a04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006a06:	4604      	mov	r4, r0
 8006a08:	4608      	mov	r0, r1
 8006a0a:	460d      	mov	r5, r1
 8006a0c:	f7f9 fc30 	bl	8000270 <strlen>
 8006a10:	4b06      	ldr	r3, [pc, #24]	; (8006a2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 8006a12:	9001      	str	r0, [sp, #4]
 8006a14:	4602      	mov	r2, r0
 8006a16:	2100      	movs	r1, #0
 8006a18:	4620      	mov	r0, r4
 8006a1a:	f7ff fee5 	bl	80067e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8006a1e:	9a01      	ldr	r2, [sp, #4]
 8006a20:	4629      	mov	r1, r5
 8006a22:	4620      	mov	r0, r4
 8006a24:	f7ff ffb5 	bl	8006992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8006a28:	b003      	add	sp, #12
 8006a2a:	bd30      	pop	{r4, r5, pc}
 8006a2c:	080078dc 	.word	0x080078dc

08006a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
 8006a30:	b508      	push	{r3, lr}
 8006a32:	f7ff ffe7 	bl	8006a04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 8006a36:	bd08      	pop	{r3, pc}

08006a38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 8006a38:	6800      	ldr	r0, [r0, #0]
 8006a3a:	4770      	bx	lr

08006a3c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv>:
 8006a3c:	4770      	bx	lr
	...

08006a40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
 8006a40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a42:	4604      	mov	r4, r0
 8006a44:	4616      	mov	r6, r2
 8006a46:	460d      	mov	r5, r1
 8006a48:	b919      	cbnz	r1, 8006a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 8006a4a:	b112      	cbz	r2, 8006a52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 8006a4c:	480d      	ldr	r0, [pc, #52]	; (8006a84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x44>)
 8006a4e:	f7ff fe96 	bl	800677e <_ZSt19__throw_logic_errorPKc>
 8006a52:	1b73      	subs	r3, r6, r5
 8006a54:	2b0f      	cmp	r3, #15
 8006a56:	9301      	str	r3, [sp, #4]
 8006a58:	d907      	bls.n	8006a6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x2a>
 8006a5a:	2200      	movs	r2, #0
 8006a5c:	a901      	add	r1, sp, #4
 8006a5e:	4620      	mov	r0, r4
 8006a60:	f7ff fe98 	bl	8006794 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8006a64:	9b01      	ldr	r3, [sp, #4]
 8006a66:	6020      	str	r0, [r4, #0]
 8006a68:	60a3      	str	r3, [r4, #8]
 8006a6a:	4632      	mov	r2, r6
 8006a6c:	4629      	mov	r1, r5
 8006a6e:	6820      	ldr	r0, [r4, #0]
 8006a70:	f7ff fed2 	bl	8006818 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
 8006a74:	9b01      	ldr	r3, [sp, #4]
 8006a76:	6822      	ldr	r2, [r4, #0]
 8006a78:	6063      	str	r3, [r4, #4]
 8006a7a:	2100      	movs	r1, #0
 8006a7c:	54d1      	strb	r1, [r2, r3]
 8006a7e:	b002      	add	sp, #8
 8006a80:	bd70      	pop	{r4, r5, r6, pc}
 8006a82:	bf00      	nop
 8006a84:	080078f1 	.word	0x080078f1

08006a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>:
 8006a88:	b538      	push	{r3, r4, r5, lr}
 8006a8a:	f100 0308 	add.w	r3, r0, #8
 8006a8e:	4604      	mov	r4, r0
 8006a90:	6003      	str	r3, [r0, #0]
 8006a92:	460d      	mov	r5, r1
 8006a94:	b159      	cbz	r1, 8006aae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x26>
 8006a96:	4608      	mov	r0, r1
 8006a98:	f7f9 fbea 	bl	8000270 <strlen>
 8006a9c:	182a      	adds	r2, r5, r0
 8006a9e:	4620      	mov	r0, r4
 8006aa0:	f04f 0300 	mov.w	r3, #0
 8006aa4:	4629      	mov	r1, r5
 8006aa6:	f7ff ffcb 	bl	8006a40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
 8006aaa:	4620      	mov	r0, r4
 8006aac:	bd38      	pop	{r3, r4, r5, pc}
 8006aae:	2201      	movs	r2, #1
 8006ab0:	e7f5      	b.n	8006a9e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x16>

08006ab2 <_ZdlPv>:
 8006ab2:	f000 b819 	b.w	8006ae8 <free>
	...

08006ab8 <_ZSt15get_new_handlerv>:
 8006ab8:	4b02      	ldr	r3, [pc, #8]	; (8006ac4 <_ZSt15get_new_handlerv+0xc>)
 8006aba:	6818      	ldr	r0, [r3, #0]
 8006abc:	f3bf 8f5b 	dmb	ish
 8006ac0:	4770      	bx	lr
 8006ac2:	bf00      	nop
 8006ac4:	20004d8c 	.word	0x20004d8c

08006ac8 <abort>:
 8006ac8:	b508      	push	{r3, lr}
 8006aca:	2006      	movs	r0, #6
 8006acc:	f000 f92a 	bl	8006d24 <raise>
 8006ad0:	2001      	movs	r0, #1
 8006ad2:	f7fa fe2d 	bl	8001730 <_exit>
	...

08006ad8 <malloc>:
 8006ad8:	4b02      	ldr	r3, [pc, #8]	; (8006ae4 <malloc+0xc>)
 8006ada:	4601      	mov	r1, r0
 8006adc:	6818      	ldr	r0, [r3, #0]
 8006ade:	f000 b82b 	b.w	8006b38 <_malloc_r>
 8006ae2:	bf00      	nop
 8006ae4:	2000005c 	.word	0x2000005c

08006ae8 <free>:
 8006ae8:	4b02      	ldr	r3, [pc, #8]	; (8006af4 <free+0xc>)
 8006aea:	4601      	mov	r1, r0
 8006aec:	6818      	ldr	r0, [r3, #0]
 8006aee:	f000 b9d5 	b.w	8006e9c <_free_r>
 8006af2:	bf00      	nop
 8006af4:	2000005c 	.word	0x2000005c

08006af8 <sbrk_aligned>:
 8006af8:	b570      	push	{r4, r5, r6, lr}
 8006afa:	4e0e      	ldr	r6, [pc, #56]	; (8006b34 <sbrk_aligned+0x3c>)
 8006afc:	460c      	mov	r4, r1
 8006afe:	6831      	ldr	r1, [r6, #0]
 8006b00:	4605      	mov	r5, r0
 8006b02:	b911      	cbnz	r1, 8006b0a <sbrk_aligned+0x12>
 8006b04:	f000 f980 	bl	8006e08 <_sbrk_r>
 8006b08:	6030      	str	r0, [r6, #0]
 8006b0a:	4621      	mov	r1, r4
 8006b0c:	4628      	mov	r0, r5
 8006b0e:	f000 f97b 	bl	8006e08 <_sbrk_r>
 8006b12:	1c43      	adds	r3, r0, #1
 8006b14:	d00a      	beq.n	8006b2c <sbrk_aligned+0x34>
 8006b16:	1cc4      	adds	r4, r0, #3
 8006b18:	f024 0403 	bic.w	r4, r4, #3
 8006b1c:	42a0      	cmp	r0, r4
 8006b1e:	d007      	beq.n	8006b30 <sbrk_aligned+0x38>
 8006b20:	1a21      	subs	r1, r4, r0
 8006b22:	4628      	mov	r0, r5
 8006b24:	f000 f970 	bl	8006e08 <_sbrk_r>
 8006b28:	3001      	adds	r0, #1
 8006b2a:	d101      	bne.n	8006b30 <sbrk_aligned+0x38>
 8006b2c:	f04f 34ff 	mov.w	r4, #4294967295
 8006b30:	4620      	mov	r0, r4
 8006b32:	bd70      	pop	{r4, r5, r6, pc}
 8006b34:	20004d94 	.word	0x20004d94

08006b38 <_malloc_r>:
 8006b38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006b3c:	1ccd      	adds	r5, r1, #3
 8006b3e:	f025 0503 	bic.w	r5, r5, #3
 8006b42:	3508      	adds	r5, #8
 8006b44:	2d0c      	cmp	r5, #12
 8006b46:	bf38      	it	cc
 8006b48:	250c      	movcc	r5, #12
 8006b4a:	2d00      	cmp	r5, #0
 8006b4c:	4607      	mov	r7, r0
 8006b4e:	db01      	blt.n	8006b54 <_malloc_r+0x1c>
 8006b50:	42a9      	cmp	r1, r5
 8006b52:	d905      	bls.n	8006b60 <_malloc_r+0x28>
 8006b54:	230c      	movs	r3, #12
 8006b56:	603b      	str	r3, [r7, #0]
 8006b58:	2600      	movs	r6, #0
 8006b5a:	4630      	mov	r0, r6
 8006b5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006b60:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8006c34 <_malloc_r+0xfc>
 8006b64:	f000 f868 	bl	8006c38 <__malloc_lock>
 8006b68:	f8d8 3000 	ldr.w	r3, [r8]
 8006b6c:	461c      	mov	r4, r3
 8006b6e:	bb5c      	cbnz	r4, 8006bc8 <_malloc_r+0x90>
 8006b70:	4629      	mov	r1, r5
 8006b72:	4638      	mov	r0, r7
 8006b74:	f7ff ffc0 	bl	8006af8 <sbrk_aligned>
 8006b78:	1c43      	adds	r3, r0, #1
 8006b7a:	4604      	mov	r4, r0
 8006b7c:	d155      	bne.n	8006c2a <_malloc_r+0xf2>
 8006b7e:	f8d8 4000 	ldr.w	r4, [r8]
 8006b82:	4626      	mov	r6, r4
 8006b84:	2e00      	cmp	r6, #0
 8006b86:	d145      	bne.n	8006c14 <_malloc_r+0xdc>
 8006b88:	2c00      	cmp	r4, #0
 8006b8a:	d048      	beq.n	8006c1e <_malloc_r+0xe6>
 8006b8c:	6823      	ldr	r3, [r4, #0]
 8006b8e:	4631      	mov	r1, r6
 8006b90:	4638      	mov	r0, r7
 8006b92:	eb04 0903 	add.w	r9, r4, r3
 8006b96:	f000 f937 	bl	8006e08 <_sbrk_r>
 8006b9a:	4581      	cmp	r9, r0
 8006b9c:	d13f      	bne.n	8006c1e <_malloc_r+0xe6>
 8006b9e:	6821      	ldr	r1, [r4, #0]
 8006ba0:	1a6d      	subs	r5, r5, r1
 8006ba2:	4629      	mov	r1, r5
 8006ba4:	4638      	mov	r0, r7
 8006ba6:	f7ff ffa7 	bl	8006af8 <sbrk_aligned>
 8006baa:	3001      	adds	r0, #1
 8006bac:	d037      	beq.n	8006c1e <_malloc_r+0xe6>
 8006bae:	6823      	ldr	r3, [r4, #0]
 8006bb0:	442b      	add	r3, r5
 8006bb2:	6023      	str	r3, [r4, #0]
 8006bb4:	f8d8 3000 	ldr.w	r3, [r8]
 8006bb8:	2b00      	cmp	r3, #0
 8006bba:	d038      	beq.n	8006c2e <_malloc_r+0xf6>
 8006bbc:	685a      	ldr	r2, [r3, #4]
 8006bbe:	42a2      	cmp	r2, r4
 8006bc0:	d12b      	bne.n	8006c1a <_malloc_r+0xe2>
 8006bc2:	2200      	movs	r2, #0
 8006bc4:	605a      	str	r2, [r3, #4]
 8006bc6:	e00f      	b.n	8006be8 <_malloc_r+0xb0>
 8006bc8:	6822      	ldr	r2, [r4, #0]
 8006bca:	1b52      	subs	r2, r2, r5
 8006bcc:	d41f      	bmi.n	8006c0e <_malloc_r+0xd6>
 8006bce:	2a0b      	cmp	r2, #11
 8006bd0:	d917      	bls.n	8006c02 <_malloc_r+0xca>
 8006bd2:	1961      	adds	r1, r4, r5
 8006bd4:	42a3      	cmp	r3, r4
 8006bd6:	6025      	str	r5, [r4, #0]
 8006bd8:	bf18      	it	ne
 8006bda:	6059      	strne	r1, [r3, #4]
 8006bdc:	6863      	ldr	r3, [r4, #4]
 8006bde:	bf08      	it	eq
 8006be0:	f8c8 1000 	streq.w	r1, [r8]
 8006be4:	5162      	str	r2, [r4, r5]
 8006be6:	604b      	str	r3, [r1, #4]
 8006be8:	4638      	mov	r0, r7
 8006bea:	f104 060b 	add.w	r6, r4, #11
 8006bee:	f000 f829 	bl	8006c44 <__malloc_unlock>
 8006bf2:	f026 0607 	bic.w	r6, r6, #7
 8006bf6:	1d23      	adds	r3, r4, #4
 8006bf8:	1af2      	subs	r2, r6, r3
 8006bfa:	d0ae      	beq.n	8006b5a <_malloc_r+0x22>
 8006bfc:	1b9b      	subs	r3, r3, r6
 8006bfe:	50a3      	str	r3, [r4, r2]
 8006c00:	e7ab      	b.n	8006b5a <_malloc_r+0x22>
 8006c02:	42a3      	cmp	r3, r4
 8006c04:	6862      	ldr	r2, [r4, #4]
 8006c06:	d1dd      	bne.n	8006bc4 <_malloc_r+0x8c>
 8006c08:	f8c8 2000 	str.w	r2, [r8]
 8006c0c:	e7ec      	b.n	8006be8 <_malloc_r+0xb0>
 8006c0e:	4623      	mov	r3, r4
 8006c10:	6864      	ldr	r4, [r4, #4]
 8006c12:	e7ac      	b.n	8006b6e <_malloc_r+0x36>
 8006c14:	4634      	mov	r4, r6
 8006c16:	6876      	ldr	r6, [r6, #4]
 8006c18:	e7b4      	b.n	8006b84 <_malloc_r+0x4c>
 8006c1a:	4613      	mov	r3, r2
 8006c1c:	e7cc      	b.n	8006bb8 <_malloc_r+0x80>
 8006c1e:	230c      	movs	r3, #12
 8006c20:	603b      	str	r3, [r7, #0]
 8006c22:	4638      	mov	r0, r7
 8006c24:	f000 f80e 	bl	8006c44 <__malloc_unlock>
 8006c28:	e797      	b.n	8006b5a <_malloc_r+0x22>
 8006c2a:	6025      	str	r5, [r4, #0]
 8006c2c:	e7dc      	b.n	8006be8 <_malloc_r+0xb0>
 8006c2e:	605b      	str	r3, [r3, #4]
 8006c30:	deff      	udf	#255	; 0xff
 8006c32:	bf00      	nop
 8006c34:	20004d90 	.word	0x20004d90

08006c38 <__malloc_lock>:
 8006c38:	4801      	ldr	r0, [pc, #4]	; (8006c40 <__malloc_lock+0x8>)
 8006c3a:	f000 b91f 	b.w	8006e7c <__retarget_lock_acquire_recursive>
 8006c3e:	bf00      	nop
 8006c40:	20004ed4 	.word	0x20004ed4

08006c44 <__malloc_unlock>:
 8006c44:	4801      	ldr	r0, [pc, #4]	; (8006c4c <__malloc_unlock+0x8>)
 8006c46:	f000 b91a 	b.w	8006e7e <__retarget_lock_release_recursive>
 8006c4a:	bf00      	nop
 8006c4c:	20004ed4 	.word	0x20004ed4

08006c50 <siprintf>:
 8006c50:	b40e      	push	{r1, r2, r3}
 8006c52:	b500      	push	{lr}
 8006c54:	b09c      	sub	sp, #112	; 0x70
 8006c56:	ab1d      	add	r3, sp, #116	; 0x74
 8006c58:	9002      	str	r0, [sp, #8]
 8006c5a:	9006      	str	r0, [sp, #24]
 8006c5c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006c60:	4809      	ldr	r0, [pc, #36]	; (8006c88 <siprintf+0x38>)
 8006c62:	9107      	str	r1, [sp, #28]
 8006c64:	9104      	str	r1, [sp, #16]
 8006c66:	4909      	ldr	r1, [pc, #36]	; (8006c8c <siprintf+0x3c>)
 8006c68:	f853 2b04 	ldr.w	r2, [r3], #4
 8006c6c:	9105      	str	r1, [sp, #20]
 8006c6e:	6800      	ldr	r0, [r0, #0]
 8006c70:	9301      	str	r3, [sp, #4]
 8006c72:	a902      	add	r1, sp, #8
 8006c74:	f000 f9b8 	bl	8006fe8 <_svfiprintf_r>
 8006c78:	9b02      	ldr	r3, [sp, #8]
 8006c7a:	2200      	movs	r2, #0
 8006c7c:	701a      	strb	r2, [r3, #0]
 8006c7e:	b01c      	add	sp, #112	; 0x70
 8006c80:	f85d eb04 	ldr.w	lr, [sp], #4
 8006c84:	b003      	add	sp, #12
 8006c86:	4770      	bx	lr
 8006c88:	2000005c 	.word	0x2000005c
 8006c8c:	ffff0208 	.word	0xffff0208

08006c90 <memmove>:
 8006c90:	4288      	cmp	r0, r1
 8006c92:	b510      	push	{r4, lr}
 8006c94:	eb01 0402 	add.w	r4, r1, r2
 8006c98:	d902      	bls.n	8006ca0 <memmove+0x10>
 8006c9a:	4284      	cmp	r4, r0
 8006c9c:	4623      	mov	r3, r4
 8006c9e:	d807      	bhi.n	8006cb0 <memmove+0x20>
 8006ca0:	1e43      	subs	r3, r0, #1
 8006ca2:	42a1      	cmp	r1, r4
 8006ca4:	d008      	beq.n	8006cb8 <memmove+0x28>
 8006ca6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006caa:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006cae:	e7f8      	b.n	8006ca2 <memmove+0x12>
 8006cb0:	4402      	add	r2, r0
 8006cb2:	4601      	mov	r1, r0
 8006cb4:	428a      	cmp	r2, r1
 8006cb6:	d100      	bne.n	8006cba <memmove+0x2a>
 8006cb8:	bd10      	pop	{r4, pc}
 8006cba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006cbe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8006cc2:	e7f7      	b.n	8006cb4 <memmove+0x24>

08006cc4 <memset>:
 8006cc4:	4402      	add	r2, r0
 8006cc6:	4603      	mov	r3, r0
 8006cc8:	4293      	cmp	r3, r2
 8006cca:	d100      	bne.n	8006cce <memset+0xa>
 8006ccc:	4770      	bx	lr
 8006cce:	f803 1b01 	strb.w	r1, [r3], #1
 8006cd2:	e7f9      	b.n	8006cc8 <memset+0x4>

08006cd4 <_raise_r>:
 8006cd4:	291f      	cmp	r1, #31
 8006cd6:	b538      	push	{r3, r4, r5, lr}
 8006cd8:	4604      	mov	r4, r0
 8006cda:	460d      	mov	r5, r1
 8006cdc:	d904      	bls.n	8006ce8 <_raise_r+0x14>
 8006cde:	2316      	movs	r3, #22
 8006ce0:	6003      	str	r3, [r0, #0]
 8006ce2:	f04f 30ff 	mov.w	r0, #4294967295
 8006ce6:	bd38      	pop	{r3, r4, r5, pc}
 8006ce8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006cea:	b112      	cbz	r2, 8006cf2 <_raise_r+0x1e>
 8006cec:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006cf0:	b94b      	cbnz	r3, 8006d06 <_raise_r+0x32>
 8006cf2:	4620      	mov	r0, r4
 8006cf4:	f000 f886 	bl	8006e04 <_getpid_r>
 8006cf8:	462a      	mov	r2, r5
 8006cfa:	4601      	mov	r1, r0
 8006cfc:	4620      	mov	r0, r4
 8006cfe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006d02:	f000 b86d 	b.w	8006de0 <_kill_r>
 8006d06:	2b01      	cmp	r3, #1
 8006d08:	d00a      	beq.n	8006d20 <_raise_r+0x4c>
 8006d0a:	1c59      	adds	r1, r3, #1
 8006d0c:	d103      	bne.n	8006d16 <_raise_r+0x42>
 8006d0e:	2316      	movs	r3, #22
 8006d10:	6003      	str	r3, [r0, #0]
 8006d12:	2001      	movs	r0, #1
 8006d14:	e7e7      	b.n	8006ce6 <_raise_r+0x12>
 8006d16:	2400      	movs	r4, #0
 8006d18:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006d1c:	4628      	mov	r0, r5
 8006d1e:	4798      	blx	r3
 8006d20:	2000      	movs	r0, #0
 8006d22:	e7e0      	b.n	8006ce6 <_raise_r+0x12>

08006d24 <raise>:
 8006d24:	4b02      	ldr	r3, [pc, #8]	; (8006d30 <raise+0xc>)
 8006d26:	4601      	mov	r1, r0
 8006d28:	6818      	ldr	r0, [r3, #0]
 8006d2a:	f7ff bfd3 	b.w	8006cd4 <_raise_r>
 8006d2e:	bf00      	nop
 8006d30:	2000005c 	.word	0x2000005c

08006d34 <_reclaim_reent>:
 8006d34:	4b29      	ldr	r3, [pc, #164]	; (8006ddc <_reclaim_reent+0xa8>)
 8006d36:	681b      	ldr	r3, [r3, #0]
 8006d38:	4283      	cmp	r3, r0
 8006d3a:	b570      	push	{r4, r5, r6, lr}
 8006d3c:	4604      	mov	r4, r0
 8006d3e:	d04b      	beq.n	8006dd8 <_reclaim_reent+0xa4>
 8006d40:	69c3      	ldr	r3, [r0, #28]
 8006d42:	b143      	cbz	r3, 8006d56 <_reclaim_reent+0x22>
 8006d44:	68db      	ldr	r3, [r3, #12]
 8006d46:	2b00      	cmp	r3, #0
 8006d48:	d144      	bne.n	8006dd4 <_reclaim_reent+0xa0>
 8006d4a:	69e3      	ldr	r3, [r4, #28]
 8006d4c:	6819      	ldr	r1, [r3, #0]
 8006d4e:	b111      	cbz	r1, 8006d56 <_reclaim_reent+0x22>
 8006d50:	4620      	mov	r0, r4
 8006d52:	f000 f8a3 	bl	8006e9c <_free_r>
 8006d56:	6961      	ldr	r1, [r4, #20]
 8006d58:	b111      	cbz	r1, 8006d60 <_reclaim_reent+0x2c>
 8006d5a:	4620      	mov	r0, r4
 8006d5c:	f000 f89e 	bl	8006e9c <_free_r>
 8006d60:	69e1      	ldr	r1, [r4, #28]
 8006d62:	b111      	cbz	r1, 8006d6a <_reclaim_reent+0x36>
 8006d64:	4620      	mov	r0, r4
 8006d66:	f000 f899 	bl	8006e9c <_free_r>
 8006d6a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006d6c:	b111      	cbz	r1, 8006d74 <_reclaim_reent+0x40>
 8006d6e:	4620      	mov	r0, r4
 8006d70:	f000 f894 	bl	8006e9c <_free_r>
 8006d74:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006d76:	b111      	cbz	r1, 8006d7e <_reclaim_reent+0x4a>
 8006d78:	4620      	mov	r0, r4
 8006d7a:	f000 f88f 	bl	8006e9c <_free_r>
 8006d7e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8006d80:	b111      	cbz	r1, 8006d88 <_reclaim_reent+0x54>
 8006d82:	4620      	mov	r0, r4
 8006d84:	f000 f88a 	bl	8006e9c <_free_r>
 8006d88:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8006d8a:	b111      	cbz	r1, 8006d92 <_reclaim_reent+0x5e>
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	f000 f885 	bl	8006e9c <_free_r>
 8006d92:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8006d94:	b111      	cbz	r1, 8006d9c <_reclaim_reent+0x68>
 8006d96:	4620      	mov	r0, r4
 8006d98:	f000 f880 	bl	8006e9c <_free_r>
 8006d9c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006d9e:	b111      	cbz	r1, 8006da6 <_reclaim_reent+0x72>
 8006da0:	4620      	mov	r0, r4
 8006da2:	f000 f87b 	bl	8006e9c <_free_r>
 8006da6:	6a23      	ldr	r3, [r4, #32]
 8006da8:	b1b3      	cbz	r3, 8006dd8 <_reclaim_reent+0xa4>
 8006daa:	4620      	mov	r0, r4
 8006dac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006db0:	4718      	bx	r3
 8006db2:	5949      	ldr	r1, [r1, r5]
 8006db4:	b941      	cbnz	r1, 8006dc8 <_reclaim_reent+0x94>
 8006db6:	3504      	adds	r5, #4
 8006db8:	69e3      	ldr	r3, [r4, #28]
 8006dba:	2d80      	cmp	r5, #128	; 0x80
 8006dbc:	68d9      	ldr	r1, [r3, #12]
 8006dbe:	d1f8      	bne.n	8006db2 <_reclaim_reent+0x7e>
 8006dc0:	4620      	mov	r0, r4
 8006dc2:	f000 f86b 	bl	8006e9c <_free_r>
 8006dc6:	e7c0      	b.n	8006d4a <_reclaim_reent+0x16>
 8006dc8:	680e      	ldr	r6, [r1, #0]
 8006dca:	4620      	mov	r0, r4
 8006dcc:	f000 f866 	bl	8006e9c <_free_r>
 8006dd0:	4631      	mov	r1, r6
 8006dd2:	e7ef      	b.n	8006db4 <_reclaim_reent+0x80>
 8006dd4:	2500      	movs	r5, #0
 8006dd6:	e7ef      	b.n	8006db8 <_reclaim_reent+0x84>
 8006dd8:	bd70      	pop	{r4, r5, r6, pc}
 8006dda:	bf00      	nop
 8006ddc:	2000005c 	.word	0x2000005c

08006de0 <_kill_r>:
 8006de0:	b538      	push	{r3, r4, r5, lr}
 8006de2:	4d07      	ldr	r5, [pc, #28]	; (8006e00 <_kill_r+0x20>)
 8006de4:	2300      	movs	r3, #0
 8006de6:	4604      	mov	r4, r0
 8006de8:	4608      	mov	r0, r1
 8006dea:	4611      	mov	r1, r2
 8006dec:	602b      	str	r3, [r5, #0]
 8006dee:	f7fa fc8f 	bl	8001710 <_kill>
 8006df2:	1c43      	adds	r3, r0, #1
 8006df4:	d102      	bne.n	8006dfc <_kill_r+0x1c>
 8006df6:	682b      	ldr	r3, [r5, #0]
 8006df8:	b103      	cbz	r3, 8006dfc <_kill_r+0x1c>
 8006dfa:	6023      	str	r3, [r4, #0]
 8006dfc:	bd38      	pop	{r3, r4, r5, pc}
 8006dfe:	bf00      	nop
 8006e00:	20004ed0 	.word	0x20004ed0

08006e04 <_getpid_r>:
 8006e04:	f7fa bc7c 	b.w	8001700 <_getpid>

08006e08 <_sbrk_r>:
 8006e08:	b538      	push	{r3, r4, r5, lr}
 8006e0a:	4d06      	ldr	r5, [pc, #24]	; (8006e24 <_sbrk_r+0x1c>)
 8006e0c:	2300      	movs	r3, #0
 8006e0e:	4604      	mov	r4, r0
 8006e10:	4608      	mov	r0, r1
 8006e12:	602b      	str	r3, [r5, #0]
 8006e14:	f7fa fc96 	bl	8001744 <_sbrk>
 8006e18:	1c43      	adds	r3, r0, #1
 8006e1a:	d102      	bne.n	8006e22 <_sbrk_r+0x1a>
 8006e1c:	682b      	ldr	r3, [r5, #0]
 8006e1e:	b103      	cbz	r3, 8006e22 <_sbrk_r+0x1a>
 8006e20:	6023      	str	r3, [r4, #0]
 8006e22:	bd38      	pop	{r3, r4, r5, pc}
 8006e24:	20004ed0 	.word	0x20004ed0

08006e28 <__errno>:
 8006e28:	4b01      	ldr	r3, [pc, #4]	; (8006e30 <__errno+0x8>)
 8006e2a:	6818      	ldr	r0, [r3, #0]
 8006e2c:	4770      	bx	lr
 8006e2e:	bf00      	nop
 8006e30:	2000005c 	.word	0x2000005c

08006e34 <__libc_init_array>:
 8006e34:	b570      	push	{r4, r5, r6, lr}
 8006e36:	4d0d      	ldr	r5, [pc, #52]	; (8006e6c <__libc_init_array+0x38>)
 8006e38:	4c0d      	ldr	r4, [pc, #52]	; (8006e70 <__libc_init_array+0x3c>)
 8006e3a:	1b64      	subs	r4, r4, r5
 8006e3c:	10a4      	asrs	r4, r4, #2
 8006e3e:	2600      	movs	r6, #0
 8006e40:	42a6      	cmp	r6, r4
 8006e42:	d109      	bne.n	8006e58 <__libc_init_array+0x24>
 8006e44:	4d0b      	ldr	r5, [pc, #44]	; (8006e74 <__libc_init_array+0x40>)
 8006e46:	4c0c      	ldr	r4, [pc, #48]	; (8006e78 <__libc_init_array+0x44>)
 8006e48:	f000 fb94 	bl	8007574 <_init>
 8006e4c:	1b64      	subs	r4, r4, r5
 8006e4e:	10a4      	asrs	r4, r4, #2
 8006e50:	2600      	movs	r6, #0
 8006e52:	42a6      	cmp	r6, r4
 8006e54:	d105      	bne.n	8006e62 <__libc_init_array+0x2e>
 8006e56:	bd70      	pop	{r4, r5, r6, pc}
 8006e58:	f855 3b04 	ldr.w	r3, [r5], #4
 8006e5c:	4798      	blx	r3
 8006e5e:	3601      	adds	r6, #1
 8006e60:	e7ee      	b.n	8006e40 <__libc_init_array+0xc>
 8006e62:	f855 3b04 	ldr.w	r3, [r5], #4
 8006e66:	4798      	blx	r3
 8006e68:	3601      	adds	r6, #1
 8006e6a:	e7f2      	b.n	8006e52 <__libc_init_array+0x1e>
 8006e6c:	08007958 	.word	0x08007958
 8006e70:	08007958 	.word	0x08007958
 8006e74:	08007958 	.word	0x08007958
 8006e78:	08007964 	.word	0x08007964

08006e7c <__retarget_lock_acquire_recursive>:
 8006e7c:	4770      	bx	lr

08006e7e <__retarget_lock_release_recursive>:
 8006e7e:	4770      	bx	lr

08006e80 <memcpy>:
 8006e80:	440a      	add	r2, r1
 8006e82:	4291      	cmp	r1, r2
 8006e84:	f100 33ff 	add.w	r3, r0, #4294967295
 8006e88:	d100      	bne.n	8006e8c <memcpy+0xc>
 8006e8a:	4770      	bx	lr
 8006e8c:	b510      	push	{r4, lr}
 8006e8e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006e92:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006e96:	4291      	cmp	r1, r2
 8006e98:	d1f9      	bne.n	8006e8e <memcpy+0xe>
 8006e9a:	bd10      	pop	{r4, pc}

08006e9c <_free_r>:
 8006e9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006e9e:	2900      	cmp	r1, #0
 8006ea0:	d044      	beq.n	8006f2c <_free_r+0x90>
 8006ea2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006ea6:	9001      	str	r0, [sp, #4]
 8006ea8:	2b00      	cmp	r3, #0
 8006eaa:	f1a1 0404 	sub.w	r4, r1, #4
 8006eae:	bfb8      	it	lt
 8006eb0:	18e4      	addlt	r4, r4, r3
 8006eb2:	f7ff fec1 	bl	8006c38 <__malloc_lock>
 8006eb6:	4a1e      	ldr	r2, [pc, #120]	; (8006f30 <_free_r+0x94>)
 8006eb8:	9801      	ldr	r0, [sp, #4]
 8006eba:	6813      	ldr	r3, [r2, #0]
 8006ebc:	b933      	cbnz	r3, 8006ecc <_free_r+0x30>
 8006ebe:	6063      	str	r3, [r4, #4]
 8006ec0:	6014      	str	r4, [r2, #0]
 8006ec2:	b003      	add	sp, #12
 8006ec4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006ec8:	f7ff bebc 	b.w	8006c44 <__malloc_unlock>
 8006ecc:	42a3      	cmp	r3, r4
 8006ece:	d908      	bls.n	8006ee2 <_free_r+0x46>
 8006ed0:	6825      	ldr	r5, [r4, #0]
 8006ed2:	1961      	adds	r1, r4, r5
 8006ed4:	428b      	cmp	r3, r1
 8006ed6:	bf01      	itttt	eq
 8006ed8:	6819      	ldreq	r1, [r3, #0]
 8006eda:	685b      	ldreq	r3, [r3, #4]
 8006edc:	1949      	addeq	r1, r1, r5
 8006ede:	6021      	streq	r1, [r4, #0]
 8006ee0:	e7ed      	b.n	8006ebe <_free_r+0x22>
 8006ee2:	461a      	mov	r2, r3
 8006ee4:	685b      	ldr	r3, [r3, #4]
 8006ee6:	b10b      	cbz	r3, 8006eec <_free_r+0x50>
 8006ee8:	42a3      	cmp	r3, r4
 8006eea:	d9fa      	bls.n	8006ee2 <_free_r+0x46>
 8006eec:	6811      	ldr	r1, [r2, #0]
 8006eee:	1855      	adds	r5, r2, r1
 8006ef0:	42a5      	cmp	r5, r4
 8006ef2:	d10b      	bne.n	8006f0c <_free_r+0x70>
 8006ef4:	6824      	ldr	r4, [r4, #0]
 8006ef6:	4421      	add	r1, r4
 8006ef8:	1854      	adds	r4, r2, r1
 8006efa:	42a3      	cmp	r3, r4
 8006efc:	6011      	str	r1, [r2, #0]
 8006efe:	d1e0      	bne.n	8006ec2 <_free_r+0x26>
 8006f00:	681c      	ldr	r4, [r3, #0]
 8006f02:	685b      	ldr	r3, [r3, #4]
 8006f04:	6053      	str	r3, [r2, #4]
 8006f06:	440c      	add	r4, r1
 8006f08:	6014      	str	r4, [r2, #0]
 8006f0a:	e7da      	b.n	8006ec2 <_free_r+0x26>
 8006f0c:	d902      	bls.n	8006f14 <_free_r+0x78>
 8006f0e:	230c      	movs	r3, #12
 8006f10:	6003      	str	r3, [r0, #0]
 8006f12:	e7d6      	b.n	8006ec2 <_free_r+0x26>
 8006f14:	6825      	ldr	r5, [r4, #0]
 8006f16:	1961      	adds	r1, r4, r5
 8006f18:	428b      	cmp	r3, r1
 8006f1a:	bf04      	itt	eq
 8006f1c:	6819      	ldreq	r1, [r3, #0]
 8006f1e:	685b      	ldreq	r3, [r3, #4]
 8006f20:	6063      	str	r3, [r4, #4]
 8006f22:	bf04      	itt	eq
 8006f24:	1949      	addeq	r1, r1, r5
 8006f26:	6021      	streq	r1, [r4, #0]
 8006f28:	6054      	str	r4, [r2, #4]
 8006f2a:	e7ca      	b.n	8006ec2 <_free_r+0x26>
 8006f2c:	b003      	add	sp, #12
 8006f2e:	bd30      	pop	{r4, r5, pc}
 8006f30:	20004d90 	.word	0x20004d90

08006f34 <__ssputs_r>:
 8006f34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006f38:	688e      	ldr	r6, [r1, #8]
 8006f3a:	461f      	mov	r7, r3
 8006f3c:	42be      	cmp	r6, r7
 8006f3e:	680b      	ldr	r3, [r1, #0]
 8006f40:	4682      	mov	sl, r0
 8006f42:	460c      	mov	r4, r1
 8006f44:	4690      	mov	r8, r2
 8006f46:	d82c      	bhi.n	8006fa2 <__ssputs_r+0x6e>
 8006f48:	898a      	ldrh	r2, [r1, #12]
 8006f4a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006f4e:	d026      	beq.n	8006f9e <__ssputs_r+0x6a>
 8006f50:	6965      	ldr	r5, [r4, #20]
 8006f52:	6909      	ldr	r1, [r1, #16]
 8006f54:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006f58:	eba3 0901 	sub.w	r9, r3, r1
 8006f5c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006f60:	1c7b      	adds	r3, r7, #1
 8006f62:	444b      	add	r3, r9
 8006f64:	106d      	asrs	r5, r5, #1
 8006f66:	429d      	cmp	r5, r3
 8006f68:	bf38      	it	cc
 8006f6a:	461d      	movcc	r5, r3
 8006f6c:	0553      	lsls	r3, r2, #21
 8006f6e:	d527      	bpl.n	8006fc0 <__ssputs_r+0x8c>
 8006f70:	4629      	mov	r1, r5
 8006f72:	f7ff fde1 	bl	8006b38 <_malloc_r>
 8006f76:	4606      	mov	r6, r0
 8006f78:	b360      	cbz	r0, 8006fd4 <__ssputs_r+0xa0>
 8006f7a:	6921      	ldr	r1, [r4, #16]
 8006f7c:	464a      	mov	r2, r9
 8006f7e:	f7ff ff7f 	bl	8006e80 <memcpy>
 8006f82:	89a3      	ldrh	r3, [r4, #12]
 8006f84:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006f88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006f8c:	81a3      	strh	r3, [r4, #12]
 8006f8e:	6126      	str	r6, [r4, #16]
 8006f90:	6165      	str	r5, [r4, #20]
 8006f92:	444e      	add	r6, r9
 8006f94:	eba5 0509 	sub.w	r5, r5, r9
 8006f98:	6026      	str	r6, [r4, #0]
 8006f9a:	60a5      	str	r5, [r4, #8]
 8006f9c:	463e      	mov	r6, r7
 8006f9e:	42be      	cmp	r6, r7
 8006fa0:	d900      	bls.n	8006fa4 <__ssputs_r+0x70>
 8006fa2:	463e      	mov	r6, r7
 8006fa4:	6820      	ldr	r0, [r4, #0]
 8006fa6:	4632      	mov	r2, r6
 8006fa8:	4641      	mov	r1, r8
 8006faa:	f7ff fe71 	bl	8006c90 <memmove>
 8006fae:	68a3      	ldr	r3, [r4, #8]
 8006fb0:	1b9b      	subs	r3, r3, r6
 8006fb2:	60a3      	str	r3, [r4, #8]
 8006fb4:	6823      	ldr	r3, [r4, #0]
 8006fb6:	4433      	add	r3, r6
 8006fb8:	6023      	str	r3, [r4, #0]
 8006fba:	2000      	movs	r0, #0
 8006fbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006fc0:	462a      	mov	r2, r5
 8006fc2:	f000 fa9f 	bl	8007504 <_realloc_r>
 8006fc6:	4606      	mov	r6, r0
 8006fc8:	2800      	cmp	r0, #0
 8006fca:	d1e0      	bne.n	8006f8e <__ssputs_r+0x5a>
 8006fcc:	6921      	ldr	r1, [r4, #16]
 8006fce:	4650      	mov	r0, sl
 8006fd0:	f7ff ff64 	bl	8006e9c <_free_r>
 8006fd4:	230c      	movs	r3, #12
 8006fd6:	f8ca 3000 	str.w	r3, [sl]
 8006fda:	89a3      	ldrh	r3, [r4, #12]
 8006fdc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006fe0:	81a3      	strh	r3, [r4, #12]
 8006fe2:	f04f 30ff 	mov.w	r0, #4294967295
 8006fe6:	e7e9      	b.n	8006fbc <__ssputs_r+0x88>

08006fe8 <_svfiprintf_r>:
 8006fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fec:	4698      	mov	r8, r3
 8006fee:	898b      	ldrh	r3, [r1, #12]
 8006ff0:	061b      	lsls	r3, r3, #24
 8006ff2:	b09d      	sub	sp, #116	; 0x74
 8006ff4:	4607      	mov	r7, r0
 8006ff6:	460d      	mov	r5, r1
 8006ff8:	4614      	mov	r4, r2
 8006ffa:	d50e      	bpl.n	800701a <_svfiprintf_r+0x32>
 8006ffc:	690b      	ldr	r3, [r1, #16]
 8006ffe:	b963      	cbnz	r3, 800701a <_svfiprintf_r+0x32>
 8007000:	2140      	movs	r1, #64	; 0x40
 8007002:	f7ff fd99 	bl	8006b38 <_malloc_r>
 8007006:	6028      	str	r0, [r5, #0]
 8007008:	6128      	str	r0, [r5, #16]
 800700a:	b920      	cbnz	r0, 8007016 <_svfiprintf_r+0x2e>
 800700c:	230c      	movs	r3, #12
 800700e:	603b      	str	r3, [r7, #0]
 8007010:	f04f 30ff 	mov.w	r0, #4294967295
 8007014:	e0d0      	b.n	80071b8 <_svfiprintf_r+0x1d0>
 8007016:	2340      	movs	r3, #64	; 0x40
 8007018:	616b      	str	r3, [r5, #20]
 800701a:	2300      	movs	r3, #0
 800701c:	9309      	str	r3, [sp, #36]	; 0x24
 800701e:	2320      	movs	r3, #32
 8007020:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007024:	f8cd 800c 	str.w	r8, [sp, #12]
 8007028:	2330      	movs	r3, #48	; 0x30
 800702a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80071d0 <_svfiprintf_r+0x1e8>
 800702e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007032:	f04f 0901 	mov.w	r9, #1
 8007036:	4623      	mov	r3, r4
 8007038:	469a      	mov	sl, r3
 800703a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800703e:	b10a      	cbz	r2, 8007044 <_svfiprintf_r+0x5c>
 8007040:	2a25      	cmp	r2, #37	; 0x25
 8007042:	d1f9      	bne.n	8007038 <_svfiprintf_r+0x50>
 8007044:	ebba 0b04 	subs.w	fp, sl, r4
 8007048:	d00b      	beq.n	8007062 <_svfiprintf_r+0x7a>
 800704a:	465b      	mov	r3, fp
 800704c:	4622      	mov	r2, r4
 800704e:	4629      	mov	r1, r5
 8007050:	4638      	mov	r0, r7
 8007052:	f7ff ff6f 	bl	8006f34 <__ssputs_r>
 8007056:	3001      	adds	r0, #1
 8007058:	f000 80a9 	beq.w	80071ae <_svfiprintf_r+0x1c6>
 800705c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800705e:	445a      	add	r2, fp
 8007060:	9209      	str	r2, [sp, #36]	; 0x24
 8007062:	f89a 3000 	ldrb.w	r3, [sl]
 8007066:	2b00      	cmp	r3, #0
 8007068:	f000 80a1 	beq.w	80071ae <_svfiprintf_r+0x1c6>
 800706c:	2300      	movs	r3, #0
 800706e:	f04f 32ff 	mov.w	r2, #4294967295
 8007072:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007076:	f10a 0a01 	add.w	sl, sl, #1
 800707a:	9304      	str	r3, [sp, #16]
 800707c:	9307      	str	r3, [sp, #28]
 800707e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007082:	931a      	str	r3, [sp, #104]	; 0x68
 8007084:	4654      	mov	r4, sl
 8007086:	2205      	movs	r2, #5
 8007088:	f814 1b01 	ldrb.w	r1, [r4], #1
 800708c:	4850      	ldr	r0, [pc, #320]	; (80071d0 <_svfiprintf_r+0x1e8>)
 800708e:	f7f9 f89f 	bl	80001d0 <memchr>
 8007092:	9a04      	ldr	r2, [sp, #16]
 8007094:	b9d8      	cbnz	r0, 80070ce <_svfiprintf_r+0xe6>
 8007096:	06d0      	lsls	r0, r2, #27
 8007098:	bf44      	itt	mi
 800709a:	2320      	movmi	r3, #32
 800709c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80070a0:	0711      	lsls	r1, r2, #28
 80070a2:	bf44      	itt	mi
 80070a4:	232b      	movmi	r3, #43	; 0x2b
 80070a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80070aa:	f89a 3000 	ldrb.w	r3, [sl]
 80070ae:	2b2a      	cmp	r3, #42	; 0x2a
 80070b0:	d015      	beq.n	80070de <_svfiprintf_r+0xf6>
 80070b2:	9a07      	ldr	r2, [sp, #28]
 80070b4:	4654      	mov	r4, sl
 80070b6:	2000      	movs	r0, #0
 80070b8:	f04f 0c0a 	mov.w	ip, #10
 80070bc:	4621      	mov	r1, r4
 80070be:	f811 3b01 	ldrb.w	r3, [r1], #1
 80070c2:	3b30      	subs	r3, #48	; 0x30
 80070c4:	2b09      	cmp	r3, #9
 80070c6:	d94d      	bls.n	8007164 <_svfiprintf_r+0x17c>
 80070c8:	b1b0      	cbz	r0, 80070f8 <_svfiprintf_r+0x110>
 80070ca:	9207      	str	r2, [sp, #28]
 80070cc:	e014      	b.n	80070f8 <_svfiprintf_r+0x110>
 80070ce:	eba0 0308 	sub.w	r3, r0, r8
 80070d2:	fa09 f303 	lsl.w	r3, r9, r3
 80070d6:	4313      	orrs	r3, r2
 80070d8:	9304      	str	r3, [sp, #16]
 80070da:	46a2      	mov	sl, r4
 80070dc:	e7d2      	b.n	8007084 <_svfiprintf_r+0x9c>
 80070de:	9b03      	ldr	r3, [sp, #12]
 80070e0:	1d19      	adds	r1, r3, #4
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	9103      	str	r1, [sp, #12]
 80070e6:	2b00      	cmp	r3, #0
 80070e8:	bfbb      	ittet	lt
 80070ea:	425b      	neglt	r3, r3
 80070ec:	f042 0202 	orrlt.w	r2, r2, #2
 80070f0:	9307      	strge	r3, [sp, #28]
 80070f2:	9307      	strlt	r3, [sp, #28]
 80070f4:	bfb8      	it	lt
 80070f6:	9204      	strlt	r2, [sp, #16]
 80070f8:	7823      	ldrb	r3, [r4, #0]
 80070fa:	2b2e      	cmp	r3, #46	; 0x2e
 80070fc:	d10c      	bne.n	8007118 <_svfiprintf_r+0x130>
 80070fe:	7863      	ldrb	r3, [r4, #1]
 8007100:	2b2a      	cmp	r3, #42	; 0x2a
 8007102:	d134      	bne.n	800716e <_svfiprintf_r+0x186>
 8007104:	9b03      	ldr	r3, [sp, #12]
 8007106:	1d1a      	adds	r2, r3, #4
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	9203      	str	r2, [sp, #12]
 800710c:	2b00      	cmp	r3, #0
 800710e:	bfb8      	it	lt
 8007110:	f04f 33ff 	movlt.w	r3, #4294967295
 8007114:	3402      	adds	r4, #2
 8007116:	9305      	str	r3, [sp, #20]
 8007118:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 80071e0 <_svfiprintf_r+0x1f8>
 800711c:	7821      	ldrb	r1, [r4, #0]
 800711e:	2203      	movs	r2, #3
 8007120:	4650      	mov	r0, sl
 8007122:	f7f9 f855 	bl	80001d0 <memchr>
 8007126:	b138      	cbz	r0, 8007138 <_svfiprintf_r+0x150>
 8007128:	9b04      	ldr	r3, [sp, #16]
 800712a:	eba0 000a 	sub.w	r0, r0, sl
 800712e:	2240      	movs	r2, #64	; 0x40
 8007130:	4082      	lsls	r2, r0
 8007132:	4313      	orrs	r3, r2
 8007134:	3401      	adds	r4, #1
 8007136:	9304      	str	r3, [sp, #16]
 8007138:	f814 1b01 	ldrb.w	r1, [r4], #1
 800713c:	4825      	ldr	r0, [pc, #148]	; (80071d4 <_svfiprintf_r+0x1ec>)
 800713e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007142:	2206      	movs	r2, #6
 8007144:	f7f9 f844 	bl	80001d0 <memchr>
 8007148:	2800      	cmp	r0, #0
 800714a:	d038      	beq.n	80071be <_svfiprintf_r+0x1d6>
 800714c:	4b22      	ldr	r3, [pc, #136]	; (80071d8 <_svfiprintf_r+0x1f0>)
 800714e:	bb1b      	cbnz	r3, 8007198 <_svfiprintf_r+0x1b0>
 8007150:	9b03      	ldr	r3, [sp, #12]
 8007152:	3307      	adds	r3, #7
 8007154:	f023 0307 	bic.w	r3, r3, #7
 8007158:	3308      	adds	r3, #8
 800715a:	9303      	str	r3, [sp, #12]
 800715c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800715e:	4433      	add	r3, r6
 8007160:	9309      	str	r3, [sp, #36]	; 0x24
 8007162:	e768      	b.n	8007036 <_svfiprintf_r+0x4e>
 8007164:	fb0c 3202 	mla	r2, ip, r2, r3
 8007168:	460c      	mov	r4, r1
 800716a:	2001      	movs	r0, #1
 800716c:	e7a6      	b.n	80070bc <_svfiprintf_r+0xd4>
 800716e:	2300      	movs	r3, #0
 8007170:	3401      	adds	r4, #1
 8007172:	9305      	str	r3, [sp, #20]
 8007174:	4619      	mov	r1, r3
 8007176:	f04f 0c0a 	mov.w	ip, #10
 800717a:	4620      	mov	r0, r4
 800717c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007180:	3a30      	subs	r2, #48	; 0x30
 8007182:	2a09      	cmp	r2, #9
 8007184:	d903      	bls.n	800718e <_svfiprintf_r+0x1a6>
 8007186:	2b00      	cmp	r3, #0
 8007188:	d0c6      	beq.n	8007118 <_svfiprintf_r+0x130>
 800718a:	9105      	str	r1, [sp, #20]
 800718c:	e7c4      	b.n	8007118 <_svfiprintf_r+0x130>
 800718e:	fb0c 2101 	mla	r1, ip, r1, r2
 8007192:	4604      	mov	r4, r0
 8007194:	2301      	movs	r3, #1
 8007196:	e7f0      	b.n	800717a <_svfiprintf_r+0x192>
 8007198:	ab03      	add	r3, sp, #12
 800719a:	9300      	str	r3, [sp, #0]
 800719c:	462a      	mov	r2, r5
 800719e:	4b0f      	ldr	r3, [pc, #60]	; (80071dc <_svfiprintf_r+0x1f4>)
 80071a0:	a904      	add	r1, sp, #16
 80071a2:	4638      	mov	r0, r7
 80071a4:	f3af 8000 	nop.w
 80071a8:	1c42      	adds	r2, r0, #1
 80071aa:	4606      	mov	r6, r0
 80071ac:	d1d6      	bne.n	800715c <_svfiprintf_r+0x174>
 80071ae:	89ab      	ldrh	r3, [r5, #12]
 80071b0:	065b      	lsls	r3, r3, #25
 80071b2:	f53f af2d 	bmi.w	8007010 <_svfiprintf_r+0x28>
 80071b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80071b8:	b01d      	add	sp, #116	; 0x74
 80071ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071be:	ab03      	add	r3, sp, #12
 80071c0:	9300      	str	r3, [sp, #0]
 80071c2:	462a      	mov	r2, r5
 80071c4:	4b05      	ldr	r3, [pc, #20]	; (80071dc <_svfiprintf_r+0x1f4>)
 80071c6:	a904      	add	r1, sp, #16
 80071c8:	4638      	mov	r0, r7
 80071ca:	f000 f879 	bl	80072c0 <_printf_i>
 80071ce:	e7eb      	b.n	80071a8 <_svfiprintf_r+0x1c0>
 80071d0:	0800791b 	.word	0x0800791b
 80071d4:	08007925 	.word	0x08007925
 80071d8:	00000000 	.word	0x00000000
 80071dc:	08006f35 	.word	0x08006f35
 80071e0:	08007921 	.word	0x08007921

080071e4 <_printf_common>:
 80071e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80071e8:	4616      	mov	r6, r2
 80071ea:	4699      	mov	r9, r3
 80071ec:	688a      	ldr	r2, [r1, #8]
 80071ee:	690b      	ldr	r3, [r1, #16]
 80071f0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80071f4:	4293      	cmp	r3, r2
 80071f6:	bfb8      	it	lt
 80071f8:	4613      	movlt	r3, r2
 80071fa:	6033      	str	r3, [r6, #0]
 80071fc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007200:	4607      	mov	r7, r0
 8007202:	460c      	mov	r4, r1
 8007204:	b10a      	cbz	r2, 800720a <_printf_common+0x26>
 8007206:	3301      	adds	r3, #1
 8007208:	6033      	str	r3, [r6, #0]
 800720a:	6823      	ldr	r3, [r4, #0]
 800720c:	0699      	lsls	r1, r3, #26
 800720e:	bf42      	ittt	mi
 8007210:	6833      	ldrmi	r3, [r6, #0]
 8007212:	3302      	addmi	r3, #2
 8007214:	6033      	strmi	r3, [r6, #0]
 8007216:	6825      	ldr	r5, [r4, #0]
 8007218:	f015 0506 	ands.w	r5, r5, #6
 800721c:	d106      	bne.n	800722c <_printf_common+0x48>
 800721e:	f104 0a19 	add.w	sl, r4, #25
 8007222:	68e3      	ldr	r3, [r4, #12]
 8007224:	6832      	ldr	r2, [r6, #0]
 8007226:	1a9b      	subs	r3, r3, r2
 8007228:	42ab      	cmp	r3, r5
 800722a:	dc26      	bgt.n	800727a <_printf_common+0x96>
 800722c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007230:	1e13      	subs	r3, r2, #0
 8007232:	6822      	ldr	r2, [r4, #0]
 8007234:	bf18      	it	ne
 8007236:	2301      	movne	r3, #1
 8007238:	0692      	lsls	r2, r2, #26
 800723a:	d42b      	bmi.n	8007294 <_printf_common+0xb0>
 800723c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007240:	4649      	mov	r1, r9
 8007242:	4638      	mov	r0, r7
 8007244:	47c0      	blx	r8
 8007246:	3001      	adds	r0, #1
 8007248:	d01e      	beq.n	8007288 <_printf_common+0xa4>
 800724a:	6823      	ldr	r3, [r4, #0]
 800724c:	6922      	ldr	r2, [r4, #16]
 800724e:	f003 0306 	and.w	r3, r3, #6
 8007252:	2b04      	cmp	r3, #4
 8007254:	bf02      	ittt	eq
 8007256:	68e5      	ldreq	r5, [r4, #12]
 8007258:	6833      	ldreq	r3, [r6, #0]
 800725a:	1aed      	subeq	r5, r5, r3
 800725c:	68a3      	ldr	r3, [r4, #8]
 800725e:	bf0c      	ite	eq
 8007260:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007264:	2500      	movne	r5, #0
 8007266:	4293      	cmp	r3, r2
 8007268:	bfc4      	itt	gt
 800726a:	1a9b      	subgt	r3, r3, r2
 800726c:	18ed      	addgt	r5, r5, r3
 800726e:	2600      	movs	r6, #0
 8007270:	341a      	adds	r4, #26
 8007272:	42b5      	cmp	r5, r6
 8007274:	d11a      	bne.n	80072ac <_printf_common+0xc8>
 8007276:	2000      	movs	r0, #0
 8007278:	e008      	b.n	800728c <_printf_common+0xa8>
 800727a:	2301      	movs	r3, #1
 800727c:	4652      	mov	r2, sl
 800727e:	4649      	mov	r1, r9
 8007280:	4638      	mov	r0, r7
 8007282:	47c0      	blx	r8
 8007284:	3001      	adds	r0, #1
 8007286:	d103      	bne.n	8007290 <_printf_common+0xac>
 8007288:	f04f 30ff 	mov.w	r0, #4294967295
 800728c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007290:	3501      	adds	r5, #1
 8007292:	e7c6      	b.n	8007222 <_printf_common+0x3e>
 8007294:	18e1      	adds	r1, r4, r3
 8007296:	1c5a      	adds	r2, r3, #1
 8007298:	2030      	movs	r0, #48	; 0x30
 800729a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800729e:	4422      	add	r2, r4
 80072a0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80072a4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80072a8:	3302      	adds	r3, #2
 80072aa:	e7c7      	b.n	800723c <_printf_common+0x58>
 80072ac:	2301      	movs	r3, #1
 80072ae:	4622      	mov	r2, r4
 80072b0:	4649      	mov	r1, r9
 80072b2:	4638      	mov	r0, r7
 80072b4:	47c0      	blx	r8
 80072b6:	3001      	adds	r0, #1
 80072b8:	d0e6      	beq.n	8007288 <_printf_common+0xa4>
 80072ba:	3601      	adds	r6, #1
 80072bc:	e7d9      	b.n	8007272 <_printf_common+0x8e>
	...

080072c0 <_printf_i>:
 80072c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80072c4:	7e0f      	ldrb	r7, [r1, #24]
 80072c6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80072c8:	2f78      	cmp	r7, #120	; 0x78
 80072ca:	4691      	mov	r9, r2
 80072cc:	4680      	mov	r8, r0
 80072ce:	460c      	mov	r4, r1
 80072d0:	469a      	mov	sl, r3
 80072d2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80072d6:	d807      	bhi.n	80072e8 <_printf_i+0x28>
 80072d8:	2f62      	cmp	r7, #98	; 0x62
 80072da:	d80a      	bhi.n	80072f2 <_printf_i+0x32>
 80072dc:	2f00      	cmp	r7, #0
 80072de:	f000 80d4 	beq.w	800748a <_printf_i+0x1ca>
 80072e2:	2f58      	cmp	r7, #88	; 0x58
 80072e4:	f000 80c0 	beq.w	8007468 <_printf_i+0x1a8>
 80072e8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80072ec:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80072f0:	e03a      	b.n	8007368 <_printf_i+0xa8>
 80072f2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80072f6:	2b15      	cmp	r3, #21
 80072f8:	d8f6      	bhi.n	80072e8 <_printf_i+0x28>
 80072fa:	a101      	add	r1, pc, #4	; (adr r1, 8007300 <_printf_i+0x40>)
 80072fc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007300:	08007359 	.word	0x08007359
 8007304:	0800736d 	.word	0x0800736d
 8007308:	080072e9 	.word	0x080072e9
 800730c:	080072e9 	.word	0x080072e9
 8007310:	080072e9 	.word	0x080072e9
 8007314:	080072e9 	.word	0x080072e9
 8007318:	0800736d 	.word	0x0800736d
 800731c:	080072e9 	.word	0x080072e9
 8007320:	080072e9 	.word	0x080072e9
 8007324:	080072e9 	.word	0x080072e9
 8007328:	080072e9 	.word	0x080072e9
 800732c:	08007471 	.word	0x08007471
 8007330:	08007399 	.word	0x08007399
 8007334:	0800742b 	.word	0x0800742b
 8007338:	080072e9 	.word	0x080072e9
 800733c:	080072e9 	.word	0x080072e9
 8007340:	08007493 	.word	0x08007493
 8007344:	080072e9 	.word	0x080072e9
 8007348:	08007399 	.word	0x08007399
 800734c:	080072e9 	.word	0x080072e9
 8007350:	080072e9 	.word	0x080072e9
 8007354:	08007433 	.word	0x08007433
 8007358:	682b      	ldr	r3, [r5, #0]
 800735a:	1d1a      	adds	r2, r3, #4
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	602a      	str	r2, [r5, #0]
 8007360:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007364:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007368:	2301      	movs	r3, #1
 800736a:	e09f      	b.n	80074ac <_printf_i+0x1ec>
 800736c:	6820      	ldr	r0, [r4, #0]
 800736e:	682b      	ldr	r3, [r5, #0]
 8007370:	0607      	lsls	r7, r0, #24
 8007372:	f103 0104 	add.w	r1, r3, #4
 8007376:	6029      	str	r1, [r5, #0]
 8007378:	d501      	bpl.n	800737e <_printf_i+0xbe>
 800737a:	681e      	ldr	r6, [r3, #0]
 800737c:	e003      	b.n	8007386 <_printf_i+0xc6>
 800737e:	0646      	lsls	r6, r0, #25
 8007380:	d5fb      	bpl.n	800737a <_printf_i+0xba>
 8007382:	f9b3 6000 	ldrsh.w	r6, [r3]
 8007386:	2e00      	cmp	r6, #0
 8007388:	da03      	bge.n	8007392 <_printf_i+0xd2>
 800738a:	232d      	movs	r3, #45	; 0x2d
 800738c:	4276      	negs	r6, r6
 800738e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007392:	485a      	ldr	r0, [pc, #360]	; (80074fc <_printf_i+0x23c>)
 8007394:	230a      	movs	r3, #10
 8007396:	e012      	b.n	80073be <_printf_i+0xfe>
 8007398:	682b      	ldr	r3, [r5, #0]
 800739a:	6820      	ldr	r0, [r4, #0]
 800739c:	1d19      	adds	r1, r3, #4
 800739e:	6029      	str	r1, [r5, #0]
 80073a0:	0605      	lsls	r5, r0, #24
 80073a2:	d501      	bpl.n	80073a8 <_printf_i+0xe8>
 80073a4:	681e      	ldr	r6, [r3, #0]
 80073a6:	e002      	b.n	80073ae <_printf_i+0xee>
 80073a8:	0641      	lsls	r1, r0, #25
 80073aa:	d5fb      	bpl.n	80073a4 <_printf_i+0xe4>
 80073ac:	881e      	ldrh	r6, [r3, #0]
 80073ae:	4853      	ldr	r0, [pc, #332]	; (80074fc <_printf_i+0x23c>)
 80073b0:	2f6f      	cmp	r7, #111	; 0x6f
 80073b2:	bf0c      	ite	eq
 80073b4:	2308      	moveq	r3, #8
 80073b6:	230a      	movne	r3, #10
 80073b8:	2100      	movs	r1, #0
 80073ba:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80073be:	6865      	ldr	r5, [r4, #4]
 80073c0:	60a5      	str	r5, [r4, #8]
 80073c2:	2d00      	cmp	r5, #0
 80073c4:	bfa2      	ittt	ge
 80073c6:	6821      	ldrge	r1, [r4, #0]
 80073c8:	f021 0104 	bicge.w	r1, r1, #4
 80073cc:	6021      	strge	r1, [r4, #0]
 80073ce:	b90e      	cbnz	r6, 80073d4 <_printf_i+0x114>
 80073d0:	2d00      	cmp	r5, #0
 80073d2:	d04b      	beq.n	800746c <_printf_i+0x1ac>
 80073d4:	4615      	mov	r5, r2
 80073d6:	fbb6 f1f3 	udiv	r1, r6, r3
 80073da:	fb03 6711 	mls	r7, r3, r1, r6
 80073de:	5dc7      	ldrb	r7, [r0, r7]
 80073e0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80073e4:	4637      	mov	r7, r6
 80073e6:	42bb      	cmp	r3, r7
 80073e8:	460e      	mov	r6, r1
 80073ea:	d9f4      	bls.n	80073d6 <_printf_i+0x116>
 80073ec:	2b08      	cmp	r3, #8
 80073ee:	d10b      	bne.n	8007408 <_printf_i+0x148>
 80073f0:	6823      	ldr	r3, [r4, #0]
 80073f2:	07de      	lsls	r6, r3, #31
 80073f4:	d508      	bpl.n	8007408 <_printf_i+0x148>
 80073f6:	6923      	ldr	r3, [r4, #16]
 80073f8:	6861      	ldr	r1, [r4, #4]
 80073fa:	4299      	cmp	r1, r3
 80073fc:	bfde      	ittt	le
 80073fe:	2330      	movle	r3, #48	; 0x30
 8007400:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007404:	f105 35ff 	addle.w	r5, r5, #4294967295
 8007408:	1b52      	subs	r2, r2, r5
 800740a:	6122      	str	r2, [r4, #16]
 800740c:	f8cd a000 	str.w	sl, [sp]
 8007410:	464b      	mov	r3, r9
 8007412:	aa03      	add	r2, sp, #12
 8007414:	4621      	mov	r1, r4
 8007416:	4640      	mov	r0, r8
 8007418:	f7ff fee4 	bl	80071e4 <_printf_common>
 800741c:	3001      	adds	r0, #1
 800741e:	d14a      	bne.n	80074b6 <_printf_i+0x1f6>
 8007420:	f04f 30ff 	mov.w	r0, #4294967295
 8007424:	b004      	add	sp, #16
 8007426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800742a:	6823      	ldr	r3, [r4, #0]
 800742c:	f043 0320 	orr.w	r3, r3, #32
 8007430:	6023      	str	r3, [r4, #0]
 8007432:	4833      	ldr	r0, [pc, #204]	; (8007500 <_printf_i+0x240>)
 8007434:	2778      	movs	r7, #120	; 0x78
 8007436:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800743a:	6823      	ldr	r3, [r4, #0]
 800743c:	6829      	ldr	r1, [r5, #0]
 800743e:	061f      	lsls	r7, r3, #24
 8007440:	f851 6b04 	ldr.w	r6, [r1], #4
 8007444:	d402      	bmi.n	800744c <_printf_i+0x18c>
 8007446:	065f      	lsls	r7, r3, #25
 8007448:	bf48      	it	mi
 800744a:	b2b6      	uxthmi	r6, r6
 800744c:	07df      	lsls	r7, r3, #31
 800744e:	bf48      	it	mi
 8007450:	f043 0320 	orrmi.w	r3, r3, #32
 8007454:	6029      	str	r1, [r5, #0]
 8007456:	bf48      	it	mi
 8007458:	6023      	strmi	r3, [r4, #0]
 800745a:	b91e      	cbnz	r6, 8007464 <_printf_i+0x1a4>
 800745c:	6823      	ldr	r3, [r4, #0]
 800745e:	f023 0320 	bic.w	r3, r3, #32
 8007462:	6023      	str	r3, [r4, #0]
 8007464:	2310      	movs	r3, #16
 8007466:	e7a7      	b.n	80073b8 <_printf_i+0xf8>
 8007468:	4824      	ldr	r0, [pc, #144]	; (80074fc <_printf_i+0x23c>)
 800746a:	e7e4      	b.n	8007436 <_printf_i+0x176>
 800746c:	4615      	mov	r5, r2
 800746e:	e7bd      	b.n	80073ec <_printf_i+0x12c>
 8007470:	682b      	ldr	r3, [r5, #0]
 8007472:	6826      	ldr	r6, [r4, #0]
 8007474:	6961      	ldr	r1, [r4, #20]
 8007476:	1d18      	adds	r0, r3, #4
 8007478:	6028      	str	r0, [r5, #0]
 800747a:	0635      	lsls	r5, r6, #24
 800747c:	681b      	ldr	r3, [r3, #0]
 800747e:	d501      	bpl.n	8007484 <_printf_i+0x1c4>
 8007480:	6019      	str	r1, [r3, #0]
 8007482:	e002      	b.n	800748a <_printf_i+0x1ca>
 8007484:	0670      	lsls	r0, r6, #25
 8007486:	d5fb      	bpl.n	8007480 <_printf_i+0x1c0>
 8007488:	8019      	strh	r1, [r3, #0]
 800748a:	2300      	movs	r3, #0
 800748c:	6123      	str	r3, [r4, #16]
 800748e:	4615      	mov	r5, r2
 8007490:	e7bc      	b.n	800740c <_printf_i+0x14c>
 8007492:	682b      	ldr	r3, [r5, #0]
 8007494:	1d1a      	adds	r2, r3, #4
 8007496:	602a      	str	r2, [r5, #0]
 8007498:	681d      	ldr	r5, [r3, #0]
 800749a:	6862      	ldr	r2, [r4, #4]
 800749c:	2100      	movs	r1, #0
 800749e:	4628      	mov	r0, r5
 80074a0:	f7f8 fe96 	bl	80001d0 <memchr>
 80074a4:	b108      	cbz	r0, 80074aa <_printf_i+0x1ea>
 80074a6:	1b40      	subs	r0, r0, r5
 80074a8:	6060      	str	r0, [r4, #4]
 80074aa:	6863      	ldr	r3, [r4, #4]
 80074ac:	6123      	str	r3, [r4, #16]
 80074ae:	2300      	movs	r3, #0
 80074b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80074b4:	e7aa      	b.n	800740c <_printf_i+0x14c>
 80074b6:	6923      	ldr	r3, [r4, #16]
 80074b8:	462a      	mov	r2, r5
 80074ba:	4649      	mov	r1, r9
 80074bc:	4640      	mov	r0, r8
 80074be:	47d0      	blx	sl
 80074c0:	3001      	adds	r0, #1
 80074c2:	d0ad      	beq.n	8007420 <_printf_i+0x160>
 80074c4:	6823      	ldr	r3, [r4, #0]
 80074c6:	079b      	lsls	r3, r3, #30
 80074c8:	d413      	bmi.n	80074f2 <_printf_i+0x232>
 80074ca:	68e0      	ldr	r0, [r4, #12]
 80074cc:	9b03      	ldr	r3, [sp, #12]
 80074ce:	4298      	cmp	r0, r3
 80074d0:	bfb8      	it	lt
 80074d2:	4618      	movlt	r0, r3
 80074d4:	e7a6      	b.n	8007424 <_printf_i+0x164>
 80074d6:	2301      	movs	r3, #1
 80074d8:	4632      	mov	r2, r6
 80074da:	4649      	mov	r1, r9
 80074dc:	4640      	mov	r0, r8
 80074de:	47d0      	blx	sl
 80074e0:	3001      	adds	r0, #1
 80074e2:	d09d      	beq.n	8007420 <_printf_i+0x160>
 80074e4:	3501      	adds	r5, #1
 80074e6:	68e3      	ldr	r3, [r4, #12]
 80074e8:	9903      	ldr	r1, [sp, #12]
 80074ea:	1a5b      	subs	r3, r3, r1
 80074ec:	42ab      	cmp	r3, r5
 80074ee:	dcf2      	bgt.n	80074d6 <_printf_i+0x216>
 80074f0:	e7eb      	b.n	80074ca <_printf_i+0x20a>
 80074f2:	2500      	movs	r5, #0
 80074f4:	f104 0619 	add.w	r6, r4, #25
 80074f8:	e7f5      	b.n	80074e6 <_printf_i+0x226>
 80074fa:	bf00      	nop
 80074fc:	0800792c 	.word	0x0800792c
 8007500:	0800793d 	.word	0x0800793d

08007504 <_realloc_r>:
 8007504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007508:	4680      	mov	r8, r0
 800750a:	4614      	mov	r4, r2
 800750c:	460e      	mov	r6, r1
 800750e:	b921      	cbnz	r1, 800751a <_realloc_r+0x16>
 8007510:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007514:	4611      	mov	r1, r2
 8007516:	f7ff bb0f 	b.w	8006b38 <_malloc_r>
 800751a:	b92a      	cbnz	r2, 8007528 <_realloc_r+0x24>
 800751c:	f7ff fcbe 	bl	8006e9c <_free_r>
 8007520:	4625      	mov	r5, r4
 8007522:	4628      	mov	r0, r5
 8007524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007528:	f000 f81b 	bl	8007562 <_malloc_usable_size_r>
 800752c:	4284      	cmp	r4, r0
 800752e:	4607      	mov	r7, r0
 8007530:	d802      	bhi.n	8007538 <_realloc_r+0x34>
 8007532:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8007536:	d812      	bhi.n	800755e <_realloc_r+0x5a>
 8007538:	4621      	mov	r1, r4
 800753a:	4640      	mov	r0, r8
 800753c:	f7ff fafc 	bl	8006b38 <_malloc_r>
 8007540:	4605      	mov	r5, r0
 8007542:	2800      	cmp	r0, #0
 8007544:	d0ed      	beq.n	8007522 <_realloc_r+0x1e>
 8007546:	42bc      	cmp	r4, r7
 8007548:	4622      	mov	r2, r4
 800754a:	4631      	mov	r1, r6
 800754c:	bf28      	it	cs
 800754e:	463a      	movcs	r2, r7
 8007550:	f7ff fc96 	bl	8006e80 <memcpy>
 8007554:	4631      	mov	r1, r6
 8007556:	4640      	mov	r0, r8
 8007558:	f7ff fca0 	bl	8006e9c <_free_r>
 800755c:	e7e1      	b.n	8007522 <_realloc_r+0x1e>
 800755e:	4635      	mov	r5, r6
 8007560:	e7df      	b.n	8007522 <_realloc_r+0x1e>

08007562 <_malloc_usable_size_r>:
 8007562:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007566:	1f18      	subs	r0, r3, #4
 8007568:	2b00      	cmp	r3, #0
 800756a:	bfbc      	itt	lt
 800756c:	580b      	ldrlt	r3, [r1, r0]
 800756e:	18c0      	addlt	r0, r0, r3
 8007570:	4770      	bx	lr
	...

08007574 <_init>:
 8007574:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007576:	bf00      	nop
 8007578:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800757a:	bc08      	pop	{r3}
 800757c:	469e      	mov	lr, r3
 800757e:	4770      	bx	lr

08007580 <_fini>:
 8007580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007582:	bf00      	nop
 8007584:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007586:	bc08      	pop	{r3}
 8007588:	469e      	mov	lr, r3
 800758a:	4770      	bx	lr
